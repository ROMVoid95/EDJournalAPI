{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-\\.]+"},"docs":[{"location":"","text":"Introduction \u00b6 Elite:Dangerous writes a network log file primarily to help when investigating problems. Third-party tools developers have been reading some of the entries in the network log file, mainly in order to track the player's location. There is a clear demand from players for third-party tools, and from tools developers for more information from the game and/or server api. The new Player Journal provides a stream of information about gameplay events which can be used by tools developers to provide richer, more detailed tools to enhance the player experience. The data records written to this journal are much more high-level then that written to the network log. A short example of a player journal file ( out of date, some events may have additional data ): {\"timestamp\":\"2016-06-10T14:31:00Z\", \"event\":\"FileHeader\", \"part\":1, \"gameversion\":\"2.2\", \"build\":\"r113684 \" }, {\"timestamp\":\"2016-06-10T14:32:03Z\", \"event\":\"LoadGame\", \"Commander\":\"HRC1\", \"Ship\":\"SideWinder\", \"ShipID\":1, \"GameMode\":\"Open\", \"Credits\":600120, \"Loan\":0 } {\"timestamp\":\"2016-06-10T14:32:03Z\", \"event\":\"Rank\", \"Combat\":0, \"Trade\":0, \"Explore\":1, \"Empire\":0, \"Federation\":0, \"CQC\":0 } {\"timestamp\":\"2016-06-10T14:32:03Z\", \"event\":\"Progress\", \"Combat\":0, \"Trade\":0, \"Explore\":73, \"Empire\":0, \"Federation\":0, \"CQC\":0 } {\"timestamp\":\"2016-06-10T14:32:15Z\", \"event\":\"Location\", \"StarSystem\":\"Asellus Primus\", \"StarPos\":[-23.938,40.875,-1.344] } {\"timestamp\":\"2016-06-10T14:32:16Z\", \"event\":\"Docked\", \"StationName\":\"Beagle 2 Landing\", \"StationType\":\"Coriolis\" } {\"timestamp\":\"2016-06-10T14:32:38Z\", \"event\":\"RefuelAll\", \"Cost\":12, \"Amount\":0.234493 } {\"timestamp\":\"2016-06-10T14:34:25Z\", \"event\":\"Undocked\", \"StationName\":\"Beagle 2 Landing\", \"StationType\":\"Coriolis\" } {\"timestamp\":\"2016-06-10T14:35:00Z\", \"event\":\"FSDJump\", \"StarSystem\":\"HIP 78085\", \"StarPos\":[120.250,40.219,268.594], \"JumpDist\":36.034 } {\"timestamp\":\"2016-06-10T14:35:22Z\", \"event\":\"Scan\", \"BodyName\":\"HIP 78085 A\", \"StarType\":\"G\" } {\"timestamp\":\"2016-06-10T14:36:10Z\", \"event\":\"FSDJump\", \"StarSystem\":\"Praea Euq NW-W b1-3\", \"StarPos\":[120.719,34.188,271.750], \"JumpDist\":6.823 } {\"timestamp\":\"2016-06-10T14:36:42Z\", \"event\":\"Scan\", \"BodyName\":\"Praea Euq NW-W b1-3\", \"StarType\":\"M\" } {\"timestamp\":\"2016-06-10T14:38:50Z\", \"event\":\"Scan\", \"BodyName\":\"Praea Euq NW-W b1-3 3\", \"Description\":\"Icy body with neon rich atmosphere and major water geysers volcanism\" } {\"timestamp\":\"2016-06-10T14:39:08Z\", \"event\":\"Scan\", \"BodyName\":\"Praea Euq NW-W b1-3 3 a\", \"Description\":\"Tidally locked Icy body\" } {\"timestamp\":\"2016-06-10T14:41:03Z\", \"event\":\"FSDJump\", \"StarSystem\":\"Asellus Primus\", \"StarPos\":[-23.938,40.875,-1.344], \"JumpDist\":39.112 } {\"timestamp\":\"2016-06-10T14:41:26Z\", \"event\":\"SupercruiseExit\", \"StarSystem\":\"Asellus Primus\", \"Body\":\"Beagle 2 Landing\" } {\"timestamp\":\"2016-06-10T14:41:29Z\", \"event\":\"Docked\", \"StationName\":\"Beagle 2 Landing\", \"StationType\":\"Coriolis\" } {\"timestamp\":\"2016-06-10T14:41:58Z\", \"event\":\"SellExplorationData\", \"Systems\":[ \"HIP 78085\", \"Praea Euq NW-W b1-3\" ], \"Discovered\":[ \"HIP 78085 A\", \"Praea Euq NW-W b1-3\", \"Praea Euq NW-W b1-3 3 a\", \"Praea Euq NW-W b1-3 3\" ], \"BaseValue\":10822, \"Bonus\":3959 } ChangeLog \u00b6 Version 37 Changes for Odyssey up to update14 (May 2023) The \u201cCarrierJump\u201d event is now written to the journal again on a carrier hyperspace jump instead of it writing a \u201cLocation\u201d event. \u2018MissionFailed\u2019 event is now written when the mission enters the failed state instead of when the mission is abandoned in the transactions panel. Ensured StationState is documented in the \u201cDocked\u201d event \u201cStartJump\u201d now sent for jumps while in a taxi, new field added to differentiate between a taxi jump and a jump in a pleyers own ship. Added the param \u201cIsThargoid\u201d to the events \u201cInterdicted\u201d and \u201cEscapeInterdiction\u201d Added new event \u201cSupercruiseDestinationDrop\u201d which is sent when dropping out of supercruise at a targeted destination. Added Thargoid war data to the events \u201cFSDJump\u201d, \u201cCarrierJump\u201d and \u201cLocation\u201d Added documentation for the ClearImpound event(no change, was just missing from documentation) Added organic variant to the \u201cScanOrganic\u201d and \u201cSellOrganicData\u201d events Fixed the \u201cFactionKillBond\u201d event sometimes not getting written Version 36 Changes for Odyssey up to update14 (November 2022) Updated the \"MissionCompleted\" documentation to include the optional params \"DestinationSystem\", \"DestinationStation\" and \"DestinationSettlement\". No functional change, these params where already present. Added a new flag to Status.json to indicate if a charging fsd is charging a hyperspace jump Extended the UpgradeSuit/UpgradeWeapon events to include the resources used for the upgrade Added \"DepartureTime\" to the \"CarrierJumpRequest\" event Version 35 Changes for Odyssey up to update13 (July 2022) A negotiated mission now writes event \"MissionAccepted\" only when the mission is accepted, not when the negotiation happens. Handing in a mission to a mission giver while on foot will now write the \"MissionCompleted\" event Accepting an on foot mission will now report the destination system and destination settlement. \"DestinationSettlement\" added as a new optional parameter for the \"MissionAccepted\" event The route in NavRoute.json is now cleared when the route is cleared. New journal event \"NavRouteClear\" Extended the SAASignalsFound event to include the genuses on the scanned planet Fixed the \"PayFines\" event being written instead of \"PayBounties\" when paying off a bounty Version 34 Changes for Odyssey up to update12 (May 2022) BookTaxi: add \"retreat\" flag CodexEntry: add BodyID BuyMicroResources: multi-buy format added FCMaterials \u2013 fleet carrier materials pricelist FSSBodySignals: extra info during a scan (actually from Update 6 last year) Bugfix: Resurrect event was sometimes written with blank strings Version 33 Changes for Odyssey up to update 11 (March 2022) new flags in Status flags to distinguish between telepresence and physical crew the following events have a new bool value Telepresence: ChangeCrewRole EndCrewSession CrewMemberJoins CrewMemberQuits CrewLaunchFighter CrewMemberRoleChange JoinACrew QuitACrew KickCrewMember LaunchSRV, DockSRV and SRVDestroyed events now add a new value \"SRVType\" (from Oct 2021 update) when scanning one body of a binary pair, you will now get an event detailing the orbital parameters of their BaryCentre (from Sep 2021 update) Version 32 Changes up to Odyssey Update 5 (July 2021) The \"LoadGame\" event now includes the language, gameversion, and Build number Include module class and modifications in suit loadout Changes to the way the ShipLocker contents are listed Updated description of CommunityGoal event Include info on landing pads in DockingRequested and Docked Added balance and travel destination in Status.json Fixed bug creating invalid ShipLocker.json Fixed bug re ADS mode in Status flags Added names for military and exobiolost ranks in appendix Corrected details of the contents of the NavRoute file Version 31 Changes for Odyssey release (May 2021) Omit \"MissionID\":18446744073709551615 in inventory data when it is not mission-related Ensure the Touchdown/Liftoff events are logged when recalling/dismissing your empty ship Improve data written to journal on Touchdown/Takeoff, (with Lat/Lon) when recalling/dismissing unoccupied ship Add flags in status.json for 'glide mode', and for hangar, social space, etc Properly register strings to avoid blank event name for \"RedeemVoucher\" Get station name and station type for planetary surface stations Provide a new common method for determining Latitude & Longitude, used for CodexEntry, ApproachSettlement, Touchdown, Liftoff \u2013 fixes data that was sometimes missing Improved tracking of backpack contents \u2013 new Backpack and BackpackChange events SuitLoadout on starting on-foot, or when disembarking: Fix station type when docking at FleetCarrier Fix bug with incorrect LoadoutID in CreateSuitLoadout event Version 30 Changes for Odyssey Alpha 4 See sections 12, 14 Version 29 Changes for \"Odyssey\" See section 12 Version 28 Changes for v3.7 beta 2 (May 2020) new events added: CarrierJumpCancelled CarrierNameChanged (with callsign, name, carrierid) new NavRoute.json file events with new data: CarrierJumpRequest - added Body (name) and BodyID Bounty - include localised Target FSDTarget - include StarClass bugs fixed: CarrierStats - don't write a ReservePercent value when in debt Status.json - flags fixed in SRV, and Lat/Lon in station Loadout - fix cases where loadout data was mix of SLF and mothership EngineerProgress - now written when state updates RefuelAll, RepairAll - fix null strings Docked - fix bug where docking at a FC doesn't sometimes pick up nearby station name Version 27 Changes for v3.7 beta 1 (April 2020) Added events relating to Fleet Carriers (\u00a711) New CargoTransfer event (\u00a713.52) Change to Repair event (\u00a78.38) Added some station services (see 'Docked' \u00a74.2) Version 26 - Changes for v3.5 (September 2019) Version 25 - Changes for v3.4 (April 2019) Version 24 Version 22 \u2013 in v3.3 (beta 4) Version 21 \u2013 for v3.3 (beta 2) Version 20 \u2013 for v3.3 (beta 1) (released 30th Oct 2018) Version 19 \u2013 for v3.3 (preview released 20th Sept 2018) Version 18 \u2013 for v3.0.4 (27th March 2018) Version 17 \u2013 for v3.0.3 (19th March 2018) Version 16 \u2013 for v3.0.2 (5th March 2018) Version 15 \u2013 for v3.0 \u2013 beta3 (6th Feb 2018) Version 14 \u2013 for v3.0 \u2013 beta1 (25/Jan/2018) Version 13 - In 2.4 Open beta (24th Aug 2017) Version 12 - In 2.4 beta1 (17th Aug 2017) Version 11 published 26/Jun/2017 Version 10 published 29/Mar/2017 (for v2.3 beta 5) Version 9 published 20/Feb/2017 (for v2.3 beta) Version 8 published 10/Jan/2017 (for v2.2.03) Version 7 published 15/Nov/2016 (for release 2.2.02) Version 6 published 26/Oct/2016 (for 2.2 public release) Version 1 was published 20/July/2016","title":"Introduction"},{"location":"#introduction","text":"Elite:Dangerous writes a network log file primarily to help when investigating problems. Third-party tools developers have been reading some of the entries in the network log file, mainly in order to track the player's location. There is a clear demand from players for third-party tools, and from tools developers for more information from the game and/or server api. The new Player Journal provides a stream of information about gameplay events which can be used by tools developers to provide richer, more detailed tools to enhance the player experience. The data records written to this journal are much more high-level then that written to the network log. A short example of a player journal file ( out of date, some events may have additional data ): {\"timestamp\":\"2016-06-10T14:31:00Z\", \"event\":\"FileHeader\", \"part\":1, \"gameversion\":\"2.2\", \"build\":\"r113684 \" }, {\"timestamp\":\"2016-06-10T14:32:03Z\", \"event\":\"LoadGame\", \"Commander\":\"HRC1\", \"Ship\":\"SideWinder\", \"ShipID\":1, \"GameMode\":\"Open\", \"Credits\":600120, \"Loan\":0 } {\"timestamp\":\"2016-06-10T14:32:03Z\", \"event\":\"Rank\", \"Combat\":0, \"Trade\":0, \"Explore\":1, \"Empire\":0, \"Federation\":0, \"CQC\":0 } {\"timestamp\":\"2016-06-10T14:32:03Z\", \"event\":\"Progress\", \"Combat\":0, \"Trade\":0, \"Explore\":73, \"Empire\":0, \"Federation\":0, \"CQC\":0 } {\"timestamp\":\"2016-06-10T14:32:15Z\", \"event\":\"Location\", \"StarSystem\":\"Asellus Primus\", \"StarPos\":[-23.938,40.875,-1.344] } {\"timestamp\":\"2016-06-10T14:32:16Z\", \"event\":\"Docked\", \"StationName\":\"Beagle 2 Landing\", \"StationType\":\"Coriolis\" } {\"timestamp\":\"2016-06-10T14:32:38Z\", \"event\":\"RefuelAll\", \"Cost\":12, \"Amount\":0.234493 } {\"timestamp\":\"2016-06-10T14:34:25Z\", \"event\":\"Undocked\", \"StationName\":\"Beagle 2 Landing\", \"StationType\":\"Coriolis\" } {\"timestamp\":\"2016-06-10T14:35:00Z\", \"event\":\"FSDJump\", \"StarSystem\":\"HIP 78085\", \"StarPos\":[120.250,40.219,268.594], \"JumpDist\":36.034 } {\"timestamp\":\"2016-06-10T14:35:22Z\", \"event\":\"Scan\", \"BodyName\":\"HIP 78085 A\", \"StarType\":\"G\" } {\"timestamp\":\"2016-06-10T14:36:10Z\", \"event\":\"FSDJump\", \"StarSystem\":\"Praea Euq NW-W b1-3\", \"StarPos\":[120.719,34.188,271.750], \"JumpDist\":6.823 } {\"timestamp\":\"2016-06-10T14:36:42Z\", \"event\":\"Scan\", \"BodyName\":\"Praea Euq NW-W b1-3\", \"StarType\":\"M\" } {\"timestamp\":\"2016-06-10T14:38:50Z\", \"event\":\"Scan\", \"BodyName\":\"Praea Euq NW-W b1-3 3\", \"Description\":\"Icy body with neon rich atmosphere and major water geysers volcanism\" } {\"timestamp\":\"2016-06-10T14:39:08Z\", \"event\":\"Scan\", \"BodyName\":\"Praea Euq NW-W b1-3 3 a\", \"Description\":\"Tidally locked Icy body\" } {\"timestamp\":\"2016-06-10T14:41:03Z\", \"event\":\"FSDJump\", \"StarSystem\":\"Asellus Primus\", \"StarPos\":[-23.938,40.875,-1.344], \"JumpDist\":39.112 } {\"timestamp\":\"2016-06-10T14:41:26Z\", \"event\":\"SupercruiseExit\", \"StarSystem\":\"Asellus Primus\", \"Body\":\"Beagle 2 Landing\" } {\"timestamp\":\"2016-06-10T14:41:29Z\", \"event\":\"Docked\", \"StationName\":\"Beagle 2 Landing\", \"StationType\":\"Coriolis\" } {\"timestamp\":\"2016-06-10T14:41:58Z\", \"event\":\"SellExplorationData\", \"Systems\":[ \"HIP 78085\", \"Praea Euq NW-W b1-3\" ], \"Discovered\":[ \"HIP 78085 A\", \"Praea Euq NW-W b1-3\", \"Praea Euq NW-W b1-3 3 a\", \"Praea Euq NW-W b1-3 3\" ], \"BaseValue\":10822, \"Bonus\":3959 }","title":"Introduction"},{"location":"#changelog","text":"Version 37 Changes for Odyssey up to update14 (May 2023) The \u201cCarrierJump\u201d event is now written to the journal again on a carrier hyperspace jump instead of it writing a \u201cLocation\u201d event. \u2018MissionFailed\u2019 event is now written when the mission enters the failed state instead of when the mission is abandoned in the transactions panel. Ensured StationState is documented in the \u201cDocked\u201d event \u201cStartJump\u201d now sent for jumps while in a taxi, new field added to differentiate between a taxi jump and a jump in a pleyers own ship. Added the param \u201cIsThargoid\u201d to the events \u201cInterdicted\u201d and \u201cEscapeInterdiction\u201d Added new event \u201cSupercruiseDestinationDrop\u201d which is sent when dropping out of supercruise at a targeted destination. Added Thargoid war data to the events \u201cFSDJump\u201d, \u201cCarrierJump\u201d and \u201cLocation\u201d Added documentation for the ClearImpound event(no change, was just missing from documentation) Added organic variant to the \u201cScanOrganic\u201d and \u201cSellOrganicData\u201d events Fixed the \u201cFactionKillBond\u201d event sometimes not getting written Version 36 Changes for Odyssey up to update14 (November 2022) Updated the \"MissionCompleted\" documentation to include the optional params \"DestinationSystem\", \"DestinationStation\" and \"DestinationSettlement\". No functional change, these params where already present. Added a new flag to Status.json to indicate if a charging fsd is charging a hyperspace jump Extended the UpgradeSuit/UpgradeWeapon events to include the resources used for the upgrade Added \"DepartureTime\" to the \"CarrierJumpRequest\" event Version 35 Changes for Odyssey up to update13 (July 2022) A negotiated mission now writes event \"MissionAccepted\" only when the mission is accepted, not when the negotiation happens. Handing in a mission to a mission giver while on foot will now write the \"MissionCompleted\" event Accepting an on foot mission will now report the destination system and destination settlement. \"DestinationSettlement\" added as a new optional parameter for the \"MissionAccepted\" event The route in NavRoute.json is now cleared when the route is cleared. New journal event \"NavRouteClear\" Extended the SAASignalsFound event to include the genuses on the scanned planet Fixed the \"PayFines\" event being written instead of \"PayBounties\" when paying off a bounty Version 34 Changes for Odyssey up to update12 (May 2022) BookTaxi: add \"retreat\" flag CodexEntry: add BodyID BuyMicroResources: multi-buy format added FCMaterials \u2013 fleet carrier materials pricelist FSSBodySignals: extra info during a scan (actually from Update 6 last year) Bugfix: Resurrect event was sometimes written with blank strings Version 33 Changes for Odyssey up to update 11 (March 2022) new flags in Status flags to distinguish between telepresence and physical crew the following events have a new bool value Telepresence: ChangeCrewRole EndCrewSession CrewMemberJoins CrewMemberQuits CrewLaunchFighter CrewMemberRoleChange JoinACrew QuitACrew KickCrewMember LaunchSRV, DockSRV and SRVDestroyed events now add a new value \"SRVType\" (from Oct 2021 update) when scanning one body of a binary pair, you will now get an event detailing the orbital parameters of their BaryCentre (from Sep 2021 update) Version 32 Changes up to Odyssey Update 5 (July 2021) The \"LoadGame\" event now includes the language, gameversion, and Build number Include module class and modifications in suit loadout Changes to the way the ShipLocker contents are listed Updated description of CommunityGoal event Include info on landing pads in DockingRequested and Docked Added balance and travel destination in Status.json Fixed bug creating invalid ShipLocker.json Fixed bug re ADS mode in Status flags Added names for military and exobiolost ranks in appendix Corrected details of the contents of the NavRoute file Version 31 Changes for Odyssey release (May 2021) Omit \"MissionID\":18446744073709551615 in inventory data when it is not mission-related Ensure the Touchdown/Liftoff events are logged when recalling/dismissing your empty ship Improve data written to journal on Touchdown/Takeoff, (with Lat/Lon) when recalling/dismissing unoccupied ship Add flags in status.json for 'glide mode', and for hangar, social space, etc Properly register strings to avoid blank event name for \"RedeemVoucher\" Get station name and station type for planetary surface stations Provide a new common method for determining Latitude & Longitude, used for CodexEntry, ApproachSettlement, Touchdown, Liftoff \u2013 fixes data that was sometimes missing Improved tracking of backpack contents \u2013 new Backpack and BackpackChange events SuitLoadout on starting on-foot, or when disembarking: Fix station type when docking at FleetCarrier Fix bug with incorrect LoadoutID in CreateSuitLoadout event Version 30 Changes for Odyssey Alpha 4 See sections 12, 14 Version 29 Changes for \"Odyssey\" See section 12 Version 28 Changes for v3.7 beta 2 (May 2020) new events added: CarrierJumpCancelled CarrierNameChanged (with callsign, name, carrierid) new NavRoute.json file events with new data: CarrierJumpRequest - added Body (name) and BodyID Bounty - include localised Target FSDTarget - include StarClass bugs fixed: CarrierStats - don't write a ReservePercent value when in debt Status.json - flags fixed in SRV, and Lat/Lon in station Loadout - fix cases where loadout data was mix of SLF and mothership EngineerProgress - now written when state updates RefuelAll, RepairAll - fix null strings Docked - fix bug where docking at a FC doesn't sometimes pick up nearby station name Version 27 Changes for v3.7 beta 1 (April 2020) Added events relating to Fleet Carriers (\u00a711) New CargoTransfer event (\u00a713.52) Change to Repair event (\u00a78.38) Added some station services (see 'Docked' \u00a74.2) Version 26 - Changes for v3.5 (September 2019) Version 25 - Changes for v3.4 (April 2019) Version 24 Version 22 \u2013 in v3.3 (beta 4) Version 21 \u2013 for v3.3 (beta 2) Version 20 \u2013 for v3.3 (beta 1) (released 30th Oct 2018) Version 19 \u2013 for v3.3 (preview released 20th Sept 2018) Version 18 \u2013 for v3.0.4 (27th March 2018) Version 17 \u2013 for v3.0.3 (19th March 2018) Version 16 \u2013 for v3.0.2 (5th March 2018) Version 15 \u2013 for v3.0 \u2013 beta3 (6th Feb 2018) Version 14 \u2013 for v3.0 \u2013 beta1 (25/Jan/2018) Version 13 - In 2.4 Open beta (24th Aug 2017) Version 12 - In 2.4 beta1 (17th Aug 2017) Version 11 published 26/Jun/2017 Version 10 published 29/Mar/2017 (for v2.3 beta 5) Version 9 published 20/Feb/2017 (for v2.3 beta) Version 8 published 10/Jan/2017 (for v2.2.03) Version 7 published 15/Nov/2016 (for release 2.2.02) Version 6 published 26/Oct/2016 (for 2.2 public release) Version 1 was published 20/July/2016","title":"ChangeLog"},{"location":"appendix/","text":"Appendix \u00b6 Ranks \u00b6 Combat ranks : Index Rank 0 'Harmless' 1 'Mostly Harmless' 2 'Novice' 3 'Competent' 4 'Expert' 5 'Master' 6 'Dangerous' 7 'Deadly' 8 'Elite' Trade ranks : Index Rank 0 'Penniless' 1 'Mostly Pennliess' 2 'Peddler' 3 'Dealer' 4 'Merchant' 5 'Broker' 6 'Entrepreneur' 7 'Tycoon' 8 'Elite' Exploration ranks : Index Rank 0 'Aimless' 1 'Mostly Aimless' 2 'Scout' 3 'Surveyor' 4 'Explorer' 5 'Pathfinder' 6 'Ranger' 7 'Pioneer' 8 'Elite' Federation ranks : Index Rank 0 'None' 1 'Recruit' 2 'Cadet' 3 'Midshipman' 4 'Petty Officer' 5 'Chief Petty Officer' 6 'Warrant Officer' 7 'Ensign' 8 'Lieutenant' 9 'Lt. Commander' 10 'Post Commander' 11 'Post Captain' 12 'Rear Admiral' 13 'Vice Admiral' 14 'Admiral' Empire ranks : Index Rank 0 'None' 1 'Outsider' 2 'Serf' 3 'Master' 4 'Squire' 5 'Knight' 6 'Lord' 7 'Baron' 8 'Viscount ' 9 'Count' 10 'Earl' 11 'Marquis' 12 'Duke' 13 'Prince' 14 'King' CQC ranks : Index Rank 0 'Helpless' 1 'Mostly Helpless' 2 'Amateur' 3 'Semi Professional' 4 'Professional' 5 'Champion' 6 'Hero' 7 'Legend' 8 'Elite' Military Ranks : Index Rank 0 Defenceless 1 Mostly Defenceless 2 Rookie 3 Soldier 4 Gunslinger 5 Warrior 6 Gladiator 7 Deadeye 8 Elite Exobiologist Ranks : Index Rank 0 Directionless 1 Mostly Directionless 2 Compiler 3 Collector 4 Cataloguer 5 Taxonomist 6 Ecologist 7 Geneticist 8 Elite Star Descriptions \u00b6 ( Main sequence :) O B A F G K M L T Y ( Proto stars :) TTS AeBe ( Wolf-Rayet :) W WN WNC WC WO ( Carbon stars :) CS C CN CJ CH CHd MS S ( white dwarfs :) D DA DAB DAO DAZ DAV DB DBZ DBV DO DOV DQ DC DCV DX N (= Neutron ) H (= Black Hole ) X (= exotic ) SupermassiveBlackHole A_BlueWhiteSuperGiant F_WhiteSuperGiant M_RedSuperGiant M_RedGiant K_OrangeGiant RoguePlanet Nebula StellarRemnantNebula Planet Classes \u00b6 Metal rich body High metal content body Rocky body Icy body Rocky ice body Earthlike body Water world Ammonia world Water giant Water giant with life Gas giant with water based life Gas giant with ammonia based life Sudarsky class I gas giant (also class II, III, IV, V) Helium rich gas giant Helium gas giant Atmosphere Classes \u00b6 No atmosphere Suitable for water-based life Ammonia and oxygen Ammonia Water Carbon dioxide Sulphur dioxide Nitrogen Water-rich Methane-rich Ammonia-rich Carbon dioxide-rich Methane Helium Silicate vapour Metallic vapour Neon-rich Argon-rich Neon Argon Oxygen Volcanism classes \u00b6 (all with possible 'minor' or 'major' qualifier) None Water Magma Sulphur Dioxide Magma Ammonia Magma Methane Magma Nitrogen Magma Silicate Magma Metallic Magma Water Geysers Carbon Dioxide Geysers Ammonia Geysers Methane Geysers Nitrogen Geysers Helium Geysers Silicate Vapour Geysers Crime types \u00b6 Assault Murder Piracy Interdiction IllegalCargo DisobeyPolice FireInNoFireZone FireInStation DumpingDangerous DumpingNearStation DockingMinor_BlockingAirlock DockingMajor_BlockingAirlock DockingMinor_BlockingLandingPad DockingMajor_BlockingLandingPad DockingMinor_Trespass DockingMajor_Trespass CollidedAtSpeedInNoFireZone CollidedAtSpeedInNoFireZone_HullDamage BodyType values \u00b6 \"Null\" (eg the barycentre of a binary star system) \"Star\" \"Planet\" \"PlanetaryRing\" \"StellarRing\" \"Station\" \"AsteroidCluster\" Gases in AtmosphereComposition \u00b6 Water Oxygen CarbonDioxide SulphurDioxide Ammonia Methane Nitrogen Hydrogen Helium Neon Argon Silicates Iron Star Luminosity classes \u00b6 0 I Ia0 Ia Ib Iab II IIa IIab IIb III IIIa IIIab IIIb IV IVa IVab IVb V Va Vab Vb Vz VI VII Engineer IDs \u00b6 ID Name 300000 Didi Vatermann 300010 Bill Turner 300030 Broo Tarquin 300040 The Sarge 300050 Zachariah Nemo 300080 Liz Ryder 300090 Hera Tani 300100 Felicity Farseer 300110 Ram Tah 300120 Lei Cheung 300140 Col. Bris Dekker 300160 Elvira Martuuk 300180 The Dweller 300200 Marco Quent 300210 Selene Jean 300220 Prof. Palin 300230 Lori Jameson 300250 Juri Ishmaak 300260 Tod 'The Blaster' McQuinn 300270 Tiana Fortune Module Attributes \u00b6 These are the named attributes on modules, but not all are modifiable via engineering: (note, based on enum eItemInfoFieldType) Size Class Mass Integrity PowerDraw BootTime ShieldBankSpinUp ShieldBankDuration ShieldBankReinforcement ShieldBankHeat DamagePerSecond Damage DistributorDraw ThermalLoad ArmourPenetration MaximumRange ShotSpeed RateOfFire BurstRateOfFire BurstSize AmmoClipSize AmmoMaximum RoundsPerShot ReloadTime BreachDamage MinBreachChance MaxBreachChance Jitter WeaponMode DamageType ShieldGenMinimumMass ShieldGenOptimalMass ShieldGenMaximumMass ShieldGenMinStrength ShieldGenStrength ShieldGenMaxStrength RegenRate BrokenRegenRate EnergyPerRegen FSDOptimalMass FSDHeatRate MaxFuelPerJump EngineMinimumMass EngineOptimalMass MaximumMass EngineMinPerformance EngineOptPerformance EngineMaxPerformance EngineHeatRate PowerCapacity HeatEfficiency WeaponsCapacity WeaponsRecharge EnginesCapacity EnginesRecharge SystemsCapacity SystemsRecharge DefenceModifierHealthMultiplier DefenceModifierHealthAddition DefenceModifierShieldMultiplier DefenceModifierShieldAddition KineticResistance ThermicResistance ExplosiveResistance CausticResistance FSDInterdictorRange FSDInterdictorFacingLimit ScannerRange DiscoveryScannerRange DiscoveryScannerPassiveRange MaxAngle ScannerTimeToScan ChaffJamDuration ECMRange ECMTimeToCharge ECMActivePowerConsumption ECMHeat ECMCooldown HeatSinkDuration ThermalDrain NumBuggySlots CargoCapacity MaxActiveDrones DroneTargetRange DroneLifeTime DroneSpeed DroneMultiTargetSpeed DroneFuelCapacity DroneRepairCapacity DroneHackingTime DroneMinJettisonedCargo DroneMaxJettisonedCargo FuelScoopRate FuelCapacity OxygenTimeCapacity RefineryBins AFMRepairCapacity AFMRepairConsumption AFMRepairPerAmmo MaxRange SensorTargetScanAngle Range VehicleCargoCapacity VehicleHullMass VehicleFuelCapacity VehicleArmourHealth VehicleShieldHealth FighterMaxSpeed FighterBoostSpeed FighterPitchRate FighterDPS FighterYawRate FighterRollRate CabinCapacity CabinClass DisruptionBarrierRange DisruptionBarrierChargeDuration DisruptionBarrierActivePower DisruptionBarrierCooldown WingDamageReduction WingMinDuration WingMaxDuration ShieldSacrificeAmountRemoved ShieldSacrificeAmountGiven FSDJumpRangeBoost FSDFuelUseIncrease BoostSpeedMultiplier BoostAugmenterPowerUse ModuleDefenceAbsorption FalloffRange DSS_RangeMult DSS_AngleMult DSS_RateMult The following module attributes have enum values, written as a string, all others are float WeaponMode should be one of: ForwardFire Gimbal TargetOnly FireAtWill Manual NoMode DamageType should be one of: Kinetic Thermal Explosive Collision Thargoid AntiThargoid CabinClass should be one of: Prison Economy Standard Business First Luxury","title":"Appendix"},{"location":"appendix/#appendix","text":"","title":"Appendix"},{"location":"appendix/#ranks","text":"Combat ranks : Index Rank 0 'Harmless' 1 'Mostly Harmless' 2 'Novice' 3 'Competent' 4 'Expert' 5 'Master' 6 'Dangerous' 7 'Deadly' 8 'Elite' Trade ranks : Index Rank 0 'Penniless' 1 'Mostly Pennliess' 2 'Peddler' 3 'Dealer' 4 'Merchant' 5 'Broker' 6 'Entrepreneur' 7 'Tycoon' 8 'Elite' Exploration ranks : Index Rank 0 'Aimless' 1 'Mostly Aimless' 2 'Scout' 3 'Surveyor' 4 'Explorer' 5 'Pathfinder' 6 'Ranger' 7 'Pioneer' 8 'Elite' Federation ranks : Index Rank 0 'None' 1 'Recruit' 2 'Cadet' 3 'Midshipman' 4 'Petty Officer' 5 'Chief Petty Officer' 6 'Warrant Officer' 7 'Ensign' 8 'Lieutenant' 9 'Lt. Commander' 10 'Post Commander' 11 'Post Captain' 12 'Rear Admiral' 13 'Vice Admiral' 14 'Admiral' Empire ranks : Index Rank 0 'None' 1 'Outsider' 2 'Serf' 3 'Master' 4 'Squire' 5 'Knight' 6 'Lord' 7 'Baron' 8 'Viscount ' 9 'Count' 10 'Earl' 11 'Marquis' 12 'Duke' 13 'Prince' 14 'King' CQC ranks : Index Rank 0 'Helpless' 1 'Mostly Helpless' 2 'Amateur' 3 'Semi Professional' 4 'Professional' 5 'Champion' 6 'Hero' 7 'Legend' 8 'Elite' Military Ranks : Index Rank 0 Defenceless 1 Mostly Defenceless 2 Rookie 3 Soldier 4 Gunslinger 5 Warrior 6 Gladiator 7 Deadeye 8 Elite Exobiologist Ranks : Index Rank 0 Directionless 1 Mostly Directionless 2 Compiler 3 Collector 4 Cataloguer 5 Taxonomist 6 Ecologist 7 Geneticist 8 Elite","title":"Ranks"},{"location":"appendix/#star_descriptions","text":"( Main sequence :) O B A F G K M L T Y ( Proto stars :) TTS AeBe ( Wolf-Rayet :) W WN WNC WC WO ( Carbon stars :) CS C CN CJ CH CHd MS S ( white dwarfs :) D DA DAB DAO DAZ DAV DB DBZ DBV DO DOV DQ DC DCV DX N (= Neutron ) H (= Black Hole ) X (= exotic ) SupermassiveBlackHole A_BlueWhiteSuperGiant F_WhiteSuperGiant M_RedSuperGiant M_RedGiant K_OrangeGiant RoguePlanet Nebula StellarRemnantNebula","title":"Star Descriptions"},{"location":"appendix/#planet_classes","text":"Metal rich body High metal content body Rocky body Icy body Rocky ice body Earthlike body Water world Ammonia world Water giant Water giant with life Gas giant with water based life Gas giant with ammonia based life Sudarsky class I gas giant (also class II, III, IV, V) Helium rich gas giant Helium gas giant","title":"Planet Classes"},{"location":"appendix/#atmosphere_classes","text":"No atmosphere Suitable for water-based life Ammonia and oxygen Ammonia Water Carbon dioxide Sulphur dioxide Nitrogen Water-rich Methane-rich Ammonia-rich Carbon dioxide-rich Methane Helium Silicate vapour Metallic vapour Neon-rich Argon-rich Neon Argon Oxygen","title":"Atmosphere Classes"},{"location":"appendix/#volcanism_classes","text":"(all with possible 'minor' or 'major' qualifier) None Water Magma Sulphur Dioxide Magma Ammonia Magma Methane Magma Nitrogen Magma Silicate Magma Metallic Magma Water Geysers Carbon Dioxide Geysers Ammonia Geysers Methane Geysers Nitrogen Geysers Helium Geysers Silicate Vapour Geysers","title":"Volcanism classes"},{"location":"appendix/#crime_types","text":"Assault Murder Piracy Interdiction IllegalCargo DisobeyPolice FireInNoFireZone FireInStation DumpingDangerous DumpingNearStation DockingMinor_BlockingAirlock DockingMajor_BlockingAirlock DockingMinor_BlockingLandingPad DockingMajor_BlockingLandingPad DockingMinor_Trespass DockingMajor_Trespass CollidedAtSpeedInNoFireZone CollidedAtSpeedInNoFireZone_HullDamage","title":"Crime types"},{"location":"appendix/#bodytype_values","text":"\"Null\" (eg the barycentre of a binary star system) \"Star\" \"Planet\" \"PlanetaryRing\" \"StellarRing\" \"Station\" \"AsteroidCluster\"","title":"BodyType values"},{"location":"appendix/#gases_in_atmospherecomposition","text":"Water Oxygen CarbonDioxide SulphurDioxide Ammonia Methane Nitrogen Hydrogen Helium Neon Argon Silicates Iron","title":"Gases in AtmosphereComposition"},{"location":"appendix/#star_luminosity_classes","text":"0 I Ia0 Ia Ib Iab II IIa IIab IIb III IIIa IIIab IIIb IV IVa IVab IVb V Va Vab Vb Vz VI VII","title":"Star Luminosity classes"},{"location":"appendix/#engineer_ids","text":"ID Name 300000 Didi Vatermann 300010 Bill Turner 300030 Broo Tarquin 300040 The Sarge 300050 Zachariah Nemo 300080 Liz Ryder 300090 Hera Tani 300100 Felicity Farseer 300110 Ram Tah 300120 Lei Cheung 300140 Col. Bris Dekker 300160 Elvira Martuuk 300180 The Dweller 300200 Marco Quent 300210 Selene Jean 300220 Prof. Palin 300230 Lori Jameson 300250 Juri Ishmaak 300260 Tod 'The Blaster' McQuinn 300270 Tiana Fortune","title":"Engineer IDs"},{"location":"appendix/#module_attributes","text":"These are the named attributes on modules, but not all are modifiable via engineering: (note, based on enum eItemInfoFieldType) Size Class Mass Integrity PowerDraw BootTime ShieldBankSpinUp ShieldBankDuration ShieldBankReinforcement ShieldBankHeat DamagePerSecond Damage DistributorDraw ThermalLoad ArmourPenetration MaximumRange ShotSpeed RateOfFire BurstRateOfFire BurstSize AmmoClipSize AmmoMaximum RoundsPerShot ReloadTime BreachDamage MinBreachChance MaxBreachChance Jitter WeaponMode DamageType ShieldGenMinimumMass ShieldGenOptimalMass ShieldGenMaximumMass ShieldGenMinStrength ShieldGenStrength ShieldGenMaxStrength RegenRate BrokenRegenRate EnergyPerRegen FSDOptimalMass FSDHeatRate MaxFuelPerJump EngineMinimumMass EngineOptimalMass MaximumMass EngineMinPerformance EngineOptPerformance EngineMaxPerformance EngineHeatRate PowerCapacity HeatEfficiency WeaponsCapacity WeaponsRecharge EnginesCapacity EnginesRecharge SystemsCapacity SystemsRecharge DefenceModifierHealthMultiplier DefenceModifierHealthAddition DefenceModifierShieldMultiplier DefenceModifierShieldAddition KineticResistance ThermicResistance ExplosiveResistance CausticResistance FSDInterdictorRange FSDInterdictorFacingLimit ScannerRange DiscoveryScannerRange DiscoveryScannerPassiveRange MaxAngle ScannerTimeToScan ChaffJamDuration ECMRange ECMTimeToCharge ECMActivePowerConsumption ECMHeat ECMCooldown HeatSinkDuration ThermalDrain NumBuggySlots CargoCapacity MaxActiveDrones DroneTargetRange DroneLifeTime DroneSpeed DroneMultiTargetSpeed DroneFuelCapacity DroneRepairCapacity DroneHackingTime DroneMinJettisonedCargo DroneMaxJettisonedCargo FuelScoopRate FuelCapacity OxygenTimeCapacity RefineryBins AFMRepairCapacity AFMRepairConsumption AFMRepairPerAmmo MaxRange SensorTargetScanAngle Range VehicleCargoCapacity VehicleHullMass VehicleFuelCapacity VehicleArmourHealth VehicleShieldHealth FighterMaxSpeed FighterBoostSpeed FighterPitchRate FighterDPS FighterYawRate FighterRollRate CabinCapacity CabinClass DisruptionBarrierRange DisruptionBarrierChargeDuration DisruptionBarrierActivePower DisruptionBarrierCooldown WingDamageReduction WingMinDuration WingMaxDuration ShieldSacrificeAmountRemoved ShieldSacrificeAmountGiven FSDJumpRangeBoost FSDFuelUseIncrease BoostSpeedMultiplier BoostAugmenterPowerUse ModuleDefenceAbsorption FalloffRange DSS_RangeMult DSS_AngleMult DSS_RateMult The following module attributes have enum values, written as a string, all others are float WeaponMode should be one of: ForwardFire Gimbal TargetOnly FireAtWill Manual NoMode DamageType should be one of: Kinetic Thermal Explosive Collision Thargoid AntiThargoid CabinClass should be one of: Prison Economy Standard Business First Luxury","title":"Module Attributes"},{"location":"combat/","text":"Combat \u00b6 Bounty \u00b6 When written: player is awarded a bounty for a kill Parameters: Rewards: an array of Faction names and the Reward values, as the target can have multiple bounties payable by different factions Target: type of ship VictimFaction: the victim's faction TotalReward SharedWithOthers: if credit for the kill is shared with other players, this has the number of other players involved When the bounty is for a skimmer, it's slightly different: Faction: faction paying bounty Target: type of target Reward: amount VictimFaction Examples: { \"timestamp\": \"2018-04-17T11:11:02Z\", \"event\": \"Bounty\", \"Rewards\": [ { \"Faction\": \"Nehet Patron's Principles\", \"Reward\": 5620 } ], \"Target\": \"empire_eagle\", \"TotalReward\": 5620, \"VictimFaction\": \"Nehet Progressive Party\" } { \"timestamp\": \"2018-05-20T21:19:58Z\", \"event\": \"Bounty\", \"Faction\": \"HIP 18828 Empire Consulate\", \"Target\": \"Skimmer\", \"Reward\": 1000, \"VictimFaction\": \"HIP 18828 Empire Consulate\" } CapShipBond \u00b6 When written: The player has been rewarded for a capital ship combat Parameters: Reward: value of award AwardingFaction VictimFaction Died \u00b6 When written: player was killed Parameters: KillerName KillerShip KillerRank Example: { \"timestamp\": \"2016-06-10 T14 : 32 : 03 Z \", \" event \": \" Died \", \" KillerName \": \" $ ShipName_Police_Independent ; \", \"KillerShip\": \"viper\", \"KillerRank\": \"Deadly\" } Died \u00b6 When written: player was killed by a wing Parameters: Killers: a JSON array of objects containing player name, ship, and rank Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"Died\", \"Killers\": [ { \"Name\": \"Cmdr HRC1\", \"Ship\": \"Vulture\", \"Rank\": \"Competent\" }, { \"Name\": \"Cmdr HRC2\", \"Ship\": \"Python\", \"Rank\": \"Master\" } ] } EscapeInterdiction \u00b6 When written: Player has escaped interdiction Parameters: Interdictor: interdicting pilot name IsPlayer: whether player or npc IsThargoid: whether thargoid or not Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"EscapeInterdiction\", \"Interdictor\": \"Hrc1\", \"IsPlayer\": true } FactionKillBond \u00b6 When written: Player rewarded for taking part in a combat zone Parameters: Reward AwardingFaction VictimFaction Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"FactionKillBond\", \"Reward\": 500, \"AwardingFaction\": \"Jarildekald Public Industry\", \"VictimFaction\": \"Lencali Freedom Party\" } FighterDestroyed \u00b6 When written: when a ship-launched fighter is destroyed Parameters: none HeatDamage \u00b6 When written: when taking damage due to overheating Parameters: ID HeatWarning \u00b6 When written: when heat exceeds 100% Parameters: none HullDamage \u00b6 When written: when hull health drops below a threshold (20% steps) Parameters: Health PlayerPilot: bool \u2013 true if player is piloting the ship/fighter taking damage Fighter: bool \u2013 true for ship-launched fighter Interdicted \u00b6 When written: player was interdicted by player or npc Parameters: Submitted: true or false Interdictor: interdicting pilot name IsPlayer: whether player or npc IsThargoid: whether thargoid or not CombatRank: if player Faction: if npc Power: if npc working for a power Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"interdicted\", \"Submitted\": false, \"Interdictor\": \"Dread Pirate Roberts\", \"IsPlayer\": false, \"Faction\": \"Timocani Purple Posse\" } Interdiction \u00b6 When written: player has (attempted to) interdict another player or npc Parameters: Success : true or false Interdicted: victim pilot name IsPlayer: whether player or npc CombatRank: if a player Faction: if an npc Power: if npc working for power Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"interdiction\", \"Success\": true, \"Interdicted\": \"Fred Flintstone\", \"IsPlayer\": true, \"CombatRank\": 5 } PVPKill \u00b6 When written: when this player has killed another player Parameters: Victim: name of victim CombatRank: victim's rank in range 0..8 ShieldState \u00b6 When written: when shields are disabled in combat, or recharged Parameters: ShieldsUp 0 when disabled, 1 when restored Examples: { \"timestamp\": \"2016-07-25T14:45:48Z\", \"event\": \"ShieldState\", \"ShieldsUp\": false } { \"timestamp\": \"2016-07-25T14:46:36Z\", \"event\": \"ShieldState\", \"ShieldsUp\": true } ShipTargetted \u00b6 When written: when the current player selects a new target The amount of data written depends on the extent to which the target ship has been scanned Parameters: TargetLocked: bool (ie false when losing target) If target locked: Ship: name ScanStage: number If Scan stage >= 1 PilotName: name PilotRank: rank name If scan stage >= 2 ShieldHealth HullHealth If scan stage >= 3 Faction LegalStatus Bounty SubSystem SubSystemHealth Power [*] [*] when targetting another ship, if the player is aligned in powerplay, and the target is also aligned to a power, include the info SRVDestroyed \u00b6 When written: when the player's SRV is destroyed Parameters: ID SRVType UnderAttack \u00b6 When written: when under fire (same time as the Under Attack voice message) Parameters: Target: (Fighter/Mothership/You)","title":"Combat"},{"location":"combat/#combat","text":"","title":"Combat"},{"location":"combat/#bounty","text":"When written: player is awarded a bounty for a kill Parameters: Rewards: an array of Faction names and the Reward values, as the target can have multiple bounties payable by different factions Target: type of ship VictimFaction: the victim's faction TotalReward SharedWithOthers: if credit for the kill is shared with other players, this has the number of other players involved When the bounty is for a skimmer, it's slightly different: Faction: faction paying bounty Target: type of target Reward: amount VictimFaction Examples: { \"timestamp\": \"2018-04-17T11:11:02Z\", \"event\": \"Bounty\", \"Rewards\": [ { \"Faction\": \"Nehet Patron's Principles\", \"Reward\": 5620 } ], \"Target\": \"empire_eagle\", \"TotalReward\": 5620, \"VictimFaction\": \"Nehet Progressive Party\" } { \"timestamp\": \"2018-05-20T21:19:58Z\", \"event\": \"Bounty\", \"Faction\": \"HIP 18828 Empire Consulate\", \"Target\": \"Skimmer\", \"Reward\": 1000, \"VictimFaction\": \"HIP 18828 Empire Consulate\" }","title":"Bounty"},{"location":"combat/#capshipbond","text":"When written: The player has been rewarded for a capital ship combat Parameters: Reward: value of award AwardingFaction VictimFaction","title":"CapShipBond"},{"location":"combat/#died","text":"When written: player was killed Parameters: KillerName KillerShip KillerRank Example: { \"timestamp\": \"2016-06-10 T14 : 32 : 03 Z \", \" event \": \" Died \", \" KillerName \": \" $ ShipName_Police_Independent ; \", \"KillerShip\": \"viper\", \"KillerRank\": \"Deadly\" }","title":"Died"},{"location":"combat/#died_1","text":"When written: player was killed by a wing Parameters: Killers: a JSON array of objects containing player name, ship, and rank Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"Died\", \"Killers\": [ { \"Name\": \"Cmdr HRC1\", \"Ship\": \"Vulture\", \"Rank\": \"Competent\" }, { \"Name\": \"Cmdr HRC2\", \"Ship\": \"Python\", \"Rank\": \"Master\" } ] }","title":"Died"},{"location":"combat/#escapeinterdiction","text":"When written: Player has escaped interdiction Parameters: Interdictor: interdicting pilot name IsPlayer: whether player or npc IsThargoid: whether thargoid or not Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"EscapeInterdiction\", \"Interdictor\": \"Hrc1\", \"IsPlayer\": true }","title":"EscapeInterdiction"},{"location":"combat/#factionkillbond","text":"When written: Player rewarded for taking part in a combat zone Parameters: Reward AwardingFaction VictimFaction Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"FactionKillBond\", \"Reward\": 500, \"AwardingFaction\": \"Jarildekald Public Industry\", \"VictimFaction\": \"Lencali Freedom Party\" }","title":"FactionKillBond"},{"location":"combat/#fighterdestroyed","text":"When written: when a ship-launched fighter is destroyed Parameters: none","title":"FighterDestroyed"},{"location":"combat/#heatdamage","text":"When written: when taking damage due to overheating Parameters: ID","title":"HeatDamage"},{"location":"combat/#heatwarning","text":"When written: when heat exceeds 100% Parameters: none","title":"HeatWarning"},{"location":"combat/#hulldamage","text":"When written: when hull health drops below a threshold (20% steps) Parameters: Health PlayerPilot: bool \u2013 true if player is piloting the ship/fighter taking damage Fighter: bool \u2013 true for ship-launched fighter","title":"HullDamage"},{"location":"combat/#interdicted","text":"When written: player was interdicted by player or npc Parameters: Submitted: true or false Interdictor: interdicting pilot name IsPlayer: whether player or npc IsThargoid: whether thargoid or not CombatRank: if player Faction: if npc Power: if npc working for a power Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"interdicted\", \"Submitted\": false, \"Interdictor\": \"Dread Pirate Roberts\", \"IsPlayer\": false, \"Faction\": \"Timocani Purple Posse\" }","title":"Interdicted"},{"location":"combat/#interdiction","text":"When written: player has (attempted to) interdict another player or npc Parameters: Success : true or false Interdicted: victim pilot name IsPlayer: whether player or npc CombatRank: if a player Faction: if an npc Power: if npc working for power Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"interdiction\", \"Success\": true, \"Interdicted\": \"Fred Flintstone\", \"IsPlayer\": true, \"CombatRank\": 5 }","title":"Interdiction"},{"location":"combat/#pvpkill","text":"When written: when this player has killed another player Parameters: Victim: name of victim CombatRank: victim's rank in range 0..8","title":"PVPKill"},{"location":"combat/#shieldstate","text":"When written: when shields are disabled in combat, or recharged Parameters: ShieldsUp 0 when disabled, 1 when restored Examples: { \"timestamp\": \"2016-07-25T14:45:48Z\", \"event\": \"ShieldState\", \"ShieldsUp\": false } { \"timestamp\": \"2016-07-25T14:46:36Z\", \"event\": \"ShieldState\", \"ShieldsUp\": true }","title":"ShieldState"},{"location":"combat/#shiptargetted","text":"When written: when the current player selects a new target The amount of data written depends on the extent to which the target ship has been scanned Parameters: TargetLocked: bool (ie false when losing target) If target locked: Ship: name ScanStage: number If Scan stage >= 1 PilotName: name PilotRank: rank name If scan stage >= 2 ShieldHealth HullHealth If scan stage >= 3 Faction LegalStatus Bounty SubSystem SubSystemHealth Power [*] [*] when targetting another ship, if the player is aligned in powerplay, and the target is also aligned to a power, include the info","title":"ShipTargetted"},{"location":"combat/#srvdestroyed","text":"When written: when the player's SRV is destroyed Parameters: ID SRVType","title":"SRVDestroyed"},{"location":"combat/#underattack","text":"When written: when under fire (same time as the Under Attack voice message) Parameters: Target: (Fighter/Mothership/You)","title":"UnderAttack"},{"location":"exploration/","text":"Exploration \u00b6 CodexEntry \u00b6 When written: when a new discovery is added to the Codex Parameters: EntryID: an ID number Name: string (+localisation) SubCategory: string (+localisation) Category: string (+localisation) Region: string System: string SystemAddress BodyID NearestDestination: name Latitude Longitude IsNewEntry: bool NewTraitsDiscovered: bool Traits: [ array of strings ] The IsNewEntry and NewTraitsDiscovered fields are optional depending on the results of the scan, and the Traits field is only available for entries that have unlocked traits. The \"NearestDestination\" is added if within 50km of a location listed in the navigation panel Example: { \"timestamp\" : \"2019-05-13T13:28:51Z\" , \"event\" : \"CodexEntry\" , \"EntryID\" : 1400159 , \"Name\" : \"$Codex_Ent_IceFumarole_CarbonDioxideGeysers_Name;\" , \"Name_Localised\" : \"Carbon Dioxide Ice Fumarole\" , \"SubCategory\" : \"$Codex_SubCategory_Geology_and_Anomalies;\" , \"SubCategory_Localised\" : \"Geology and anomalies\" , \"Category\" : \"$Codex_Category_Biology;\" , \"Category_Localised\" : \"Biological and Geological\" , \"Region\" : \"$Codex_RegionName_18;\" , \"Region_Localised\" : \"Inner Orion Spur\" , \"System\" : \"Hermitage\" , \"SystemAddress\" : 5363877956440 , \"NearestDestination\" : \"$SAA_Unknown_Signal:#type=$SAA_SignalType_Geological;:#index=9;\" , \"NearestDestination_Localised\" : \"Surface signal: Geological (9)\" , \"IsNewEntry\" : true , \"VoucherAmount\" : 50000 } DiscoveryScan \u00b6 When written: when using the discovery scanner, and new body discoveries are displayed in the cockpit info window. Note you can get two or three of these in a row, where some bodies are discovered by the automatic passive scan, before the active scan is complete. Parameters: SystemAddress Bodies: number of new bodies discovered Scan \u00b6 When Written: basic or detailed discovery scan of a star, planet or moon This is also generated when scanning a navigation beacon in a populated system, to record info about all the bodies in the system Parameters(star) ScanType StarSystem: name SystemAddress Bodyname: name of body BodyID DistanceFromArrivalLS StarType: Stellar classification (for a star) \u2013 see \u00a715.2 Subclass: Star's heat classification 0..9 StellarMass: mass as multiple of Sol's mass Radius AbsoluteMagnitude RotationPeriod (seconds) SurfaceTemperature Luminosity \u2013 see \u00a715.9 Age_MY: age in millions of years Rings: [ array ] \u2013 if present WasDiscovered: bool WasMapped: bool Parameters(Planet/Moon) ScanType Bodyname: name of body BodyID Parents: Array of BodyType:BodyID pairs DistanceFromArrivalLS TidalLock: 1 if tidally locked TerraformState: Terraformable, Terraforming, Terraformed, or null PlanetClass \u2013 see \u00a715.3 Atmosphere \u2013 see \u00a715.4 AtmosphereType AtmosphereComposition: [ array of info ] Volcanism \u2013 see \u00a715.5 SurfaceGravity SurfaceTemperature SurfacePressure Landable: true (if landable) Materials: JSON array with objects with material names and percentage occurrence Composition: structure containing info on solid composition Ice Rock Metal Rings: [ array of info ] \u2013 if rings present ReserveLevel: (Pristine/Major/Common/Low/Depleted) \u2013 if rings present If rotating: RotationPeriod (seconds) Axial tilt Orbital Parameters for any Star/Planet/Moon (except main star of single-star system) SemiMajorAxis Eccentricity OrbitalInclination Periapsis OrbitalPeriod Rings properties* Name RingClass MassMT \u2013 ie in megatons InnerRad OuterRad Note that a basic scan (ie without having a Detailed Surface Scanner installed) will now save a reduced amount of information. A basic scan on a planet will include body name, planet class, orbital data, rotation period, mass, radius, surface gravity; but will exclude tidal lock, terraform state, atmosphere, volcanism, surface pressure and temperature, available materials, and details of rings. The info for a star will be largely the same whether a basic scanner or detailed scanner is used. The \"Parents\" property provides the body's hierarchical position within the system: in the example below, \"Procyon B 3 a\" is a moon of a planet (body 11), which is orbiting a star (body 2), which is has a parent body that's a Barycentre Entries in the list above marked with an asterisk are only included for a detailed scan ScanType : one of Basic, Detailed, NavBeacon, NavBeaconDetail, AutoScan Example: { \"timestamp\": \"2018-02-02T10:43:05Z\", \"event\": \"Scan\", \"ScanType\": \"NavBeaconDetail\", \"BodyName\": \"Procyon B 3 a\", \"BodyID\": 12, \"Parents\": [ { \"Planet\": 11 }, { \"Star\": 2 }, { \"Null\": 0 } ], \"DistanceFromArrivalLS\": 10048.152344, \"TidalLock\": true, \"TerraformState\": \"\", \"PlanetClass\": \"Rocky body\", \"Atmosphere\": \"\", \"AtmosphereType\": \"None\", \"Volcanism\": \"\", \"MassEM\": 0.025342, \"Radius\": 2011975.25, \"SurfaceGravity\": 2.495225, \"SurfaceTemperature\": 318.448792, \"SurfacePressure\": 0, \"Landable\": true, \"Materials\": [ { \"Name\": \"iron\", \"Percent\": 19.315084 }, { \"Name\": \"sulphur\", \"Percent\": 17.321133 }, { \"Name\": \"nickel\", \"Percent\": 14.60912 }, { \"Name\": \"carbon\", \"Percent\": 14.565277 }, { \"Name\": \"phosphorus\", \"Percent\": 9.324941 }, { \"Name\": \"chromium\", \"Percent\": 8.686635 }, { \"Name\": \"manganese\", \"Percent\": 7.976933 }, { \"Name\": \"zinc\", \"Percent\": 5.249117 }, { \"Name\": \"tin\", \"Percent\": 1.200338 }, { \"Name\": \"tungsten\", \"Percent\": 1.060592 }, { \"Name\": \"technetium\", \"Percent\": 0.690823 } ], \"Composition\": { \"Ice\": 0, \"Rock\": 0.861282, \"Metal\": 0.138718 }, \"SemiMajorAxis\": 89655728, \"Eccentricity\": 0, \"OrbitalInclination\": 4.566576, \"Periapsis\": 309.656799, \"OrbitalPeriod\": 344902.9375, \"RotationPeriod\": 352425.46875, \"AxialTilt\": 0.479157 } FSSAllBodiesFound \u00b6 When written: after having identified all bodies in the system Parameters: SystemName SystemAddress Count FSSBodySignals \u00b6 This event is written when completing a \"Full Spectrum Scan\" of a starsystem, to list the number of SAA signals found in the system (as shown in-game in the top-right panel) Parameters: BodyName BodyID SystemAddress Signals: Array Type Count Example: { \"timestamp\": \"2022-03-17 T18 : 20 : 53 Z \", \" event \": \" FSSBodySignals \", \" BodyName \": \" Phroi Blou EW-W d1-1056 2 a \", \" BodyID \": 18, \" SystemAddress \": 36293555558035, \" Signals \" : [ { \"Type\" : \"$SAA_SignalType_Geological;\" , \"Type_Localised\" : \"Geological\" , \"Count\" : 3 } ] } FSSDiscoveryScan \u00b6 When written: when performing a full system scan (\"Honk\") Parameters: Progress: (a value in range 0-1 showing how completely the system has been scanned) BodyCount: number of stellar bodies in system NonBodyCount: Number of non-body signals found FSSSignalDiscovered \u00b6 When written: when zooming in on a signal using the FSS scanner Parameters: SignalName SpawningState: the BGS state that triggered this event, if relevant SpawningFaction: the minor faction, if relevant TimeRemaining: remaining lifetime in seconds, if relevant SystemAddress ThreatLevel (if a USS) USSType: (if a USS) \u2013 same types as in USSDrop event IsStation: true (if it is a station) MaterialCollected \u00b6 When Written: whenever materials are collected Parameters: Category: type of material (Raw/Encoded/Manufactured) Name: name of material Count: number of units collected Examples: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"MaterialCollected\", \"Category\": \"Raw\", \"Name\": \"sulphur\", \"Count\": 2 } { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"MaterialCollected\", \"Category\": \"Encoded\", \"Name\": \"disruptedwakeechoes\", \"Count\": 1 } MaterialDiscarded \u00b6 When Written: if materials are discarded Parameters: Category Name Count Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"MaterialDiscarded\", \"Category\": \"Raw\", \"Name\": \"sulphur\", \"Count\": 5 } MaterialDiscovered \u00b6 When Written: when a new material is discovered Parameters: Category Name DiscoveryNumber Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"MaterialDiscovered\", \"Category\": \"Manufactured\", \"Name\": \"focuscrystals\", \"DiscoveryNumber\": 3 } MultiSellExplorationData \u00b6 When written: when selling exploration data in Cartographics, a page at a time Parameters: Discovered: (array of records, as follows) SystemName NumBodies BaseValue Bonus TotalEarnings Example { \"timestamp\": \"2018-11-14T10:35:35Z\", \"event\": \"MultiSellExplorationData\", \"Discovered\": [ { \"SystemName\": \"HIP 84742\", \"NumBodies\": 23 }, { \"SystemName\": \"Col 359 Sector NY-S b20-1\", \"NumBodies\": 9 } ], \"BaseValue\": 2938186, \"Bonus\": 291000, \"TotalEarnings\": 3229186 } NavBeaconScan \u00b6 When written: when scanning a navigation beacon, before the scan data for all the bodies in the system is written into the journal Parameters: NumBodies SystemAddress BuyExplorationData \u00b6 When Written: when buying system data via the galaxy map Parameters: System Cost Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"BuyExplorationData\", \"System\": \"Styx\", \"Cost\": 352 } SAAScanComplete \u00b6 When written: after using the \"Surface Area Analysis\" scanner Parameters: SystemAddress BodyName BodyID ~~Discoverers: (array of names)~~ ~~Mappers: (array of names)~~ ProbesUsed: (int) EfficiencyTarget: (int) Example: { \"timestamp\": \"2018-10-05T15:06:12Z\", \"event\": \"SAAScanComplete\", \"BodyName\": \"Eranin 5\", \"BodyID\": 5, \"ProbesUsed\": 6, \"EfficiencyTarget\": 9 } SAASignalsFound \u00b6 When written: when using SAA scanner on a planet or rings Parameters: SystemAddress BodyName BodyID Signals: (array) Type Count Genuses: (array) Genus Examples: { \"timestamp\": \"2019-04-17T13:38:18Z\", \"event\": \"SAASignalsFound\", \"BodyName\": \"Hermitage 4 A Ring\", \"SystemAddress\": 5363877956440, \"BodyID\": 11, \"Signals\": [ { \"Type\": \"LowTemperatureDiamond\", \"Type_Localised\": \"Low Temperature Diamonds\", \"Count\": 1 }, { \"Type\": \"Alexandrite\", \"Count\": 1 } ] } { \"timestamp\": \"2019-04-17 T13 : 40 : 39 Z \", \" event \": \" SAASignalsFound \", \" BodyName \": \" Hermitage 4 b \", \" SystemAddress \": 5363877956440, \" BodyID \": 13, \" Signals \" : [ { \"Type\" : \"$SAA_SignalType_Geological;\" , \"Type_Localised\" : \"Geological\" , \"Count\" : 14 } ] } { \"timestamp\": \"2022-07-01 T09 : 14 : 32 Z \", \" event \": \" SAASignalsFound \", \" BodyName \": \" Asellus 3 a \", \" SystemAddress \": 1144348739947, \" BodyID \": 10, \" Signals \": [ { \"Type\" : \"$SAA_SignalType_Biological;\" , \"Type_Localised\" : \"Biological\" , \"Count\" : 2 }, { \"Type\" : \"$SAA_SignalType_Geological;\" , \"Type_Localised\" : \"Geological\" , \"Count\" : 3 }, { \"Type\" : \"$SAA_SignalType_Human;\" , \"Type_Localised\" : \"Human\" , \"Count\" : 8 } ] , \" Genuses \" : [ { \"Genus\" : \"$Codex_Ent_Bacterial_Genus_Name;\" , \"Genus_Localised\" : \"Bacterium\" }, { \"Genus\" : \"$Codex_Ent_Stratum_Genus_Name;\" , \"Genus_Localised\" : \"Stratum\" } ] } ScanBaryCentre \u00b6 When scanning one body of a binary pair, you will now get an event detailing the orbital parameters of their BaryCentre Parameters: StarSystem SystemAddress BodyID SemiMajorAxis Eccentricity OrbitalInclination Periapsis OrbitalPeriod AscendingNode MeanAnomaly Example { \"timestamp\": \"2021-07-27T13:52:20Z\", \"event\": \"ScanBaryCentre\", \"StarSystem\": \"Col 285 Sector YX-N b21-1\", \"SystemAddress\": 2867561768401, \"BodyID\": 10, \"SemiMajorAxis\": 2107998251914.978, \"Eccentricity\": 0.033074, \"OrbitalInclination\": 0.019013, \"Periapsis\": 342.187341, \"OrbitalPeriod\": 3739380657.672882, \"AscendingNode\": -31.477241, \"MeanAnomaly\": 64.03028 } SellExplorationData \u00b6 When Written: when selling exploration data in Cartographics Parameters: Systems: JSON array of system names Discovered: JSON array of discovered bodies BaseValue: value of systems Bonus: bonus for first discoveries TotalEarnings: total credits received (including for example the 200% bonus if rank 5 with Li Yong Rui) Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"SellExplorationData\", \"Systems\": [ \"HIP 78085\", \"Praea Euq NW-W b1-3\" ], \"Discovered\": [ \"HIP 78085 A\", \"Praea Euq NW-W b1-3\", \"Praea Euq NW-W b1-3 3 a\", \"Praea Euq NW-W b1-3 3\" ], \"BaseValue\": 10822, \"Bonus\": 3959, \"TotalEarnings\": 44343 } Screenshot \u00b6 When Written: when a screen snapshot is saved Parameters: Filename: filename of screenshot Width: size in pixels Height: size in pixels System: current star system Body: name of nearest body Latitude Longitude Altitude Heading The latitude, longitude, altitude and heading will be included if on a planet or in low-altitude flight Example: { \"timestamp\": \"2018-01-17T09:48:26Z\", \"event\": \"Screenshot\", \"Filename\": \"_Screenshots/Screenshot_0024.bmp\", \"Width\": 1440, \"Height\": 900, \"System\": \"Nuenets\", \"Body\": \"Nuenets C 2\", \"Latitude\": -60.7999, \"Longitude\": -74.059799, \"Heading\": 39, \"Altitude\": 27502.876953 }","title":"Exploration"},{"location":"exploration/#exploration","text":"","title":"Exploration"},{"location":"exploration/#codexentry","text":"When written: when a new discovery is added to the Codex Parameters: EntryID: an ID number Name: string (+localisation) SubCategory: string (+localisation) Category: string (+localisation) Region: string System: string SystemAddress BodyID NearestDestination: name Latitude Longitude IsNewEntry: bool NewTraitsDiscovered: bool Traits: [ array of strings ] The IsNewEntry and NewTraitsDiscovered fields are optional depending on the results of the scan, and the Traits field is only available for entries that have unlocked traits. The \"NearestDestination\" is added if within 50km of a location listed in the navigation panel Example: { \"timestamp\" : \"2019-05-13T13:28:51Z\" , \"event\" : \"CodexEntry\" , \"EntryID\" : 1400159 , \"Name\" : \"$Codex_Ent_IceFumarole_CarbonDioxideGeysers_Name;\" , \"Name_Localised\" : \"Carbon Dioxide Ice Fumarole\" , \"SubCategory\" : \"$Codex_SubCategory_Geology_and_Anomalies;\" , \"SubCategory_Localised\" : \"Geology and anomalies\" , \"Category\" : \"$Codex_Category_Biology;\" , \"Category_Localised\" : \"Biological and Geological\" , \"Region\" : \"$Codex_RegionName_18;\" , \"Region_Localised\" : \"Inner Orion Spur\" , \"System\" : \"Hermitage\" , \"SystemAddress\" : 5363877956440 , \"NearestDestination\" : \"$SAA_Unknown_Signal:#type=$SAA_SignalType_Geological;:#index=9;\" , \"NearestDestination_Localised\" : \"Surface signal: Geological (9)\" , \"IsNewEntry\" : true , \"VoucherAmount\" : 50000 }","title":"CodexEntry"},{"location":"exploration/#discoveryscan","text":"When written: when using the discovery scanner, and new body discoveries are displayed in the cockpit info window. Note you can get two or three of these in a row, where some bodies are discovered by the automatic passive scan, before the active scan is complete. Parameters: SystemAddress Bodies: number of new bodies discovered","title":"DiscoveryScan"},{"location":"exploration/#scan","text":"When Written: basic or detailed discovery scan of a star, planet or moon This is also generated when scanning a navigation beacon in a populated system, to record info about all the bodies in the system Parameters(star) ScanType StarSystem: name SystemAddress Bodyname: name of body BodyID DistanceFromArrivalLS StarType: Stellar classification (for a star) \u2013 see \u00a715.2 Subclass: Star's heat classification 0..9 StellarMass: mass as multiple of Sol's mass Radius AbsoluteMagnitude RotationPeriod (seconds) SurfaceTemperature Luminosity \u2013 see \u00a715.9 Age_MY: age in millions of years Rings: [ array ] \u2013 if present WasDiscovered: bool WasMapped: bool Parameters(Planet/Moon) ScanType Bodyname: name of body BodyID Parents: Array of BodyType:BodyID pairs DistanceFromArrivalLS TidalLock: 1 if tidally locked TerraformState: Terraformable, Terraforming, Terraformed, or null PlanetClass \u2013 see \u00a715.3 Atmosphere \u2013 see \u00a715.4 AtmosphereType AtmosphereComposition: [ array of info ] Volcanism \u2013 see \u00a715.5 SurfaceGravity SurfaceTemperature SurfacePressure Landable: true (if landable) Materials: JSON array with objects with material names and percentage occurrence Composition: structure containing info on solid composition Ice Rock Metal Rings: [ array of info ] \u2013 if rings present ReserveLevel: (Pristine/Major/Common/Low/Depleted) \u2013 if rings present If rotating: RotationPeriod (seconds) Axial tilt Orbital Parameters for any Star/Planet/Moon (except main star of single-star system) SemiMajorAxis Eccentricity OrbitalInclination Periapsis OrbitalPeriod Rings properties* Name RingClass MassMT \u2013 ie in megatons InnerRad OuterRad Note that a basic scan (ie without having a Detailed Surface Scanner installed) will now save a reduced amount of information. A basic scan on a planet will include body name, planet class, orbital data, rotation period, mass, radius, surface gravity; but will exclude tidal lock, terraform state, atmosphere, volcanism, surface pressure and temperature, available materials, and details of rings. The info for a star will be largely the same whether a basic scanner or detailed scanner is used. The \"Parents\" property provides the body's hierarchical position within the system: in the example below, \"Procyon B 3 a\" is a moon of a planet (body 11), which is orbiting a star (body 2), which is has a parent body that's a Barycentre Entries in the list above marked with an asterisk are only included for a detailed scan ScanType : one of Basic, Detailed, NavBeacon, NavBeaconDetail, AutoScan Example: { \"timestamp\": \"2018-02-02T10:43:05Z\", \"event\": \"Scan\", \"ScanType\": \"NavBeaconDetail\", \"BodyName\": \"Procyon B 3 a\", \"BodyID\": 12, \"Parents\": [ { \"Planet\": 11 }, { \"Star\": 2 }, { \"Null\": 0 } ], \"DistanceFromArrivalLS\": 10048.152344, \"TidalLock\": true, \"TerraformState\": \"\", \"PlanetClass\": \"Rocky body\", \"Atmosphere\": \"\", \"AtmosphereType\": \"None\", \"Volcanism\": \"\", \"MassEM\": 0.025342, \"Radius\": 2011975.25, \"SurfaceGravity\": 2.495225, \"SurfaceTemperature\": 318.448792, \"SurfacePressure\": 0, \"Landable\": true, \"Materials\": [ { \"Name\": \"iron\", \"Percent\": 19.315084 }, { \"Name\": \"sulphur\", \"Percent\": 17.321133 }, { \"Name\": \"nickel\", \"Percent\": 14.60912 }, { \"Name\": \"carbon\", \"Percent\": 14.565277 }, { \"Name\": \"phosphorus\", \"Percent\": 9.324941 }, { \"Name\": \"chromium\", \"Percent\": 8.686635 }, { \"Name\": \"manganese\", \"Percent\": 7.976933 }, { \"Name\": \"zinc\", \"Percent\": 5.249117 }, { \"Name\": \"tin\", \"Percent\": 1.200338 }, { \"Name\": \"tungsten\", \"Percent\": 1.060592 }, { \"Name\": \"technetium\", \"Percent\": 0.690823 } ], \"Composition\": { \"Ice\": 0, \"Rock\": 0.861282, \"Metal\": 0.138718 }, \"SemiMajorAxis\": 89655728, \"Eccentricity\": 0, \"OrbitalInclination\": 4.566576, \"Periapsis\": 309.656799, \"OrbitalPeriod\": 344902.9375, \"RotationPeriod\": 352425.46875, \"AxialTilt\": 0.479157 }","title":"Scan"},{"location":"exploration/#fssallbodiesfound","text":"When written: after having identified all bodies in the system Parameters: SystemName SystemAddress Count","title":"FSSAllBodiesFound"},{"location":"exploration/#fssbodysignals","text":"This event is written when completing a \"Full Spectrum Scan\" of a starsystem, to list the number of SAA signals found in the system (as shown in-game in the top-right panel) Parameters: BodyName BodyID SystemAddress Signals: Array Type Count Example: { \"timestamp\": \"2022-03-17 T18 : 20 : 53 Z \", \" event \": \" FSSBodySignals \", \" BodyName \": \" Phroi Blou EW-W d1-1056 2 a \", \" BodyID \": 18, \" SystemAddress \": 36293555558035, \" Signals \" : [ { \"Type\" : \"$SAA_SignalType_Geological;\" , \"Type_Localised\" : \"Geological\" , \"Count\" : 3 } ] }","title":"FSSBodySignals"},{"location":"exploration/#fssdiscoveryscan","text":"When written: when performing a full system scan (\"Honk\") Parameters: Progress: (a value in range 0-1 showing how completely the system has been scanned) BodyCount: number of stellar bodies in system NonBodyCount: Number of non-body signals found","title":"FSSDiscoveryScan"},{"location":"exploration/#fsssignaldiscovered","text":"When written: when zooming in on a signal using the FSS scanner Parameters: SignalName SpawningState: the BGS state that triggered this event, if relevant SpawningFaction: the minor faction, if relevant TimeRemaining: remaining lifetime in seconds, if relevant SystemAddress ThreatLevel (if a USS) USSType: (if a USS) \u2013 same types as in USSDrop event IsStation: true (if it is a station)","title":"FSSSignalDiscovered"},{"location":"exploration/#materialcollected","text":"When Written: whenever materials are collected Parameters: Category: type of material (Raw/Encoded/Manufactured) Name: name of material Count: number of units collected Examples: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"MaterialCollected\", \"Category\": \"Raw\", \"Name\": \"sulphur\", \"Count\": 2 } { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"MaterialCollected\", \"Category\": \"Encoded\", \"Name\": \"disruptedwakeechoes\", \"Count\": 1 }","title":"MaterialCollected"},{"location":"exploration/#materialdiscarded","text":"When Written: if materials are discarded Parameters: Category Name Count Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"MaterialDiscarded\", \"Category\": \"Raw\", \"Name\": \"sulphur\", \"Count\": 5 }","title":"MaterialDiscarded"},{"location":"exploration/#materialdiscovered","text":"When Written: when a new material is discovered Parameters: Category Name DiscoveryNumber Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"MaterialDiscovered\", \"Category\": \"Manufactured\", \"Name\": \"focuscrystals\", \"DiscoveryNumber\": 3 }","title":"MaterialDiscovered"},{"location":"exploration/#multisellexplorationdata","text":"When written: when selling exploration data in Cartographics, a page at a time Parameters: Discovered: (array of records, as follows) SystemName NumBodies BaseValue Bonus TotalEarnings Example { \"timestamp\": \"2018-11-14T10:35:35Z\", \"event\": \"MultiSellExplorationData\", \"Discovered\": [ { \"SystemName\": \"HIP 84742\", \"NumBodies\": 23 }, { \"SystemName\": \"Col 359 Sector NY-S b20-1\", \"NumBodies\": 9 } ], \"BaseValue\": 2938186, \"Bonus\": 291000, \"TotalEarnings\": 3229186 }","title":"MultiSellExplorationData"},{"location":"exploration/#navbeaconscan","text":"When written: when scanning a navigation beacon, before the scan data for all the bodies in the system is written into the journal Parameters: NumBodies SystemAddress","title":"NavBeaconScan"},{"location":"exploration/#buyexplorationdata","text":"When Written: when buying system data via the galaxy map Parameters: System Cost Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"BuyExplorationData\", \"System\": \"Styx\", \"Cost\": 352 }","title":"BuyExplorationData"},{"location":"exploration/#saascancomplete","text":"When written: after using the \"Surface Area Analysis\" scanner Parameters: SystemAddress BodyName BodyID ~~Discoverers: (array of names)~~ ~~Mappers: (array of names)~~ ProbesUsed: (int) EfficiencyTarget: (int) Example: { \"timestamp\": \"2018-10-05T15:06:12Z\", \"event\": \"SAAScanComplete\", \"BodyName\": \"Eranin 5\", \"BodyID\": 5, \"ProbesUsed\": 6, \"EfficiencyTarget\": 9 }","title":"SAAScanComplete"},{"location":"exploration/#saasignalsfound","text":"When written: when using SAA scanner on a planet or rings Parameters: SystemAddress BodyName BodyID Signals: (array) Type Count Genuses: (array) Genus Examples: { \"timestamp\": \"2019-04-17T13:38:18Z\", \"event\": \"SAASignalsFound\", \"BodyName\": \"Hermitage 4 A Ring\", \"SystemAddress\": 5363877956440, \"BodyID\": 11, \"Signals\": [ { \"Type\": \"LowTemperatureDiamond\", \"Type_Localised\": \"Low Temperature Diamonds\", \"Count\": 1 }, { \"Type\": \"Alexandrite\", \"Count\": 1 } ] } { \"timestamp\": \"2019-04-17 T13 : 40 : 39 Z \", \" event \": \" SAASignalsFound \", \" BodyName \": \" Hermitage 4 b \", \" SystemAddress \": 5363877956440, \" BodyID \": 13, \" Signals \" : [ { \"Type\" : \"$SAA_SignalType_Geological;\" , \"Type_Localised\" : \"Geological\" , \"Count\" : 14 } ] } { \"timestamp\": \"2022-07-01 T09 : 14 : 32 Z \", \" event \": \" SAASignalsFound \", \" BodyName \": \" Asellus 3 a \", \" SystemAddress \": 1144348739947, \" BodyID \": 10, \" Signals \": [ { \"Type\" : \"$SAA_SignalType_Biological;\" , \"Type_Localised\" : \"Biological\" , \"Count\" : 2 }, { \"Type\" : \"$SAA_SignalType_Geological;\" , \"Type_Localised\" : \"Geological\" , \"Count\" : 3 }, { \"Type\" : \"$SAA_SignalType_Human;\" , \"Type_Localised\" : \"Human\" , \"Count\" : 8 } ] , \" Genuses \" : [ { \"Genus\" : \"$Codex_Ent_Bacterial_Genus_Name;\" , \"Genus_Localised\" : \"Bacterium\" }, { \"Genus\" : \"$Codex_Ent_Stratum_Genus_Name;\" , \"Genus_Localised\" : \"Stratum\" } ] }","title":"SAASignalsFound"},{"location":"exploration/#scanbarycentre","text":"When scanning one body of a binary pair, you will now get an event detailing the orbital parameters of their BaryCentre Parameters: StarSystem SystemAddress BodyID SemiMajorAxis Eccentricity OrbitalInclination Periapsis OrbitalPeriod AscendingNode MeanAnomaly Example { \"timestamp\": \"2021-07-27T13:52:20Z\", \"event\": \"ScanBaryCentre\", \"StarSystem\": \"Col 285 Sector YX-N b21-1\", \"SystemAddress\": 2867561768401, \"BodyID\": 10, \"SemiMajorAxis\": 2107998251914.978, \"Eccentricity\": 0.033074, \"OrbitalInclination\": 0.019013, \"Periapsis\": 342.187341, \"OrbitalPeriod\": 3739380657.672882, \"AscendingNode\": -31.477241, \"MeanAnomaly\": 64.03028 }","title":"ScanBaryCentre"},{"location":"exploration/#sellexplorationdata","text":"When Written: when selling exploration data in Cartographics Parameters: Systems: JSON array of system names Discovered: JSON array of discovered bodies BaseValue: value of systems Bonus: bonus for first discoveries TotalEarnings: total credits received (including for example the 200% bonus if rank 5 with Li Yong Rui) Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"SellExplorationData\", \"Systems\": [ \"HIP 78085\", \"Praea Euq NW-W b1-3\" ], \"Discovered\": [ \"HIP 78085 A\", \"Praea Euq NW-W b1-3\", \"Praea Euq NW-W b1-3 3 a\", \"Praea Euq NW-W b1-3 3\" ], \"BaseValue\": 10822, \"Bonus\": 3959, \"TotalEarnings\": 44343 }","title":"SellExplorationData"},{"location":"exploration/#screenshot","text":"When Written: when a screen snapshot is saved Parameters: Filename: filename of screenshot Width: size in pixels Height: size in pixels System: current star system Body: name of nearest body Latitude Longitude Altitude Heading The latitude, longitude, altitude and heading will be included if on a planet or in low-altitude flight Example: { \"timestamp\": \"2018-01-17T09:48:26Z\", \"event\": \"Screenshot\", \"Filename\": \"_Screenshots/Screenshot_0024.bmp\", \"Width\": 1440, \"Height\": 900, \"System\": \"Nuenets\", \"Body\": \"Nuenets C 2\", \"Latitude\": -60.7999, \"Longitude\": -74.059799, \"Heading\": 39, \"Altitude\": 27502.876953 }","title":"Screenshot"},{"location":"file-format/","text":"File Format \u00b6 The Player Journal is written in line-delimited JSON format (see json.org and jsonlines.org), to provide a standard format for ease of machine parsing, while still being intelligible to the human reader. Each Journal file is a series of lines each containing one Json object. File Location \u00b6 The journal files are written into the user's Saved Games folder, eg, for Windows: C:\\Users\\User Name\\Saved Games\\Frontier Developments\\Elite Dangerous\\ The filename is of the form Journal .<datestamp>.<part> .log , similar to network log files In addition to the incremental player journal file, the following files are written into the same folder: Market.json \u2013 contains list of commodities available at a station, with price info (written when opening commodity interaction screen). See section \u00a78.17 Outfitting.json \u2013 contains list of modules and prices at station (written when opening outfitting interaction). See section \u00a78.31 Shipyard.json \u2013 contains list of ships available in shipyard, with prices (written when opening shipyard screen). See section \u00a78.46 Status.json \u2013 contains frequently-changing info as displayed in the cockpit gui. This is updated when the data changes. See section \u00a714 Heading entry \u00b6 The Heading record has a Json object with the following values: timestamp: the time in GMT, ISO 8601 part: the file part number odyssey: bool language: the language code gameversion: which version of the game produced the log (will indicate if beta) build: game build number Example: { \"timestamp\": \"2016-07-22T10:20:01Z\", \"event\": \"fileheader\", \"part\": 1, \"language\": \"French/FR\", \"gameversion\": \"4.0.0.100\", \"build\": \"r114123 \" } (If the play session goes on a long time, and the journal gets very large, the file will be closed and a new file started with an increased part number: the heading entry is added at the beginning of every file. See also the \"Continued\" event) Event Records \u00b6 Each event record is a json object. The object has a \"timestamp\" value with the time in ISO 8601 format, an \"event\":\" eventname \" key-value pair identifying the type of event, followed by other key-value pairs providing additional information. The rest of this document describes each type of event that might be written into the journal, and the data values for each event. Localisation \u00b6 Some values written into the log use internal symbol IDs, as used by the game to lookup localised text strings. These have the form \"$symbolname;\" When such values are written into the log, the iocalised version of the string will also be written (UTF8 encoded), as a separate key-value pair, with \"_Localised\" appended to the key name. Examples throughout this document have not been updated with this extra localised format \"Government\":\"$government_PrisonColony;\", \"Government_Localised\":\"Colonie p\u00e9nitentiaire\" In addition, for v3.0, all commodity names and material names will also be localised, eg if we had \"Material \":\"hyperspacetrajectories\", we will get the result \"Material_Localised\":\"Eccentric Hyperspace Trajectories\" However the localised value will be omitted if it is exactly the same as the original, ie avoid: { \"Name\":\"iron\", \"Name_Localised\":\"Iron\", \"Count\":2 }","title":"File Format"},{"location":"file-format/#file_format","text":"The Player Journal is written in line-delimited JSON format (see json.org and jsonlines.org), to provide a standard format for ease of machine parsing, while still being intelligible to the human reader. Each Journal file is a series of lines each containing one Json object.","title":"File Format"},{"location":"file-format/#file_location","text":"The journal files are written into the user's Saved Games folder, eg, for Windows: C:\\Users\\User Name\\Saved Games\\Frontier Developments\\Elite Dangerous\\ The filename is of the form Journal .<datestamp>.<part> .log , similar to network log files In addition to the incremental player journal file, the following files are written into the same folder: Market.json \u2013 contains list of commodities available at a station, with price info (written when opening commodity interaction screen). See section \u00a78.17 Outfitting.json \u2013 contains list of modules and prices at station (written when opening outfitting interaction). See section \u00a78.31 Shipyard.json \u2013 contains list of ships available in shipyard, with prices (written when opening shipyard screen). See section \u00a78.46 Status.json \u2013 contains frequently-changing info as displayed in the cockpit gui. This is updated when the data changes. See section \u00a714","title":"File Location"},{"location":"file-format/#heading_entry","text":"The Heading record has a Json object with the following values: timestamp: the time in GMT, ISO 8601 part: the file part number odyssey: bool language: the language code gameversion: which version of the game produced the log (will indicate if beta) build: game build number Example: { \"timestamp\": \"2016-07-22T10:20:01Z\", \"event\": \"fileheader\", \"part\": 1, \"language\": \"French/FR\", \"gameversion\": \"4.0.0.100\", \"build\": \"r114123 \" } (If the play session goes on a long time, and the journal gets very large, the file will be closed and a new file started with an increased part number: the heading entry is added at the beginning of every file. See also the \"Continued\" event)","title":"Heading entry"},{"location":"file-format/#event_records","text":"Each event record is a json object. The object has a \"timestamp\" value with the time in ISO 8601 format, an \"event\":\" eventname \" key-value pair identifying the type of event, followed by other key-value pairs providing additional information. The rest of this document describes each type of event that might be written into the journal, and the data values for each event.","title":"Event Records"},{"location":"file-format/#localisation","text":"Some values written into the log use internal symbol IDs, as used by the game to lookup localised text strings. These have the form \"$symbolname;\" When such values are written into the log, the iocalised version of the string will also be written (UTF8 encoded), as a separate key-value pair, with \"_Localised\" appended to the key name. Examples throughout this document have not been updated with this extra localised format \"Government\":\"$government_PrisonColony;\", \"Government_Localised\":\"Colonie p\u00e9nitentiaire\" In addition, for v3.0, all commodity names and material names will also be localised, eg if we had \"Material \":\"hyperspacetrajectories\", we will get the result \"Material_Localised\":\"Eccentric Hyperspace Trajectories\" However the localised value will be omitted if it is exactly the same as the original, ie avoid: { \"Name\":\"iron\", \"Name_Localised\":\"Iron\", \"Count\":2 }","title":"Localisation"},{"location":"fleetcarriers/","text":"Fleet Carriers \u00b6 CarrierJump \u00b6 This is similar to FSDJump and Location, but it is written if the player is online and docked at a fleet carrier when the carrier jumps. Note it does not include the distance jumped, or fuel used. Example: { \"timestamp\": \"2020-03-25 T15 : 55 : 56 Z \", \" event \": \" CarrierJump \", \" Docked \": true, \" StationName \": \" FC L14X1J \", \" StationType \": \" FleetCarrier \", \" MarketID \": 3700005632, \" StationFaction \": { \" Name \": \" FleetCarrier \" }, \" StationGovernment \": \" $ government_Carrier ; \", \"StationGovernment_Localised\": \"Private Ownership \", \"StationServices\": [ \"dock\" , \"autodock\" , \"blackmarket\" , \"commodities\" , \"outfitting\" , \"crewlounge\" , \"rearm\" , \"refuel\" , \"repair\" , \"shipyard\" , \"tuning\" , \"engineer\" , \"flightcontroller\" , \"stationoperations\" , \"stationMenu\" , \"carriermanagement\" , \"carrierfuel\" , \"voucherredemption\" ] , \"StationEconomy\": \"$economy_Extraction ; \", \"StationEconomy_Localised\": \"Extraction\", \"StationEconomies\": [ { \"Name\" : \"$economy_Extraction;\" , \"Name_Localised\" : \"Extraction\" , \"Proportion\" : 1 } ] , \"StarSystem\": \"Hermitage\", \"SystemAddress\": 5363877956440, \"StarPos\": [ - 28.75 , 25 , 10.4375 ] , \"SystemAllegiance\": \"\", \"SystemEconomy\": \"$economy_None ; \", \"SystemEconomy_Localised\": \"None\", \"SystemSecondEconomy\": \"$economy_None ; \", \"SystemSecondEconomy_Localised\": \"None\", \"SystemGovernment\": \"$government_None ; \", \"SystemGovernment_Localised\": \"None\", \"SystemSecurity\": \"$GAlAXY_MAP_INFO_state_anarchy ; \", \"SystemSecurity_Localised\": \"Anarchy\", \"Population\": 0, \"Body\": \"Hermitage\", \"BodyID\": 0, \"BodyType\": \"Star\", \"SystemFaction\": { \"Name\": \"FleetCarrier\" } } CarrierBuy \u00b6 Player has bought a fleet carrier BoughtAtmarket: marketid CarrierID : marketid Location: starsystem name Price: number Variant: string Callsign: string { \"timestamp\": \"2020-03-11T15:31:46Z\", \"event\": \"CarrierBuy\", \"CarrierID\": 3700029440, \"BoughtAtMarket\": 3221301504, \"Location\": \"Kakmbutan\", \"SystemAddress\": 3549513615723, \"Price\": 4875000000, \"Variant\": \"CarrierDockB\", \"Callsign\": \"P07-V3L\" } CarrierStats \u00b6 When owner opens carrier management CarrierID: marketid Callsign: string Name: string DockingAccess: all/none/friends/squadron/squadronfriends AllowNotorious: bool FuelLevel: int JumpRangeCurr: float JumpRangeMax: float PendingDecommission: bool SpaceUsage { TotalCapacity, Crew, Cargo, CargoSpaceReserved, ShipPacks, ModulePacks, FreeSpace} Finance { CarrierBalance, ReserveBalance, AvailableBalance, ReservePercent, TaxRate } Crew [{ CrewRole, Activated, Enabled, CrewName },...] ShipPacks [{ PackTheme, packTier },...] ModulePacks [{PackTheme, packTier },...] { \"timestamp\": \"2020-03-27T09:42:04Z\", \"event\": \"CarrierStats\", \"CarrierID\": 3700005632, \"Callsign\": \"L14-X1J\", \"Name\": \"Spirula\", \"DockingAccess\": \"all\", \"AllowNotorious\": false, \"FuelLevel\": 63, \"JumpRangeCurr\": 81.079422, \"JumpRangeMax\": 500, \"PendingDecommission\": false, \"SpaceUsage\": { \"TotalCapacity\": 25000, \"Crew\": 5450, \"Cargo\": 440, \"CargoSpaceReserved\": 44, \"ShipPacks\": 774, \"ModulePacks\": 913, \"FreeSpace\": 17379 }, \"Finance\": { \"CarrierBalance\": 10000000, \"ReserveBalance\": 1800000, \"AvailableBalance\": 8171946, \"ReservePercent\": 18, \"TaxRate\": 3 }, \"Crew\": [ { \"CrewRole\": \"BlackMarket\", \"Activated\": true, \"Enabled\": true, \"CrewName\": \"Aliza Baldwin\" }, { \"CrewRole\": \"Captain\", \"Activated\": true, \"Enabled\": true, \"CrewName\": \"Herbert Benson\" }, { \"CrewRole\": \"Refuel\", \"Activated\": true, \"Enabled\": false, \"CrewName\": \"Maricela White\" }, { \"CrewRole\": \"Repair\", \"Activated\": true, \"Enabled\": false, \"CrewName\": \"Zayla Clements\" }, { \"CrewRole\": \"Rearm\", \"Activated\": true, \"Enabled\": false, \"CrewName\": \"Bill Lambert\" }, { \"CrewRole\": \"Commodities\", \"Activated\": true, \"Enabled\": true, \"CrewName\": \"Lizeth Morales\" }, { \"CrewRole\": \"VoucherRedemption\", \"Activated\": true, \"Enabled\": false, \"CrewName\": \"Phillip Gjoni\" }, { \"CrewRole\": \"Shipyard\", \"Activated\": true, \"Enabled\": false, \"CrewName\": \"Simon Rhodes\" }, { \"CrewRole\": \"Outfitting\", \"Activated\": true, \"Enabled\": false, \"CrewName\": \"Eugene Johnson\" }, { \"CrewRole\": \"CarrierFuel\", \"Activated\": true, \"Enabled\": true, \"CrewName\": \"Orlando York\" } ], \"ShipPacks\": [ { \"PackTheme\": \"Zorgon Peterson - Cargo\", \"PackTier\": 1 } ], \"ModulePacks\": [ { \"PackTheme\": \"ExplosiveWeaponry\", \"PackTier\": 2 } ] } CarrierJumpRequest \u00b6 At the time the player requests the jump, not the jump itself CarrierID: marketid SystemName: starsystem name SystemID: systemaddress Body: (name) BodyID DepartureTime { \"timestamp\": \"2020-04-20T09:30:58Z\", \"event\": \"CarrierJumpRequest\", \"CarrierID\": 3700005632, \"SystemName\": \"Paesui Xena\", \"Body\": \"Paesui Xena A\", \"SystemAddress\": 7269634680241, \"BodyID\": 1, \"DepartureTime\":\"2020-04-20T09:45:00Z\" } CarrierDecommission \u00b6 At the time the player requests decommission CarrierID: marketid ScrapRefund: number Scraptime: timestamp { \"timestamp\": \"2020-03-11T15:12:26Z\", \"event\": \"CarrierDecommission\", \"CarrierID\": 3700005632, \"ScrapRefund\": 1746872629, \"ScrapTime\": 1584601200 } CarrierCancelDecommission \u00b6 CarrierID: marketid { \"timestamp\": \"2020-03-11T15:12:38Z\", \"event\": \"CarrierCancelDecommission\", \"CarrierID\": 3700005632 } CarrierBankTransfer \u00b6 Player transfers credits to/from carrier CarrierID: marketid Deposit, or Withdraw PlayerBalance: (after transfer) CarrierBalance: (after transfer) { \"timestamp\": \"2020-03-24T15:34:46Z\", \"event\": \"CarrierBankTransfer\", \"CarrierID\": 3700005632, \"Deposit\": 80000, \"PlayerBalance\": 717339604128, \"CarrierBalance\": 3020010 } CarrierDepositFuel \u00b6 Any player giving fuel to the carrier CarrierID: marketid Amount: tons Total: total amount of fuel after donation { \"timestamp\": \"2020-03-19T09:17:29Z\", \"event\": \"CarrierDepositFuel\", \"CarrierID\": 3700005632, \"Amount\": 45, \"Total\": 112 } CarrierCrewServices \u00b6 Changes to crew CarrierID: marketid Operation: (activate/deactivate/pause/resume/replace) CrewRole: string CrewName: string { \"timestamp\": \"2020-03-17T12:38:54Z\", \"event\": \"CarrierCrewServices\", \"CarrierID\": 3700005632, \"CrewRole\": \"Outfitting\", \"Operation\": \"Activate\", \"CrewName\": \"Eugene Johnson\" } CarrierFinance \u00b6 Change to tax rate or reserve CarrierID: marketid TaxRate: number CarrierBalance: number ReserveBalance: number AvailableBalance: number ReservePercent: number { \"timestamp\": \"2020-03-26T10:36:32Z\", \"event\": \"CarrierFinance\", \"CarrierID\": 3700005632, \"TaxRate\": 5, \"CarrierBalance\": 3278186, \"ReserveBalance\": 0, \"AvailableBalance\": 475108, \"ReservePercent\": 0 } CarrierShipPack \u00b6 CarrierShipPack/CarrierModulePack CarrierID: marketid Operation: buypack/sellpack/restockpack PackTheme: name PackTier: name Cost/Refund: int { \"timestamp\": \"2020-03-16T09:25:39Z\", \"event\": \"CarrierShipPack\", \"CarrierID\": 3700005632, \"Operation\": \"BuyPack\", \"PackTheme\": \"Zorgon Peterson - Cargo\", \"PackTier\": 1, \"Cost\": 1668880 } CarrierModulePack \u00b6 Same format as CarrierShipPack CarrierTradeOrder \u00b6 The carrier owner has requested the carrier buys or sells goods (or cancels such an order) CarrierID: marketid BlackMarket: bool Commodity: name PurchaseOrder: quantity or SaleOrder: quantity (current stock) or CancelTrade: true Price: int { \"timestamp\": \"2020-03-16T14:52:36Z\", \"event\": \"CarrierTradeOrder\", \"CarrierID\": 3700005632, \"BlackMarket\": false, \"Commodity\": \"mineraloil\", \"Commodity_Localised\": \"Mineral Oil\", \"PurchaseOrder\": 70, \"Price\": 228 } CarrierDockingPermission \u00b6 The carrier owner has changed the docking permission criteria CarrierID: marketid DockingAccess: all/none/friends/squadron/squadronfriends AllowNotorious: bool { \"timestamp\": \"2020-03-11T15:07:25Z\", \"event\": \"CarrierDockingPermission\", \"CarrierID\": 3700005632, \"DockingAccess\": \"squadron\", \"AllowNotorious\": true } CarrierNameChanged \u00b6 This is logged when a carrier's name is changed CarrierID Callsign Name CarrierJumpCancelled \u00b6 This is logged when a jump is cancelled CarrierID","title":"Fleet Carriers"},{"location":"fleetcarriers/#fleet_carriers","text":"","title":"Fleet Carriers"},{"location":"fleetcarriers/#carrierjump","text":"This is similar to FSDJump and Location, but it is written if the player is online and docked at a fleet carrier when the carrier jumps. Note it does not include the distance jumped, or fuel used. Example: { \"timestamp\": \"2020-03-25 T15 : 55 : 56 Z \", \" event \": \" CarrierJump \", \" Docked \": true, \" StationName \": \" FC L14X1J \", \" StationType \": \" FleetCarrier \", \" MarketID \": 3700005632, \" StationFaction \": { \" Name \": \" FleetCarrier \" }, \" StationGovernment \": \" $ government_Carrier ; \", \"StationGovernment_Localised\": \"Private Ownership \", \"StationServices\": [ \"dock\" , \"autodock\" , \"blackmarket\" , \"commodities\" , \"outfitting\" , \"crewlounge\" , \"rearm\" , \"refuel\" , \"repair\" , \"shipyard\" , \"tuning\" , \"engineer\" , \"flightcontroller\" , \"stationoperations\" , \"stationMenu\" , \"carriermanagement\" , \"carrierfuel\" , \"voucherredemption\" ] , \"StationEconomy\": \"$economy_Extraction ; \", \"StationEconomy_Localised\": \"Extraction\", \"StationEconomies\": [ { \"Name\" : \"$economy_Extraction;\" , \"Name_Localised\" : \"Extraction\" , \"Proportion\" : 1 } ] , \"StarSystem\": \"Hermitage\", \"SystemAddress\": 5363877956440, \"StarPos\": [ - 28.75 , 25 , 10.4375 ] , \"SystemAllegiance\": \"\", \"SystemEconomy\": \"$economy_None ; \", \"SystemEconomy_Localised\": \"None\", \"SystemSecondEconomy\": \"$economy_None ; \", \"SystemSecondEconomy_Localised\": \"None\", \"SystemGovernment\": \"$government_None ; \", \"SystemGovernment_Localised\": \"None\", \"SystemSecurity\": \"$GAlAXY_MAP_INFO_state_anarchy ; \", \"SystemSecurity_Localised\": \"Anarchy\", \"Population\": 0, \"Body\": \"Hermitage\", \"BodyID\": 0, \"BodyType\": \"Star\", \"SystemFaction\": { \"Name\": \"FleetCarrier\" } }","title":"CarrierJump"},{"location":"fleetcarriers/#carrierbuy","text":"Player has bought a fleet carrier BoughtAtmarket: marketid CarrierID : marketid Location: starsystem name Price: number Variant: string Callsign: string { \"timestamp\": \"2020-03-11T15:31:46Z\", \"event\": \"CarrierBuy\", \"CarrierID\": 3700029440, \"BoughtAtMarket\": 3221301504, \"Location\": \"Kakmbutan\", \"SystemAddress\": 3549513615723, \"Price\": 4875000000, \"Variant\": \"CarrierDockB\", \"Callsign\": \"P07-V3L\" }","title":"CarrierBuy"},{"location":"fleetcarriers/#carrierstats","text":"When owner opens carrier management CarrierID: marketid Callsign: string Name: string DockingAccess: all/none/friends/squadron/squadronfriends AllowNotorious: bool FuelLevel: int JumpRangeCurr: float JumpRangeMax: float PendingDecommission: bool SpaceUsage { TotalCapacity, Crew, Cargo, CargoSpaceReserved, ShipPacks, ModulePacks, FreeSpace} Finance { CarrierBalance, ReserveBalance, AvailableBalance, ReservePercent, TaxRate } Crew [{ CrewRole, Activated, Enabled, CrewName },...] ShipPacks [{ PackTheme, packTier },...] ModulePacks [{PackTheme, packTier },...] { \"timestamp\": \"2020-03-27T09:42:04Z\", \"event\": \"CarrierStats\", \"CarrierID\": 3700005632, \"Callsign\": \"L14-X1J\", \"Name\": \"Spirula\", \"DockingAccess\": \"all\", \"AllowNotorious\": false, \"FuelLevel\": 63, \"JumpRangeCurr\": 81.079422, \"JumpRangeMax\": 500, \"PendingDecommission\": false, \"SpaceUsage\": { \"TotalCapacity\": 25000, \"Crew\": 5450, \"Cargo\": 440, \"CargoSpaceReserved\": 44, \"ShipPacks\": 774, \"ModulePacks\": 913, \"FreeSpace\": 17379 }, \"Finance\": { \"CarrierBalance\": 10000000, \"ReserveBalance\": 1800000, \"AvailableBalance\": 8171946, \"ReservePercent\": 18, \"TaxRate\": 3 }, \"Crew\": [ { \"CrewRole\": \"BlackMarket\", \"Activated\": true, \"Enabled\": true, \"CrewName\": \"Aliza Baldwin\" }, { \"CrewRole\": \"Captain\", \"Activated\": true, \"Enabled\": true, \"CrewName\": \"Herbert Benson\" }, { \"CrewRole\": \"Refuel\", \"Activated\": true, \"Enabled\": false, \"CrewName\": \"Maricela White\" }, { \"CrewRole\": \"Repair\", \"Activated\": true, \"Enabled\": false, \"CrewName\": \"Zayla Clements\" }, { \"CrewRole\": \"Rearm\", \"Activated\": true, \"Enabled\": false, \"CrewName\": \"Bill Lambert\" }, { \"CrewRole\": \"Commodities\", \"Activated\": true, \"Enabled\": true, \"CrewName\": \"Lizeth Morales\" }, { \"CrewRole\": \"VoucherRedemption\", \"Activated\": true, \"Enabled\": false, \"CrewName\": \"Phillip Gjoni\" }, { \"CrewRole\": \"Shipyard\", \"Activated\": true, \"Enabled\": false, \"CrewName\": \"Simon Rhodes\" }, { \"CrewRole\": \"Outfitting\", \"Activated\": true, \"Enabled\": false, \"CrewName\": \"Eugene Johnson\" }, { \"CrewRole\": \"CarrierFuel\", \"Activated\": true, \"Enabled\": true, \"CrewName\": \"Orlando York\" } ], \"ShipPacks\": [ { \"PackTheme\": \"Zorgon Peterson - Cargo\", \"PackTier\": 1 } ], \"ModulePacks\": [ { \"PackTheme\": \"ExplosiveWeaponry\", \"PackTier\": 2 } ] }","title":"CarrierStats"},{"location":"fleetcarriers/#carrierjumprequest","text":"At the time the player requests the jump, not the jump itself CarrierID: marketid SystemName: starsystem name SystemID: systemaddress Body: (name) BodyID DepartureTime { \"timestamp\": \"2020-04-20T09:30:58Z\", \"event\": \"CarrierJumpRequest\", \"CarrierID\": 3700005632, \"SystemName\": \"Paesui Xena\", \"Body\": \"Paesui Xena A\", \"SystemAddress\": 7269634680241, \"BodyID\": 1, \"DepartureTime\":\"2020-04-20T09:45:00Z\" }","title":"CarrierJumpRequest"},{"location":"fleetcarriers/#carrierdecommission","text":"At the time the player requests decommission CarrierID: marketid ScrapRefund: number Scraptime: timestamp { \"timestamp\": \"2020-03-11T15:12:26Z\", \"event\": \"CarrierDecommission\", \"CarrierID\": 3700005632, \"ScrapRefund\": 1746872629, \"ScrapTime\": 1584601200 }","title":"CarrierDecommission"},{"location":"fleetcarriers/#carriercanceldecommission","text":"CarrierID: marketid { \"timestamp\": \"2020-03-11T15:12:38Z\", \"event\": \"CarrierCancelDecommission\", \"CarrierID\": 3700005632 }","title":"CarrierCancelDecommission"},{"location":"fleetcarriers/#carrierbanktransfer","text":"Player transfers credits to/from carrier CarrierID: marketid Deposit, or Withdraw PlayerBalance: (after transfer) CarrierBalance: (after transfer) { \"timestamp\": \"2020-03-24T15:34:46Z\", \"event\": \"CarrierBankTransfer\", \"CarrierID\": 3700005632, \"Deposit\": 80000, \"PlayerBalance\": 717339604128, \"CarrierBalance\": 3020010 }","title":"CarrierBankTransfer"},{"location":"fleetcarriers/#carrierdepositfuel","text":"Any player giving fuel to the carrier CarrierID: marketid Amount: tons Total: total amount of fuel after donation { \"timestamp\": \"2020-03-19T09:17:29Z\", \"event\": \"CarrierDepositFuel\", \"CarrierID\": 3700005632, \"Amount\": 45, \"Total\": 112 }","title":"CarrierDepositFuel"},{"location":"fleetcarriers/#carriercrewservices","text":"Changes to crew CarrierID: marketid Operation: (activate/deactivate/pause/resume/replace) CrewRole: string CrewName: string { \"timestamp\": \"2020-03-17T12:38:54Z\", \"event\": \"CarrierCrewServices\", \"CarrierID\": 3700005632, \"CrewRole\": \"Outfitting\", \"Operation\": \"Activate\", \"CrewName\": \"Eugene Johnson\" }","title":"CarrierCrewServices"},{"location":"fleetcarriers/#carrierfinance","text":"Change to tax rate or reserve CarrierID: marketid TaxRate: number CarrierBalance: number ReserveBalance: number AvailableBalance: number ReservePercent: number { \"timestamp\": \"2020-03-26T10:36:32Z\", \"event\": \"CarrierFinance\", \"CarrierID\": 3700005632, \"TaxRate\": 5, \"CarrierBalance\": 3278186, \"ReserveBalance\": 0, \"AvailableBalance\": 475108, \"ReservePercent\": 0 }","title":"CarrierFinance"},{"location":"fleetcarriers/#carriershippack","text":"CarrierShipPack/CarrierModulePack CarrierID: marketid Operation: buypack/sellpack/restockpack PackTheme: name PackTier: name Cost/Refund: int { \"timestamp\": \"2020-03-16T09:25:39Z\", \"event\": \"CarrierShipPack\", \"CarrierID\": 3700005632, \"Operation\": \"BuyPack\", \"PackTheme\": \"Zorgon Peterson - Cargo\", \"PackTier\": 1, \"Cost\": 1668880 }","title":"CarrierShipPack"},{"location":"fleetcarriers/#carriermodulepack","text":"Same format as CarrierShipPack","title":"CarrierModulePack"},{"location":"fleetcarriers/#carriertradeorder","text":"The carrier owner has requested the carrier buys or sells goods (or cancels such an order) CarrierID: marketid BlackMarket: bool Commodity: name PurchaseOrder: quantity or SaleOrder: quantity (current stock) or CancelTrade: true Price: int { \"timestamp\": \"2020-03-16T14:52:36Z\", \"event\": \"CarrierTradeOrder\", \"CarrierID\": 3700005632, \"BlackMarket\": false, \"Commodity\": \"mineraloil\", \"Commodity_Localised\": \"Mineral Oil\", \"PurchaseOrder\": 70, \"Price\": 228 }","title":"CarrierTradeOrder"},{"location":"fleetcarriers/#carrierdockingpermission","text":"The carrier owner has changed the docking permission criteria CarrierID: marketid DockingAccess: all/none/friends/squadron/squadronfriends AllowNotorious: bool { \"timestamp\": \"2020-03-11T15:07:25Z\", \"event\": \"CarrierDockingPermission\", \"CarrierID\": 3700005632, \"DockingAccess\": \"squadron\", \"AllowNotorious\": true }","title":"CarrierDockingPermission"},{"location":"fleetcarriers/#carriernamechanged","text":"This is logged when a carrier's name is changed CarrierID Callsign Name","title":"CarrierNameChanged"},{"location":"fleetcarriers/#carrierjumpcancelled","text":"This is logged when a jump is cancelled CarrierID","title":"CarrierJumpCancelled"},{"location":"misc-events/","text":"Other Events \u00b6 AfmuRepairs \u00b6 When written: when repairing modules using the Auto Field Maintenance Unit (AFMU) Parameters: Module: module name FullyRepaired: (bool) Health; (float 0.0..1.0) If the AFMU runs out of ammo, the module may not be fully repaired. Example: { \"timestamp\": \"2017-08-14 T15 : 41 : 50 Z \", \" event \": \" AfmuRepairs \", \" Module \": \" $ modularcargobaydoor_name ; \", \"Module_Localised\": \"Cargo Hatch\", \"FullyRepaired\": true, \"Health\": 1 } ApproachSettlement \u00b6 When written: when approaching a planetary settlement Parameters: Name MarketID Latitude Longitude SystemAddress BodyID BodyName ChangeCrewRole \u00b6 When written: when in a crew on someone else's ship, player switched crew role Parameters: Role: name of selected role (Idle, FireCon, FighterCon) Telepresence: (bool) (only from Odyssey build) CockpitBreached \u00b6 When written: when cockpit canopy is breached Parameters: none Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"CockpitBreached\" } CommitCrime \u00b6 When written: when a crime is recorded against the player Parameters: CrimeType \u2013 see \u00a715.6 Faction Optional parameters (depending on crime) Victim Fine Bounty Examples: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"CommitCrime\", \"CrimeType\": \"assault\", \"Faction\": \"The Pilots Federation\", \"Victim\": \"Potapinski\", \"Bounty\": 210 } { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"CommitCrime\", \"CrimeType\": \"fireInNoFireZone\", \"Faction\": \"Jarildekald Public Industry\", \"Fine\": 100 } Continued \u00b6 When written: if the journal file grows to 500k lines, we write this event, close the file, and start a new one Parameters: Part: next part number CrewLaunchFighter \u00b6 When written: when in multicrew, in Helm player's log, when a crew member launches a fighter Parameters: Crew: name of crew member launching in fighter ID Telepresence: (bool) (only from Odyssey build) CrewMemberJoins \u00b6 When written: When another player joins your ship's crew Parameters: Crew: player's commander name Telepresence: (bool) (only from Odyssey build) CrewMemberQuits \u00b6 When written: When another player leaves your ship's crew Parameters: Crew: player's commander name Telepresence: (bool) (only from Odyssey build) CrewMemberRoleChange \u00b6 When written: in Multicrew, Helm's log, when another crew player changes role Parameters: Crew: player name Role: selected role Telepresence: (bool) (only from Odyssey build) Example: { \"timestamp\": \"2017-02-22T14:56:54Z\", \"event\": \"CrewMemberRoleChange\", \"Crew\": \"HRC1\", \"Role\": \"FireCon\" } CrimeVictim \u00b6 When written: when another player commits a crime against the current player Parameters: Offender CrimeType Fine _or _Bounty DatalinkScan \u00b6 When written: when scanning a data link Parameters: Message: message from data link DatalinkVoucher \u00b6 When written: when scanning a datalink generates a reward Parameters: Reward: value in credits VictimFaction PayeeFaction DataScanned \u00b6 When written: when scanning some types of data links Parameters: Type Type will typically be one of \"DataLink\", \"DataPoint\", \"ListeningPost\", \"AbandonedDataLog\", \"WreckedShip\", etc DockFighter \u00b6 When written: when docking a fighter back with the mothership Parameters: ID Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"DockFighter\" } DockSRV \u00b6 When written: when docking an SRV with the ship Parameters: ID SRVType EndCrewSession \u00b6 When written: when the captain in multicrew disbands the crew Parameters: OnCrime: (bool) true if crew disbanded as a result of a crime in a lawful session Telepresence: (bool) (only from Odyssey build) FighterRebuilt \u00b6 When written: when a ship's fighter is rebuilt in the hangar Parameters: Loadout ID FuelScoop \u00b6 When written: when scooping fuel from a star Parameters: Scooped: tons fuel scooped Total: total fuel level after scooping Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"FuelScoop\", \"Scooped\": 0.4987, \"Total\": 16 } Friends \u00b6 When written: when receiving information about a change in a friend's status Also written at startup for friends who are already online (new in v2.4) Parameters: Status: one of the following: Requested, Declined, Added, Lost, Offline, Online Name: the friend's commander name JetConeBoost \u00b6 When written: when enough material has been collected from a solar jet code (at a white dwarf or neutron star) for a jump boost Parameters: BoostValue JetConeDamage \u00b6 When written: when passing through the jet code from a white dwarf or neutron star has caused damage to a ship module Parameters: Module: the name of the module that has taken some damage JoinACrew \u00b6 When written: When you join another player ship's crew Parameters: Captain: Helm player's commander name Telepresence: (bool) (only from Odyssey build) KickCrewMember \u00b6 When written: When you force another player to leave your ship's crew Parameters: Crew: player's commander name OnCrime: (bool) true if player is automatically kicked for committing a crime in a lawful session Telepresence: (bool) (only from Odyssey build) LaunchDrone \u00b6 When written: when using any type of drone/limpet Parameters: Type: one of: \"Hatchbreaker\", \"FuelTransfer\", \"Collection\", \"Prospector\", \"Repair\", \"Research\", \"Decontamination\" LaunchFighter \u00b6 When written: when launching a fighter Parameters: Loadout ID PlayerControlled: whether player is controlling the fighter from launch { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"LaunchFighter\", \"Loadout\": \"starter\", \"PlayerControlled\": true } LaunchSRV \u00b6 When written: deploying the SRV from a ship onto planet surface Parameters: Loadout ID SRVType ModuleInfo \u00b6 When written: when looking at the cockpit RHS modules info panel, if data has changed This also writes a ModulesInfo.json file alongside the journal, listing the modules in the same order as displayed Parameters: None Example of ModulesInfo file: { \"timestamp\":\"2018-01-10T14:35:08Z\", \"event\":\"ModuleInfo\", \"Modules\":[ { \"Slot\":\"MainEngines\", \"Item\":\"int_engine_size3_class5\", \"Power\":3.720000, \"Priority\":0 }, { \"Slot\":\"MediumHardpoint1\", \"Item\":\"hpt_beamlaser_turret_medium\", \"Power\":0.930000, \"Priority\":0 }, { \"Slot\":\"Slot03_Size2\", \"Item\":\"int_shieldgenerator_size2_class1\", \"Power\":0.900000, \"Priority\":2 }, { \"Slot\":\"MediumHardpoint2\", \"Item\":\"hpt_multicannon_gimbal_medium\", \"Power\":0.640000, \"Priority\":0 }, { \"Slot\":\"CargoHatch\", \"Item\":\"modularcargobaydoor\", \"Power\":0.600000, \"Priority\":2 }, { \"Slot\":\"MediumHardpoint3\", \"Item\":\"hpt_pulselaser_gimbal_medium\", \"Power\":0.600000, \"Priority\":0 }, { \"Slot\":\"PowerDistributor\", \"Item\":\"int_powerdistributor_size3_class5\", \"Power\":0.600000, \"Priority\":0 }, { \"Slot\":\"FrameShiftDrive\", \"Item\":\"int_hyperdrive_size3_class5\", \"Power\":0.450000, \"Priority\":0 }, { \"Slot\":\"Slot04_Size2\", \"Item\":\"int_fuelscoop_size2_class5\", \"Power\":0.390000, \"Priority\":0 }, { \"Slot\":\"LifeSupport\", \"Item\":\"int_lifesupport_size1_class1\", \"Power\":0.320000, \"Priority\":2 }, { \"Slot\":\"Slot05_Size2\", \"Item\":\"int_buggybay_size2_class1\", \"Power\":0.250000, \"Priority\":0 }, { \"Slot\":\"Radar\", \"Item\":\"int_sensors_size2_class2\", \"Power\":0.210000, \"Priority\":0 }, { \"Slot\":\"ShipCockpit\", \"Item\":\"empire_courier_cockpit\", \"Power\":0.000000 }, { \"Slot\":\"PowerPlant\", \"Item\":\"int_powerplant_size4_class2\", \"Power\":0.000000 }, { \"Slot\":\"Slot01_Size3\", \"Item\":\"int_cargorack_size2_class1\", \"Power\":0.000000 }, { \"Slot\":\"Slot02_Size3\", \"Item\":\"int_cargorack_size2_class1\", \"Power\":0.000000 }, { \"Slot\":\"Slot06_Size1\", \"Item\":\"int_stellarbodydiscoveryscanner_standard\", \"Power\":0.000000 }, { \"Slot\":\"DataLinkScanner\", \"Item\":\"hpt_shipdatalinkscanner\", \"Power\":0, \"Priority\":0 } ] } Music \u00b6 When written: when the game music 'mood' changes Parameters: MusicTrack: (name) Possible track names are: NoTrack, MainMenu, CQCMenu, SystemMap, GalaxyMap, GalacticPowers CQC, DestinationFromHyperspace, DestinationFromSupercruise, Supercruise, Combat_Unknown Unknown_Encounter, CapitalShip, CombatLargeDogFight, Combat_Dogfight, Combat_SRV Unknown_Settlement, DockingComputer, Starport, Unknown_Exploration, Exploration Note: Other music track names may be used in future NpcCrewPaidWage \u00b6 This is written when crew receive wages Parameters: NpcCrewId NpcCrewName Amount NpcCrewRank \u00b6 This is written when a crew member's combat rank increases Parameters: NpcCrewId NpcCrewName RankCombat Promotion \u00b6 When written: when the player's rank increases Parameters: one of the following Combat: new rank Trade: new rank Explore: new rank CQC: new rank Federation: Empire: Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"Promotion\", \"Explore\": 2 } ProspectedAsteroid \u00b6 When using a prospecting drone Parameters: Materials: (array of Name and Proportion) Content: (a string representing High/Medium/Low) MotherlodeMaterial: name (if it's a motherlode) Remaining: percentage QuitACrew \u00b6 When written: When you leave another player ship's crew Parameters: Captain: Helm player's commander name Telepresence: (bool) (only from Odyssey build) RebootRepair \u00b6 When written: when the 'reboot repair' function is used Parameters: Modules: JSON array of names of modules repaired Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"RebootRepair\", \"Modules\": [ \"MainEngines\", \"TinyHardpoint1\" ] } ReceiveText \u00b6 When written: when a text message is received from another player or npc Parameters: From Message Channel: (wing/local/voicechat/friend/player/npc/squadron/starsystem) RepairDrone \u00b6 When written: when the player's ship has been repaired by a repair drone Parameters: HullRepaired CockpitRepaired CorrosionRepaired Each of these is a number indicating the amount of damage that has been repaired ReservoirReplenished \u00b6 When fuel is moved from one fuel tank to another Parameters: FuelMain FuelReservoir Resurrect \u00b6 When written: when the player restarts after death Parameters: Option: the option selected on the insurance rebuy screen Cost: the price paid Bankrupt: whether the commander declared bankruptcy Scanned \u00b6 When written: when the player's ship has been scanned (note the \"Scan Detected\" indication is at the start of the scan, this is written at the end of a successful scan) Parameters: ScanType: Cargo, Crime, Cabin, Data or Unknown Example: { \"timestamp\": \"2017-02-13T12:30:09Z\", \"event\": \"Scanned\", \"ScanType\": \"Cargo\" } SelfDestruct \u00b6 When written: when the 'self destruct' function is used Parameters: none SendText \u00b6 When written: when a text message is sent to another player Parameters: To: may be player name, or channel name Message Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"SendText\", \"To\": \"HRC-2\", \"Message\": \"zoom\" } Shutdown \u00b6 When written: on a clean shutdown of the game Parameters: none Synthesis \u00b6 When written: when synthesis is used to repair or rearm Parameters: Name: synthesis blueprint Materials: JSON array with objects listing materials used and quantities Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"Synthesis\", \"Name\": \"Repair Basic\", \"Materials\": [ { \"Name\": \"iron\", \"Count\": 2 }, { \"Name\": \"nickel\", \"Count\": 1 } ] } SystemsShutdown \u00b6 When written: when the player's ship systems shut down (eg in a Thargoid encounter) Parameters: none USSDrop \u00b6 When written: when dropping from Supercruise at a USS Parameters: USSType: description of USS USSThreat: threat level Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"USSDrop\", \"USSType\": \"Disrupted wake echoes\", \"USSThreat\": 0 } VehicleSwitch \u00b6 When written: when switching control between the main ship and a fighter Parameters: To: ( Mothership/Fighter) Examples: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"VehicleSwitch\", \"To\": \"Fighter\" } { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"VehicleSwitch\", \"To\": \"Mothership\" } WingAdd \u00b6 When written: another player has joined the wing Parameters: Name Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"WingAdd\", \"Name\": \"HRC-2\" } WingInvite \u00b6 When written: when the player is invited to a wing Parameters: Name: the commander name of the player inviting to the wing WingJoin \u00b6 When written: this player has joined a wing Parameters: Others: JSON array of other player names already in wing Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"WingJoin\", \"Others\": [ \"HRC1\" ] } WingLeave \u00b6 When written: this player has left a wing Parameters: none Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"WingLeave\" } CargoTransfer \u00b6 When transferring cargo between ship and fleet carrier, or between ship and SRV Transfers: [ {Type, Count, Direction}, ... ] { \"timestamp\": \"2020-03-12T12:49:54Z\", \"event\": \"CargoTransfer\", \"Transfers\": [ { \"Type\": \"tea\", \"Count\": 1, \"Direction\": \"tocarrier\" }, { \"Type\": \"gold\", \"Count\": 1, \"Direction\": \"toship\" } ] } { \"timestamp\": \"2020-03-12T13:34:22Z\", \"event\": \"CargoTransfer\", \"Transfers\": [ { \"Type\": \"grain\", \"Count\": 2, \"Direction\": \"tosrv\" } ] } SupercruiseDestinationDrop \u00b6 When dropping out of supercruise at a targeted destination. Type: The type fo destination being dropped into Threat: threat level MarketID: (Optional)The market id of the destination if dropping at a market { \"timestamp\":\"2020-03-12T12:49:54Z\", \"event\":\"SupercruiseDestinationDrop\", \"Type\":\u201dAzeban City\u201d, \u201cThreat\u201d:0, \u201cMarketID\u201d:128001536 }","title":"Other Events"},{"location":"misc-events/#other_events","text":"","title":"Other Events"},{"location":"misc-events/#afmurepairs","text":"When written: when repairing modules using the Auto Field Maintenance Unit (AFMU) Parameters: Module: module name FullyRepaired: (bool) Health; (float 0.0..1.0) If the AFMU runs out of ammo, the module may not be fully repaired. Example: { \"timestamp\": \"2017-08-14 T15 : 41 : 50 Z \", \" event \": \" AfmuRepairs \", \" Module \": \" $ modularcargobaydoor_name ; \", \"Module_Localised\": \"Cargo Hatch\", \"FullyRepaired\": true, \"Health\": 1 }","title":"AfmuRepairs"},{"location":"misc-events/#approachsettlement","text":"When written: when approaching a planetary settlement Parameters: Name MarketID Latitude Longitude SystemAddress BodyID BodyName","title":"ApproachSettlement"},{"location":"misc-events/#changecrewrole","text":"When written: when in a crew on someone else's ship, player switched crew role Parameters: Role: name of selected role (Idle, FireCon, FighterCon) Telepresence: (bool) (only from Odyssey build)","title":"ChangeCrewRole"},{"location":"misc-events/#cockpitbreached","text":"When written: when cockpit canopy is breached Parameters: none Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"CockpitBreached\" }","title":"CockpitBreached"},{"location":"misc-events/#commitcrime","text":"When written: when a crime is recorded against the player Parameters: CrimeType \u2013 see \u00a715.6 Faction Optional parameters (depending on crime) Victim Fine Bounty Examples: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"CommitCrime\", \"CrimeType\": \"assault\", \"Faction\": \"The Pilots Federation\", \"Victim\": \"Potapinski\", \"Bounty\": 210 } { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"CommitCrime\", \"CrimeType\": \"fireInNoFireZone\", \"Faction\": \"Jarildekald Public Industry\", \"Fine\": 100 }","title":"CommitCrime"},{"location":"misc-events/#continued","text":"When written: if the journal file grows to 500k lines, we write this event, close the file, and start a new one Parameters: Part: next part number","title":"Continued"},{"location":"misc-events/#crewlaunchfighter","text":"When written: when in multicrew, in Helm player's log, when a crew member launches a fighter Parameters: Crew: name of crew member launching in fighter ID Telepresence: (bool) (only from Odyssey build)","title":"CrewLaunchFighter"},{"location":"misc-events/#crewmemberjoins","text":"When written: When another player joins your ship's crew Parameters: Crew: player's commander name Telepresence: (bool) (only from Odyssey build)","title":"CrewMemberJoins"},{"location":"misc-events/#crewmemberquits","text":"When written: When another player leaves your ship's crew Parameters: Crew: player's commander name Telepresence: (bool) (only from Odyssey build)","title":"CrewMemberQuits"},{"location":"misc-events/#crewmemberrolechange","text":"When written: in Multicrew, Helm's log, when another crew player changes role Parameters: Crew: player name Role: selected role Telepresence: (bool) (only from Odyssey build) Example: { \"timestamp\": \"2017-02-22T14:56:54Z\", \"event\": \"CrewMemberRoleChange\", \"Crew\": \"HRC1\", \"Role\": \"FireCon\" }","title":"CrewMemberRoleChange"},{"location":"misc-events/#crimevictim","text":"When written: when another player commits a crime against the current player Parameters: Offender CrimeType Fine _or _Bounty","title":"CrimeVictim"},{"location":"misc-events/#datalinkscan","text":"When written: when scanning a data link Parameters: Message: message from data link","title":"DatalinkScan"},{"location":"misc-events/#datalinkvoucher","text":"When written: when scanning a datalink generates a reward Parameters: Reward: value in credits VictimFaction PayeeFaction","title":"DatalinkVoucher"},{"location":"misc-events/#datascanned","text":"When written: when scanning some types of data links Parameters: Type Type will typically be one of \"DataLink\", \"DataPoint\", \"ListeningPost\", \"AbandonedDataLog\", \"WreckedShip\", etc","title":"DataScanned"},{"location":"misc-events/#dockfighter","text":"When written: when docking a fighter back with the mothership Parameters: ID Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"DockFighter\" }","title":"DockFighter"},{"location":"misc-events/#docksrv","text":"When written: when docking an SRV with the ship Parameters: ID SRVType","title":"DockSRV"},{"location":"misc-events/#endcrewsession","text":"When written: when the captain in multicrew disbands the crew Parameters: OnCrime: (bool) true if crew disbanded as a result of a crime in a lawful session Telepresence: (bool) (only from Odyssey build)","title":"EndCrewSession"},{"location":"misc-events/#fighterrebuilt","text":"When written: when a ship's fighter is rebuilt in the hangar Parameters: Loadout ID","title":"FighterRebuilt"},{"location":"misc-events/#fuelscoop","text":"When written: when scooping fuel from a star Parameters: Scooped: tons fuel scooped Total: total fuel level after scooping Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"FuelScoop\", \"Scooped\": 0.4987, \"Total\": 16 }","title":"FuelScoop"},{"location":"misc-events/#friends","text":"When written: when receiving information about a change in a friend's status Also written at startup for friends who are already online (new in v2.4) Parameters: Status: one of the following: Requested, Declined, Added, Lost, Offline, Online Name: the friend's commander name","title":"Friends"},{"location":"misc-events/#jetconeboost","text":"When written: when enough material has been collected from a solar jet code (at a white dwarf or neutron star) for a jump boost Parameters: BoostValue","title":"JetConeBoost"},{"location":"misc-events/#jetconedamage","text":"When written: when passing through the jet code from a white dwarf or neutron star has caused damage to a ship module Parameters: Module: the name of the module that has taken some damage","title":"JetConeDamage"},{"location":"misc-events/#joinacrew","text":"When written: When you join another player ship's crew Parameters: Captain: Helm player's commander name Telepresence: (bool) (only from Odyssey build)","title":"JoinACrew"},{"location":"misc-events/#kickcrewmember","text":"When written: When you force another player to leave your ship's crew Parameters: Crew: player's commander name OnCrime: (bool) true if player is automatically kicked for committing a crime in a lawful session Telepresence: (bool) (only from Odyssey build)","title":"KickCrewMember"},{"location":"misc-events/#launchdrone","text":"When written: when using any type of drone/limpet Parameters: Type: one of: \"Hatchbreaker\", \"FuelTransfer\", \"Collection\", \"Prospector\", \"Repair\", \"Research\", \"Decontamination\"","title":"LaunchDrone"},{"location":"misc-events/#launchfighter","text":"When written: when launching a fighter Parameters: Loadout ID PlayerControlled: whether player is controlling the fighter from launch { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"LaunchFighter\", \"Loadout\": \"starter\", \"PlayerControlled\": true }","title":"LaunchFighter"},{"location":"misc-events/#launchsrv","text":"When written: deploying the SRV from a ship onto planet surface Parameters: Loadout ID SRVType","title":"LaunchSRV"},{"location":"misc-events/#moduleinfo","text":"When written: when looking at the cockpit RHS modules info panel, if data has changed This also writes a ModulesInfo.json file alongside the journal, listing the modules in the same order as displayed Parameters: None Example of ModulesInfo file: { \"timestamp\":\"2018-01-10T14:35:08Z\", \"event\":\"ModuleInfo\", \"Modules\":[ { \"Slot\":\"MainEngines\", \"Item\":\"int_engine_size3_class5\", \"Power\":3.720000, \"Priority\":0 }, { \"Slot\":\"MediumHardpoint1\", \"Item\":\"hpt_beamlaser_turret_medium\", \"Power\":0.930000, \"Priority\":0 }, { \"Slot\":\"Slot03_Size2\", \"Item\":\"int_shieldgenerator_size2_class1\", \"Power\":0.900000, \"Priority\":2 }, { \"Slot\":\"MediumHardpoint2\", \"Item\":\"hpt_multicannon_gimbal_medium\", \"Power\":0.640000, \"Priority\":0 }, { \"Slot\":\"CargoHatch\", \"Item\":\"modularcargobaydoor\", \"Power\":0.600000, \"Priority\":2 }, { \"Slot\":\"MediumHardpoint3\", \"Item\":\"hpt_pulselaser_gimbal_medium\", \"Power\":0.600000, \"Priority\":0 }, { \"Slot\":\"PowerDistributor\", \"Item\":\"int_powerdistributor_size3_class5\", \"Power\":0.600000, \"Priority\":0 }, { \"Slot\":\"FrameShiftDrive\", \"Item\":\"int_hyperdrive_size3_class5\", \"Power\":0.450000, \"Priority\":0 }, { \"Slot\":\"Slot04_Size2\", \"Item\":\"int_fuelscoop_size2_class5\", \"Power\":0.390000, \"Priority\":0 }, { \"Slot\":\"LifeSupport\", \"Item\":\"int_lifesupport_size1_class1\", \"Power\":0.320000, \"Priority\":2 }, { \"Slot\":\"Slot05_Size2\", \"Item\":\"int_buggybay_size2_class1\", \"Power\":0.250000, \"Priority\":0 }, { \"Slot\":\"Radar\", \"Item\":\"int_sensors_size2_class2\", \"Power\":0.210000, \"Priority\":0 }, { \"Slot\":\"ShipCockpit\", \"Item\":\"empire_courier_cockpit\", \"Power\":0.000000 }, { \"Slot\":\"PowerPlant\", \"Item\":\"int_powerplant_size4_class2\", \"Power\":0.000000 }, { \"Slot\":\"Slot01_Size3\", \"Item\":\"int_cargorack_size2_class1\", \"Power\":0.000000 }, { \"Slot\":\"Slot02_Size3\", \"Item\":\"int_cargorack_size2_class1\", \"Power\":0.000000 }, { \"Slot\":\"Slot06_Size1\", \"Item\":\"int_stellarbodydiscoveryscanner_standard\", \"Power\":0.000000 }, { \"Slot\":\"DataLinkScanner\", \"Item\":\"hpt_shipdatalinkscanner\", \"Power\":0, \"Priority\":0 } ] }","title":"ModuleInfo"},{"location":"misc-events/#music","text":"When written: when the game music 'mood' changes Parameters: MusicTrack: (name) Possible track names are: NoTrack, MainMenu, CQCMenu, SystemMap, GalaxyMap, GalacticPowers CQC, DestinationFromHyperspace, DestinationFromSupercruise, Supercruise, Combat_Unknown Unknown_Encounter, CapitalShip, CombatLargeDogFight, Combat_Dogfight, Combat_SRV Unknown_Settlement, DockingComputer, Starport, Unknown_Exploration, Exploration Note: Other music track names may be used in future","title":"Music"},{"location":"misc-events/#npccrewpaidwage","text":"This is written when crew receive wages Parameters: NpcCrewId NpcCrewName Amount","title":"NpcCrewPaidWage"},{"location":"misc-events/#npccrewrank","text":"This is written when a crew member's combat rank increases Parameters: NpcCrewId NpcCrewName RankCombat","title":"NpcCrewRank"},{"location":"misc-events/#promotion","text":"When written: when the player's rank increases Parameters: one of the following Combat: new rank Trade: new rank Explore: new rank CQC: new rank Federation: Empire: Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"Promotion\", \"Explore\": 2 }","title":"Promotion"},{"location":"misc-events/#prospectedasteroid","text":"When using a prospecting drone Parameters: Materials: (array of Name and Proportion) Content: (a string representing High/Medium/Low) MotherlodeMaterial: name (if it's a motherlode) Remaining: percentage","title":"ProspectedAsteroid"},{"location":"misc-events/#quitacrew","text":"When written: When you leave another player ship's crew Parameters: Captain: Helm player's commander name Telepresence: (bool) (only from Odyssey build)","title":"QuitACrew"},{"location":"misc-events/#rebootrepair","text":"When written: when the 'reboot repair' function is used Parameters: Modules: JSON array of names of modules repaired Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"RebootRepair\", \"Modules\": [ \"MainEngines\", \"TinyHardpoint1\" ] }","title":"RebootRepair"},{"location":"misc-events/#receivetext","text":"When written: when a text message is received from another player or npc Parameters: From Message Channel: (wing/local/voicechat/friend/player/npc/squadron/starsystem)","title":"ReceiveText"},{"location":"misc-events/#repairdrone","text":"When written: when the player's ship has been repaired by a repair drone Parameters: HullRepaired CockpitRepaired CorrosionRepaired Each of these is a number indicating the amount of damage that has been repaired","title":"RepairDrone"},{"location":"misc-events/#reservoirreplenished","text":"When fuel is moved from one fuel tank to another Parameters: FuelMain FuelReservoir","title":"ReservoirReplenished"},{"location":"misc-events/#resurrect","text":"When written: when the player restarts after death Parameters: Option: the option selected on the insurance rebuy screen Cost: the price paid Bankrupt: whether the commander declared bankruptcy","title":"Resurrect"},{"location":"misc-events/#scanned","text":"When written: when the player's ship has been scanned (note the \"Scan Detected\" indication is at the start of the scan, this is written at the end of a successful scan) Parameters: ScanType: Cargo, Crime, Cabin, Data or Unknown Example: { \"timestamp\": \"2017-02-13T12:30:09Z\", \"event\": \"Scanned\", \"ScanType\": \"Cargo\" }","title":"Scanned"},{"location":"misc-events/#selfdestruct","text":"When written: when the 'self destruct' function is used Parameters: none","title":"SelfDestruct"},{"location":"misc-events/#sendtext","text":"When written: when a text message is sent to another player Parameters: To: may be player name, or channel name Message Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"SendText\", \"To\": \"HRC-2\", \"Message\": \"zoom\" }","title":"SendText"},{"location":"misc-events/#shutdown","text":"When written: on a clean shutdown of the game Parameters: none","title":"Shutdown"},{"location":"misc-events/#synthesis","text":"When written: when synthesis is used to repair or rearm Parameters: Name: synthesis blueprint Materials: JSON array with objects listing materials used and quantities Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"Synthesis\", \"Name\": \"Repair Basic\", \"Materials\": [ { \"Name\": \"iron\", \"Count\": 2 }, { \"Name\": \"nickel\", \"Count\": 1 } ] }","title":"Synthesis"},{"location":"misc-events/#systemsshutdown","text":"When written: when the player's ship systems shut down (eg in a Thargoid encounter) Parameters: none","title":"SystemsShutdown"},{"location":"misc-events/#ussdrop","text":"When written: when dropping from Supercruise at a USS Parameters: USSType: description of USS USSThreat: threat level Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"USSDrop\", \"USSType\": \"Disrupted wake echoes\", \"USSThreat\": 0 }","title":"USSDrop"},{"location":"misc-events/#vehicleswitch","text":"When written: when switching control between the main ship and a fighter Parameters: To: ( Mothership/Fighter) Examples: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"VehicleSwitch\", \"To\": \"Fighter\" } { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"VehicleSwitch\", \"To\": \"Mothership\" }","title":"VehicleSwitch"},{"location":"misc-events/#wingadd","text":"When written: another player has joined the wing Parameters: Name Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"WingAdd\", \"Name\": \"HRC-2\" }","title":"WingAdd"},{"location":"misc-events/#winginvite","text":"When written: when the player is invited to a wing Parameters: Name: the commander name of the player inviting to the wing","title":"WingInvite"},{"location":"misc-events/#wingjoin","text":"When written: this player has joined a wing Parameters: Others: JSON array of other player names already in wing Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"WingJoin\", \"Others\": [ \"HRC1\" ] }","title":"WingJoin"},{"location":"misc-events/#wingleave","text":"When written: this player has left a wing Parameters: none Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"WingLeave\" }","title":"WingLeave"},{"location":"misc-events/#cargotransfer","text":"When transferring cargo between ship and fleet carrier, or between ship and SRV Transfers: [ {Type, Count, Direction}, ... ] { \"timestamp\": \"2020-03-12T12:49:54Z\", \"event\": \"CargoTransfer\", \"Transfers\": [ { \"Type\": \"tea\", \"Count\": 1, \"Direction\": \"tocarrier\" }, { \"Type\": \"gold\", \"Count\": 1, \"Direction\": \"toship\" } ] } { \"timestamp\": \"2020-03-12T13:34:22Z\", \"event\": \"CargoTransfer\", \"Transfers\": [ { \"Type\": \"grain\", \"Count\": 2, \"Direction\": \"tosrv\" } ] }","title":"CargoTransfer"},{"location":"misc-events/#supercruisedestinationdrop","text":"When dropping out of supercruise at a targeted destination. Type: The type fo destination being dropped into Threat: threat level MarketID: (Optional)The market id of the destination if dropping at a market { \"timestamp\":\"2020-03-12T12:49:54Z\", \"event\":\"SupercruiseDestinationDrop\", \"Type\":\u201dAzeban City\u201d, \u201cThreat\u201d:0, \u201cMarketID\u201d:128001536 }","title":"SupercruiseDestinationDrop"},{"location":"new-in-oddesey/","text":"New in \"Odyssey\" \u00b6 Backpack \u00b6 Lists the contents of the backpack, in a separate backpack.json file Parameters: Items: [ ] Components: [ ] Consumables: [ ] Data: [ ] Each list has objects containing: Name OwnerID MissionID (if relevant) Count BackpackChange \u00b6 This is written when there is any change to the contents of the suit backpack \u2013 note this can be written at the same time as other events like UseConsumable Parameters: Either Added: [array of items] or Removed: [array of items] Where each item contains: Name OwnerID MissionID (if relevant) Count Type BookDropship \u00b6 This event is logged when signing up to fight at a recruitment desk Essentially the same as Booktaxi BookTaxi \u00b6 This event is logged when booking a taxi transport Parameters: Cost: cost in credits DestinationSystem: starsystem name DestinationLocation: station name Retreat: bool (inticates if requested for exit from combat zone) { \"timestamp\": \"2020-10-05T11:17:50Z\", \"event\": \"BookTaxi\", \"Cost\": 23200, \"DestinationSystem\": \"Opala\", \"DestinationLocation\": \"Onizuka's Hold\" } BuyMicroResources \u00b6 This event is logged when buying microresources Old format (used for example at suppies vendor) Parameters: Name Category Count Price MarketID New format (eg at Fleet Carrier bartender) Parameters: TotalCount Price MarketID MicroResources: array of objects Name Category Count Category can be one of: Encoded Raw Manufactured Item Component Data Consumable { \"timestamp\": \"2020-10-07T14:01:08Z\", \"event\": \"BuyMicroResource\", \"Name\": \"healthpack\", \"Name_Localised\": \"Medkit\", \"Count\": 4, \"Price\": 2000, \"MarketID\": 3228964864 } BuySuit \u00b6 This event is logged when buying a new suit Parameters: Name Price SuitID SuitMods { \"timestamp\": \"2020-10-07T09:10:55Z\", \"event\": \"BuySuit\", \"Name\": \"TacticalSuit_Class1\", \"Name_Localised\": \"Tactician Suit\", \"Price\": 1000 } BuyWeapon \u00b6 This event is logged when purchasing a new hand weapon Parameters: Name Price SuitModuleID Class WeaponMods { \"timestamp\": \"2020-10-07T09:11:49Z\", \"event\": \"BuyWeapon\", \"Name\": \"Wpn_S_Pistol_Kinetic_SAuto\", \"Name_Localised\": \"KA15\", \"Price\": 1000 } CancelDropship \u00b6 This event is logged if the player cancels their journey to a combat zone Otherwise essentially the same as CancelTaxi CancelTaxi \u00b6 This event is logged if the player cancels a booked taxi trip Parameters: Refund: credits { \"timestamp\": \"2020-10-05T11:17:34Z\", \"event\": \"CancelTaxi\", \"Refund\": 27000 } CollectItems \u00b6 When picking up items from the ground Parameters: Name Type OwnerID Count Stolen: bool CreateSuitLoadout \u00b6 This event is logged when the player creates a new suit loadout Parameters: SuitID SuitName SuitMods LoadoutID LoadoutName Modules: [ ] SlotName ModuleName SuitModuleID Class WeaponMods { \"timestamp\": \"2020-10-07T09:23:59Z\", \"event\": \"CreateSuitLoadout\", \"LoadoutID\": 4293000001, \"LoadoutName\": \"exp001\" } DeleteSuitLoadout \u00b6 Parameters: SuitID SuitName LoadoutID LoadoutName Disembark \u00b6 This event is logged when the player steps out of a ship or SRV Parameters: SRV: true if getting out of SRV, false if getting out of a ship Taxi: true when getting out of a taxi transposrt ship Multicrew: true when getting out of another player's vessel ID: player's ship ID (if players own vessel) StarSystem SystemAddress Body BodyID OnStation: bool OnPlanet: bool StationName (if at a station) StationType MarketID { \"timestamp\": \"2020-10-12T09:09:55Z\", \"event\": \"Disembark\", \"SRV\": false, \"Taxi\": false, \"Multicrew\": false, \"ID\": 36 } DropItems \u00b6 Parameters: Name Type OwnerID MissionID (if relevant) Count DropShipDeploy \u00b6 When exiting a shuttle dropship at a conflict zone Parameters: StarSystem SystemAddress Body BodyID OnStation: bool OnPlanet: bool Embark \u00b6 This event is logged when a player (on foot) gets into a ship or SRV Parameters: SRV: true if getting into SRV, false if getting into a ship Taxi: true when boarding a taxi transposrt ship Multicrew: true when boarding another player's vessel ID: player's ship ID (if players own vessel) StarSystem SystemAddress Body BodyID OnStation: bool OnPlanet: bool StationName (if at a station) StationType MarketID { \"timestamp\": \"2020-10-12T09:06:17Z\", \"event\": \"Embark\", \"SRV\": false, \"Taxi\": false, \"Multicrew\": false, \"ID\": 36 } FCMaterials \u00b6 When trading with a Fleet Carrier Bartender for materials, a file is written with the pricelist Similar to the Shipyard and Cargo events, a brief entry is written in the journal: Parameters: MarketID CarrierName CarrierID The full list is included in the file FCMaterials.json Items: array of objects Id Name Price Stock Demand Example of FCMaterials.json: { \"timestamp\":\"2022-03-24 T11 : 37 : 28 Z \", \" event \":\" FCMaterials \", \" MarketID \":3700020480, \" CarrierName \":\" ralph ' s carrier \", \" CarrierID \":\" VHT-51W \", \" Items \" : [ { \"id\" : 128961556 , \"Name\" : \"$californium_name;\" , \"Name_Localised\" : \"Californium\" , \"Price\" : 74000 , \"Stock\" : 0 , \"Demand\" : 1 }, { \"id\" : 128961524 , \"Name\" : \"$aerogel_name;\" , \"Name_Localised\" : \"Aerogel\" , \"Price\" : 500 , \"Stock\" : 26 , \"Demand\" : 0 }, { \"id\" : 128972334 , \"Name\" : \"$meetingminutes_name;\" , \"Name_Localised\" : \"Meeting Minutes\" , \"Price\" : 1000 , \"Stock\" : 0 , \"Demand\" : 1 }, { \"id\" : 128962572 , \"Name\" : \"$rdx_name;\" , \"Name_Localised\" : \"RDX\" , \"Price\" : 387 , \"Stock\" : 0 , \"Demand\" : 9 }, { \"id\" : 128972304 , \"Name\" : \"$culinaryrecipes_name;\" , \"Name_Localised\" : \"Culinary Recipes\" , \"Price\" : 1000 , \"Stock\" : 20 , \"Demand\" : 0 }, { \"id\" : 128961527 , \"Name\" : \"$chemicalcatalyst_name;\" , \"Name_Localised\" : \"Chemical Catalyst\" , \"Price\" : 400 , \"Stock\" : 18 , \"Demand\" : 0 } ] } LoadoutEquipModule \u00b6 This event is logged when a player adds a weapon to a suit loadout Parameters: SuitID SuitName SlotName LoadoutID LoadoutName ModuleName: new weapon or other itsm added to loadout SuitModuleID Class WeaponMods LoadoutRemoveModule \u00b6 This event is logged when a player removes a weapon from a suit loadout Parameters: SuitID SuitName SlotName LoadoutID LoadoutName ModuleName: weapon or other item removed from loadout SuitModuleID Class WeaponMods RenameSuitLoadout \u00b6 Parameters: SuitID SuitName LoadoutID Loadoutname ScanOrganic \u00b6 This event is logged when the player uses the Organic Sampling Tool to scan, log or analyse organic discoveries. The first scan is 'Log', subsequent scans are 'sample' until fully scanned, final scan is 'analyse' Parameters: ScanType: Log, Sample, or Analyse Genus Species Variant SystemAddress Body Example: { \"timestamp\":\"2022-12-07 T14 : 27 : 55 Z \", \" event \":\" ScanOrganic \", \" ScanType \":\" Analyse \", \" Genus \":\" $ Codex_Ent_Tubus_Genus_Name ; \", \"Genus_Localised\":\"Tubus\", \"Species\":\"$Codex_Ent_Tubus_01_Name ; \", \"Species_Localised\":\"Tubus Conifer\", \"Variant\":\"$Codex_Ent_Tubus_01_A_Name ; \", \"Variant_Localised\":\"Tubus Conifer - Indigo\", \"SystemAddress\":316174882163, \"Body\":44 } SellMicroResources \u00b6 This event is logged when a player sells Microresources for cash Parameters: MicroResources: array of objects Name Category Count Price MarketID { \"timestamp\": \"2020-10-07T14:08:28Z\", \"event\": \"SellMicroResources\", \"MicroResources\": [ { \"Name\": \"healthmonitor\", \"Name_Localised\": \"Health Monitor\", \"Count\": 3 } ], \"Price\": 1500, \"MarketID\": 3228964864 } SellOrganicData \u00b6 This event records that a player has sold organic data (see ScanOrganic) Parameters: MarketID BioData: Array Genus Species Variant Value Bonus { \"timestamp\": \"2022-12-07 T14 : 44 : 28 Z \", \" event \": \" SellOrganicData \", \" MarketID \": 128001536, \" BioData \" : [ { \"Genus\" : \"$Codex_Ent_Tubus_Genus_Name;\" , \"Genus_Localised\" : \"Tubus\" , \"Species\" : \"$Codex_Ent_Tubus_01_Name;\" , \"Species_Localised\" : \"Tubus Conifer\" , \"Variant\" : \"$Codex_Ent_Tubus_01_A_Name;\" , \"Variant_Localised\" : \"Tubus Conifer - Indigo\" , \"Value\" : 2415500 , \"Bonus\" : 9662000 } ] } SellSuit \u00b6 This event is logged when a player sells a flight suit Parameters: Name Price SuitID SuitMods { \"timestamp\": \"2020-10-05T14:34:04Z\", \"event\": \"SellSuit\", \"Name\": \"tacticalsuit_class1\", \"Name_Localised\": \"Tactician Suit\", \"Price\": 70000 } SellWeapon \u00b6 This event is logged when a player sells a hand weapon Parameters: Name Price SuitModuleID Class WeaponMods ShipLocker \u00b6 Lists the contents of the ship locker, eg at startup The full contents are written to a separate file, ShipLocker.json The full list is also written into the journal at startup (if in a ship) and when boarding a ship The shiplocker.json file is updated when the locker contents are changed Parameters: Items: [ ] Components: [ ] Consumables: [ ] Data: [ ] Each list has objects containing: Name OwnerID MissionID (if relevant) Count SwitchSuitLoadout \u00b6 This event is logged when a player selects a different flight suit from the ship's locker Parameters: SuitID SuitName SuitMods LoadoutID LoadoutName Modules: array of objects SlotName SuitModuleID ModuleName Class WeaponMods TransferMicroResources \u00b6 Written when transferreing items between backpack and ship locker Parameters: Transfers: array of objects Name Category Count Direction { \"timestamp\": \"2021-04-14T15:07:54Z\", \"event\": \"TransferMicroResources\", \"Transfers\": [ { \"Name\": \"healthpack\", \"Name_Localised\": \"Medkit\", \"Category\": \"Consumable\", \"Count\": 1, \"Direction\": \"ToBackpack\" }, { \"Name\": \"energycell\", \"Name_Localised\": \"Energy Cell\", \"Category\": \"Consumable\", \"Count\": 1, \"Direction\": \"ToBackpack\" } ] } TradeMicroResources \u00b6 This event is logged when the player exchanges owned microresources to receive some other type of microresource Parameters: Offered: array of objects Name Category Count Received: name of resource received Category Count: number received MarketID { \"timestamp\": \"2020-10-07T14:55:09Z\", \"event\": \"TradeMicroResources\", \"Offered\": [ { \"Name\": \"mutageniccatalyst\", \"Name_Localised\": \"Mutagenic Catalyst\", \"Count\": 5 } ], \"Received\": \"californium\", \"Count\": 3, \"MarketID\": 3228964864 } UpgradeSuit \u00b6 This event is logged when the player upgrades their flight suit Parameters: Name SuitID Class Cost Resources { \"timestamp\" : \"2022-08-19T16:41:33Z\" , \"event\" : \"UpgradeSuit\" , \"Name\" : \"utilitysuit_class1\" , \"Name_Localised\" : \"Maverick Suit\" , \"SuitID\" : 1702914472756487 , \"Class\" : 2 , \"Cost\" : 600000 , \"Resources\" : [ { \"Name\" : \"suitschematic\" , \"Name_Localised\" : \"Suit Schematic\" , \"Count\" : 1 }, { \"Name\" : \"healthmonitor\" , \"Name_Localised\" : \"Health Monitor\" , \"Count\" : 1 }, { \"Name\" : \"largecapacitypowerregulator\" , \"Name_Localised\" : \"Power Regulator\" , \"Count\" : 1 }, { \"Name\" : \"manufacturinginstructions\" , \"Name_Localised\" : \"Manufacturing Instructions\" , \"Count\" : 1 }, { \"Name\" : \"carbonfibreplating\" , \"Name_Localised\" : \"Carbon Fibre Plating\" , \"Count\" : 5 }, { \"Name\" : \"graphene\" , \"Count\" : 5 } ] } UpgradeWeapon \u00b6 This event is logged when the player upgrades a hand weapon Parameters: Name SuitModuleID Class Cost Resources { \"timestamp\": \"2022-08-19T16:58:18Z\", \"event\": \"UpgradeWeapon\", \"Name\": \"wpn_m_assaultrifle_laser_fauto\", \"Name_Localised\": \"TK Aphelion\", \"Class\": 2, \"SuitModuleID\": 1681611765701131, \"Cost\": 0, \"Resources\": [ { \"Name\": \"weaponschematic\", \"Name_Localised\": \"Weapon Schematic\", \"Count\": 1 }, { \"Name\": \"ionisedgas\", \"Name_Localised\": \"Ionised Gas\", \"Count\": 1 }, { \"Name\": \"manufacturinginstructions\", \"Name_Localised\": \"Manufacturing Instructions\", \"Count\": 1 }, { \"Name\": \"microelectrode\", \"Count\": 5 }, { \"Name\": \"opticalfibre\", \"Name_Localised\": \"Optical Fibre\", \"Count\": 5 } ] } UseConsumable \u00b6 When using an item from the player's inventory (backpack) Parameters: Name Type","title":"New in Odyssey"},{"location":"new-in-oddesey/#new_in_odyssey","text":"","title":"New in \"Odyssey\""},{"location":"new-in-oddesey/#backpack","text":"Lists the contents of the backpack, in a separate backpack.json file Parameters: Items: [ ] Components: [ ] Consumables: [ ] Data: [ ] Each list has objects containing: Name OwnerID MissionID (if relevant) Count","title":"Backpack"},{"location":"new-in-oddesey/#backpackchange","text":"This is written when there is any change to the contents of the suit backpack \u2013 note this can be written at the same time as other events like UseConsumable Parameters: Either Added: [array of items] or Removed: [array of items] Where each item contains: Name OwnerID MissionID (if relevant) Count Type","title":"BackpackChange"},{"location":"new-in-oddesey/#bookdropship","text":"This event is logged when signing up to fight at a recruitment desk Essentially the same as Booktaxi","title":"BookDropship"},{"location":"new-in-oddesey/#booktaxi","text":"This event is logged when booking a taxi transport Parameters: Cost: cost in credits DestinationSystem: starsystem name DestinationLocation: station name Retreat: bool (inticates if requested for exit from combat zone) { \"timestamp\": \"2020-10-05T11:17:50Z\", \"event\": \"BookTaxi\", \"Cost\": 23200, \"DestinationSystem\": \"Opala\", \"DestinationLocation\": \"Onizuka's Hold\" }","title":"BookTaxi"},{"location":"new-in-oddesey/#buymicroresources","text":"This event is logged when buying microresources Old format (used for example at suppies vendor) Parameters: Name Category Count Price MarketID New format (eg at Fleet Carrier bartender) Parameters: TotalCount Price MarketID MicroResources: array of objects Name Category Count Category can be one of: Encoded Raw Manufactured Item Component Data Consumable { \"timestamp\": \"2020-10-07T14:01:08Z\", \"event\": \"BuyMicroResource\", \"Name\": \"healthpack\", \"Name_Localised\": \"Medkit\", \"Count\": 4, \"Price\": 2000, \"MarketID\": 3228964864 }","title":"BuyMicroResources"},{"location":"new-in-oddesey/#buysuit","text":"This event is logged when buying a new suit Parameters: Name Price SuitID SuitMods { \"timestamp\": \"2020-10-07T09:10:55Z\", \"event\": \"BuySuit\", \"Name\": \"TacticalSuit_Class1\", \"Name_Localised\": \"Tactician Suit\", \"Price\": 1000 }","title":"BuySuit"},{"location":"new-in-oddesey/#buyweapon","text":"This event is logged when purchasing a new hand weapon Parameters: Name Price SuitModuleID Class WeaponMods { \"timestamp\": \"2020-10-07T09:11:49Z\", \"event\": \"BuyWeapon\", \"Name\": \"Wpn_S_Pistol_Kinetic_SAuto\", \"Name_Localised\": \"KA15\", \"Price\": 1000 }","title":"BuyWeapon"},{"location":"new-in-oddesey/#canceldropship","text":"This event is logged if the player cancels their journey to a combat zone Otherwise essentially the same as CancelTaxi","title":"CancelDropship"},{"location":"new-in-oddesey/#canceltaxi","text":"This event is logged if the player cancels a booked taxi trip Parameters: Refund: credits { \"timestamp\": \"2020-10-05T11:17:34Z\", \"event\": \"CancelTaxi\", \"Refund\": 27000 }","title":"CancelTaxi"},{"location":"new-in-oddesey/#collectitems","text":"When picking up items from the ground Parameters: Name Type OwnerID Count Stolen: bool","title":"CollectItems"},{"location":"new-in-oddesey/#createsuitloadout","text":"This event is logged when the player creates a new suit loadout Parameters: SuitID SuitName SuitMods LoadoutID LoadoutName Modules: [ ] SlotName ModuleName SuitModuleID Class WeaponMods { \"timestamp\": \"2020-10-07T09:23:59Z\", \"event\": \"CreateSuitLoadout\", \"LoadoutID\": 4293000001, \"LoadoutName\": \"exp001\" }","title":"CreateSuitLoadout"},{"location":"new-in-oddesey/#deletesuitloadout","text":"Parameters: SuitID SuitName LoadoutID LoadoutName","title":"DeleteSuitLoadout"},{"location":"new-in-oddesey/#disembark","text":"This event is logged when the player steps out of a ship or SRV Parameters: SRV: true if getting out of SRV, false if getting out of a ship Taxi: true when getting out of a taxi transposrt ship Multicrew: true when getting out of another player's vessel ID: player's ship ID (if players own vessel) StarSystem SystemAddress Body BodyID OnStation: bool OnPlanet: bool StationName (if at a station) StationType MarketID { \"timestamp\": \"2020-10-12T09:09:55Z\", \"event\": \"Disembark\", \"SRV\": false, \"Taxi\": false, \"Multicrew\": false, \"ID\": 36 }","title":"Disembark"},{"location":"new-in-oddesey/#dropitems","text":"Parameters: Name Type OwnerID MissionID (if relevant) Count","title":"DropItems"},{"location":"new-in-oddesey/#dropshipdeploy","text":"When exiting a shuttle dropship at a conflict zone Parameters: StarSystem SystemAddress Body BodyID OnStation: bool OnPlanet: bool","title":"DropShipDeploy"},{"location":"new-in-oddesey/#embark","text":"This event is logged when a player (on foot) gets into a ship or SRV Parameters: SRV: true if getting into SRV, false if getting into a ship Taxi: true when boarding a taxi transposrt ship Multicrew: true when boarding another player's vessel ID: player's ship ID (if players own vessel) StarSystem SystemAddress Body BodyID OnStation: bool OnPlanet: bool StationName (if at a station) StationType MarketID { \"timestamp\": \"2020-10-12T09:06:17Z\", \"event\": \"Embark\", \"SRV\": false, \"Taxi\": false, \"Multicrew\": false, \"ID\": 36 }","title":"Embark"},{"location":"new-in-oddesey/#fcmaterials","text":"When trading with a Fleet Carrier Bartender for materials, a file is written with the pricelist Similar to the Shipyard and Cargo events, a brief entry is written in the journal: Parameters: MarketID CarrierName CarrierID The full list is included in the file FCMaterials.json Items: array of objects Id Name Price Stock Demand Example of FCMaterials.json: { \"timestamp\":\"2022-03-24 T11 : 37 : 28 Z \", \" event \":\" FCMaterials \", \" MarketID \":3700020480, \" CarrierName \":\" ralph ' s carrier \", \" CarrierID \":\" VHT-51W \", \" Items \" : [ { \"id\" : 128961556 , \"Name\" : \"$californium_name;\" , \"Name_Localised\" : \"Californium\" , \"Price\" : 74000 , \"Stock\" : 0 , \"Demand\" : 1 }, { \"id\" : 128961524 , \"Name\" : \"$aerogel_name;\" , \"Name_Localised\" : \"Aerogel\" , \"Price\" : 500 , \"Stock\" : 26 , \"Demand\" : 0 }, { \"id\" : 128972334 , \"Name\" : \"$meetingminutes_name;\" , \"Name_Localised\" : \"Meeting Minutes\" , \"Price\" : 1000 , \"Stock\" : 0 , \"Demand\" : 1 }, { \"id\" : 128962572 , \"Name\" : \"$rdx_name;\" , \"Name_Localised\" : \"RDX\" , \"Price\" : 387 , \"Stock\" : 0 , \"Demand\" : 9 }, { \"id\" : 128972304 , \"Name\" : \"$culinaryrecipes_name;\" , \"Name_Localised\" : \"Culinary Recipes\" , \"Price\" : 1000 , \"Stock\" : 20 , \"Demand\" : 0 }, { \"id\" : 128961527 , \"Name\" : \"$chemicalcatalyst_name;\" , \"Name_Localised\" : \"Chemical Catalyst\" , \"Price\" : 400 , \"Stock\" : 18 , \"Demand\" : 0 } ] }","title":"FCMaterials"},{"location":"new-in-oddesey/#loadoutequipmodule","text":"This event is logged when a player adds a weapon to a suit loadout Parameters: SuitID SuitName SlotName LoadoutID LoadoutName ModuleName: new weapon or other itsm added to loadout SuitModuleID Class WeaponMods","title":"LoadoutEquipModule"},{"location":"new-in-oddesey/#loadoutremovemodule","text":"This event is logged when a player removes a weapon from a suit loadout Parameters: SuitID SuitName SlotName LoadoutID LoadoutName ModuleName: weapon or other item removed from loadout SuitModuleID Class WeaponMods","title":"LoadoutRemoveModule"},{"location":"new-in-oddesey/#renamesuitloadout","text":"Parameters: SuitID SuitName LoadoutID Loadoutname","title":"RenameSuitLoadout"},{"location":"new-in-oddesey/#scanorganic","text":"This event is logged when the player uses the Organic Sampling Tool to scan, log or analyse organic discoveries. The first scan is 'Log', subsequent scans are 'sample' until fully scanned, final scan is 'analyse' Parameters: ScanType: Log, Sample, or Analyse Genus Species Variant SystemAddress Body Example: { \"timestamp\":\"2022-12-07 T14 : 27 : 55 Z \", \" event \":\" ScanOrganic \", \" ScanType \":\" Analyse \", \" Genus \":\" $ Codex_Ent_Tubus_Genus_Name ; \", \"Genus_Localised\":\"Tubus\", \"Species\":\"$Codex_Ent_Tubus_01_Name ; \", \"Species_Localised\":\"Tubus Conifer\", \"Variant\":\"$Codex_Ent_Tubus_01_A_Name ; \", \"Variant_Localised\":\"Tubus Conifer - Indigo\", \"SystemAddress\":316174882163, \"Body\":44 }","title":"ScanOrganic"},{"location":"new-in-oddesey/#sellmicroresources","text":"This event is logged when a player sells Microresources for cash Parameters: MicroResources: array of objects Name Category Count Price MarketID { \"timestamp\": \"2020-10-07T14:08:28Z\", \"event\": \"SellMicroResources\", \"MicroResources\": [ { \"Name\": \"healthmonitor\", \"Name_Localised\": \"Health Monitor\", \"Count\": 3 } ], \"Price\": 1500, \"MarketID\": 3228964864 }","title":"SellMicroResources"},{"location":"new-in-oddesey/#sellorganicdata","text":"This event records that a player has sold organic data (see ScanOrganic) Parameters: MarketID BioData: Array Genus Species Variant Value Bonus { \"timestamp\": \"2022-12-07 T14 : 44 : 28 Z \", \" event \": \" SellOrganicData \", \" MarketID \": 128001536, \" BioData \" : [ { \"Genus\" : \"$Codex_Ent_Tubus_Genus_Name;\" , \"Genus_Localised\" : \"Tubus\" , \"Species\" : \"$Codex_Ent_Tubus_01_Name;\" , \"Species_Localised\" : \"Tubus Conifer\" , \"Variant\" : \"$Codex_Ent_Tubus_01_A_Name;\" , \"Variant_Localised\" : \"Tubus Conifer - Indigo\" , \"Value\" : 2415500 , \"Bonus\" : 9662000 } ] }","title":"SellOrganicData"},{"location":"new-in-oddesey/#sellsuit","text":"This event is logged when a player sells a flight suit Parameters: Name Price SuitID SuitMods { \"timestamp\": \"2020-10-05T14:34:04Z\", \"event\": \"SellSuit\", \"Name\": \"tacticalsuit_class1\", \"Name_Localised\": \"Tactician Suit\", \"Price\": 70000 }","title":"SellSuit"},{"location":"new-in-oddesey/#sellweapon","text":"This event is logged when a player sells a hand weapon Parameters: Name Price SuitModuleID Class WeaponMods","title":"SellWeapon"},{"location":"new-in-oddesey/#shiplocker","text":"Lists the contents of the ship locker, eg at startup The full contents are written to a separate file, ShipLocker.json The full list is also written into the journal at startup (if in a ship) and when boarding a ship The shiplocker.json file is updated when the locker contents are changed Parameters: Items: [ ] Components: [ ] Consumables: [ ] Data: [ ] Each list has objects containing: Name OwnerID MissionID (if relevant) Count","title":"ShipLocker"},{"location":"new-in-oddesey/#switchsuitloadout","text":"This event is logged when a player selects a different flight suit from the ship's locker Parameters: SuitID SuitName SuitMods LoadoutID LoadoutName Modules: array of objects SlotName SuitModuleID ModuleName Class WeaponMods","title":"SwitchSuitLoadout"},{"location":"new-in-oddesey/#transfermicroresources","text":"Written when transferreing items between backpack and ship locker Parameters: Transfers: array of objects Name Category Count Direction { \"timestamp\": \"2021-04-14T15:07:54Z\", \"event\": \"TransferMicroResources\", \"Transfers\": [ { \"Name\": \"healthpack\", \"Name_Localised\": \"Medkit\", \"Category\": \"Consumable\", \"Count\": 1, \"Direction\": \"ToBackpack\" }, { \"Name\": \"energycell\", \"Name_Localised\": \"Energy Cell\", \"Category\": \"Consumable\", \"Count\": 1, \"Direction\": \"ToBackpack\" } ] }","title":"TransferMicroResources"},{"location":"new-in-oddesey/#trademicroresources","text":"This event is logged when the player exchanges owned microresources to receive some other type of microresource Parameters: Offered: array of objects Name Category Count Received: name of resource received Category Count: number received MarketID { \"timestamp\": \"2020-10-07T14:55:09Z\", \"event\": \"TradeMicroResources\", \"Offered\": [ { \"Name\": \"mutageniccatalyst\", \"Name_Localised\": \"Mutagenic Catalyst\", \"Count\": 5 } ], \"Received\": \"californium\", \"Count\": 3, \"MarketID\": 3228964864 }","title":"TradeMicroResources"},{"location":"new-in-oddesey/#upgradesuit","text":"This event is logged when the player upgrades their flight suit Parameters: Name SuitID Class Cost Resources { \"timestamp\" : \"2022-08-19T16:41:33Z\" , \"event\" : \"UpgradeSuit\" , \"Name\" : \"utilitysuit_class1\" , \"Name_Localised\" : \"Maverick Suit\" , \"SuitID\" : 1702914472756487 , \"Class\" : 2 , \"Cost\" : 600000 , \"Resources\" : [ { \"Name\" : \"suitschematic\" , \"Name_Localised\" : \"Suit Schematic\" , \"Count\" : 1 }, { \"Name\" : \"healthmonitor\" , \"Name_Localised\" : \"Health Monitor\" , \"Count\" : 1 }, { \"Name\" : \"largecapacitypowerregulator\" , \"Name_Localised\" : \"Power Regulator\" , \"Count\" : 1 }, { \"Name\" : \"manufacturinginstructions\" , \"Name_Localised\" : \"Manufacturing Instructions\" , \"Count\" : 1 }, { \"Name\" : \"carbonfibreplating\" , \"Name_Localised\" : \"Carbon Fibre Plating\" , \"Count\" : 5 }, { \"Name\" : \"graphene\" , \"Count\" : 5 } ] }","title":"UpgradeSuit"},{"location":"new-in-oddesey/#upgradeweapon","text":"This event is logged when the player upgrades a hand weapon Parameters: Name SuitModuleID Class Cost Resources { \"timestamp\": \"2022-08-19T16:58:18Z\", \"event\": \"UpgradeWeapon\", \"Name\": \"wpn_m_assaultrifle_laser_fauto\", \"Name_Localised\": \"TK Aphelion\", \"Class\": 2, \"SuitModuleID\": 1681611765701131, \"Cost\": 0, \"Resources\": [ { \"Name\": \"weaponschematic\", \"Name_Localised\": \"Weapon Schematic\", \"Count\": 1 }, { \"Name\": \"ionisedgas\", \"Name_Localised\": \"Ionised Gas\", \"Count\": 1 }, { \"Name\": \"manufacturinginstructions\", \"Name_Localised\": \"Manufacturing Instructions\", \"Count\": 1 }, { \"Name\": \"microelectrode\", \"Count\": 5 }, { \"Name\": \"opticalfibre\", \"Name_Localised\": \"Optical Fibre\", \"Count\": 5 } ] }","title":"UpgradeWeapon"},{"location":"new-in-oddesey/#useconsumable","text":"When using an item from the player's inventory (backpack) Parameters: Name Type","title":"UseConsumable"},{"location":"powerplay/","text":"Powerplay \u00b6 PowerplayCollect \u00b6 When written: when collecting powerplay commodities for delivery Parameters: Power: name of power Type: type of commodity Count: number of units Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"PowerplayCollect\", \"Power\": \"Li Yong-Rui\", \"Type\": \"siriusfranchisepackage\", \"Count\": 10 } PowerplayDefect \u00b6 When written: when a player defects from one power to another Parameters: FromPower ToPower Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"PowerplayDefect\", \"FromPower\": \"Zachary Hudson\", \"ToPower\": \"Li Yong-Rui\" } PowerplayDeliver \u00b6 When written: when delivering powerplay commodities Parameters: Power Type Count Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"PowerplayDeliver\", \"Power\": \"Li Yong-Rui\", \"Type\": \"siriusfranchisepackage\", \"Count\": 10 } PowerplayFastTrack \u00b6 When written: when paying to fast-track allocation of commodities Parameters: Power Cost PowerplayJoin \u00b6 When written: when joining up with a power Parameters: Power Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"PowerplayJoin\", \"Power\": \"Zachary Hudson\" } PowerplayLeave \u00b6 When written: when leaving a power Parameters: Power Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"PowerplayLeave\", \"Power\": \"Li Yong-Rui\" } PowerplaySalary \u00b6 When written: when receiving salary payment from a power Parameters: Power Amount PowerplayVote \u00b6 When written: when voting for a system expansion Parameters: Power Votes System PowerplayVoucher \u00b6 When written: when receiving payment for powerplay combat Parameters: Power Systems:[name,name]","title":"Powerplay"},{"location":"powerplay/#powerplay","text":"","title":"Powerplay"},{"location":"powerplay/#powerplaycollect","text":"When written: when collecting powerplay commodities for delivery Parameters: Power: name of power Type: type of commodity Count: number of units Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"PowerplayCollect\", \"Power\": \"Li Yong-Rui\", \"Type\": \"siriusfranchisepackage\", \"Count\": 10 }","title":"PowerplayCollect"},{"location":"powerplay/#powerplaydefect","text":"When written: when a player defects from one power to another Parameters: FromPower ToPower Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"PowerplayDefect\", \"FromPower\": \"Zachary Hudson\", \"ToPower\": \"Li Yong-Rui\" }","title":"PowerplayDefect"},{"location":"powerplay/#powerplaydeliver","text":"When written: when delivering powerplay commodities Parameters: Power Type Count Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"PowerplayDeliver\", \"Power\": \"Li Yong-Rui\", \"Type\": \"siriusfranchisepackage\", \"Count\": 10 }","title":"PowerplayDeliver"},{"location":"powerplay/#powerplayfasttrack","text":"When written: when paying to fast-track allocation of commodities Parameters: Power Cost","title":"PowerplayFastTrack"},{"location":"powerplay/#powerplayjoin","text":"When written: when joining up with a power Parameters: Power Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"PowerplayJoin\", \"Power\": \"Zachary Hudson\" }","title":"PowerplayJoin"},{"location":"powerplay/#powerplayleave","text":"When written: when leaving a power Parameters: Power Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"PowerplayLeave\", \"Power\": \"Li Yong-Rui\" }","title":"PowerplayLeave"},{"location":"powerplay/#powerplaysalary","text":"When written: when receiving salary payment from a power Parameters: Power Amount","title":"PowerplaySalary"},{"location":"powerplay/#powerplayvote","text":"When written: when voting for a system expansion Parameters: Power Votes System","title":"PowerplayVote"},{"location":"powerplay/#powerplayvoucher","text":"When written: when receiving payment for powerplay combat Parameters: Power Systems:[name,name]","title":"PowerplayVoucher"},{"location":"squadrons/","text":"Squadrons \u00b6 AppliedToSquadron \u00b6 { \"timestamp\": \"2018-10-17T16:17:55Z\", \"event\": \"AppliedToSquadron\", \"SquadronName\": \"TestSquadron\" } DisbandedSquadron \u00b6 { \"timestamp\": \"2018-10-17T16:17:55Z\", \"event\": \"DisbandedSquadron\", \"SquadronName\": \"TestSquadron\" } InvitedToSquadron \u00b6 { \"timestamp\": \"2018-10-17T16:17:55Z\", \"event\": \"InvitedToSquadron\", \"SquadronName\": \"TestSquadron\" } JoinedSquadron \u00b6 { \"timestamp\": \"2018-10-17T16:17:55Z\", \"event\": \"JoinedSquadron\", \"SquadronName\": \"TestSquadron\" } KickedFromSquadron \u00b6 { \"timestamp\": \"2018-10-17T16:17:55Z\", \"event\": \"KickedFromSquadron\", \"SquadronName\": \"TestSquadron\" } LeftSquadron \u00b6 { \"timestamp\": \"2018-10-17T16:17:55Z\", \"event\": \"LeftSquadron\", \"SquadronName\": \"TestSquadron\" } SharedBookmarkToSquadron \u00b6 { \"timestamp\": \"2018-10-17T16:17:55Z\", \"event\": \"SharedBookmarkToSquadron\", \"SquadronName\": \"TestSquadron\" } SquadronCreated \u00b6 { \"timestamp\": \"2018-10-17T16:17:55Z\", \"event\": \"SquadronCreated\", \"SquadronName\": \"TestSquadron\" } SquadronDemotion \u00b6 { \"timestamp\": \"2018-10-17T16:17:55Z\", \"event\": \"SquadronDemotion\", \"SquadronName\": \"TestSquadron\", \"OldRank\": 3, \"NewRank\": 2 } SquadronPromotion \u00b6 { \"timestamp\": \"2018-10-17T16:17:55Z\", \"event\": \"SquadronPromotion\", \"SquadronName\": \"TestSquadron\", \"OldRank\": 2, \"NewRank\": 3 } SquadronStartup \u00b6 Written at game startup, to identify the player's squadron Parameters: SquadronName CurrentRank WonATrophyForSquadron \u00b6 { \"timestamp\": \"2018-10-17T16:17:55Z\", \"event\": \"WonATrophyForSquadron\", \"SquadronName\": \"TestSquadron\" }","title":"Squadrons"},{"location":"squadrons/#squadrons","text":"","title":"Squadrons"},{"location":"squadrons/#appliedtosquadron","text":"{ \"timestamp\": \"2018-10-17T16:17:55Z\", \"event\": \"AppliedToSquadron\", \"SquadronName\": \"TestSquadron\" }","title":"AppliedToSquadron"},{"location":"squadrons/#disbandedsquadron","text":"{ \"timestamp\": \"2018-10-17T16:17:55Z\", \"event\": \"DisbandedSquadron\", \"SquadronName\": \"TestSquadron\" }","title":"DisbandedSquadron"},{"location":"squadrons/#invitedtosquadron","text":"{ \"timestamp\": \"2018-10-17T16:17:55Z\", \"event\": \"InvitedToSquadron\", \"SquadronName\": \"TestSquadron\" }","title":"InvitedToSquadron"},{"location":"squadrons/#joinedsquadron","text":"{ \"timestamp\": \"2018-10-17T16:17:55Z\", \"event\": \"JoinedSquadron\", \"SquadronName\": \"TestSquadron\" }","title":"JoinedSquadron"},{"location":"squadrons/#kickedfromsquadron","text":"{ \"timestamp\": \"2018-10-17T16:17:55Z\", \"event\": \"KickedFromSquadron\", \"SquadronName\": \"TestSquadron\" }","title":"KickedFromSquadron"},{"location":"squadrons/#leftsquadron","text":"{ \"timestamp\": \"2018-10-17T16:17:55Z\", \"event\": \"LeftSquadron\", \"SquadronName\": \"TestSquadron\" }","title":"LeftSquadron"},{"location":"squadrons/#sharedbookmarktosquadron","text":"{ \"timestamp\": \"2018-10-17T16:17:55Z\", \"event\": \"SharedBookmarkToSquadron\", \"SquadronName\": \"TestSquadron\" }","title":"SharedBookmarkToSquadron"},{"location":"squadrons/#squadroncreated","text":"{ \"timestamp\": \"2018-10-17T16:17:55Z\", \"event\": \"SquadronCreated\", \"SquadronName\": \"TestSquadron\" }","title":"SquadronCreated"},{"location":"squadrons/#squadrondemotion","text":"{ \"timestamp\": \"2018-10-17T16:17:55Z\", \"event\": \"SquadronDemotion\", \"SquadronName\": \"TestSquadron\", \"OldRank\": 3, \"NewRank\": 2 }","title":"SquadronDemotion"},{"location":"squadrons/#squadronpromotion","text":"{ \"timestamp\": \"2018-10-17T16:17:55Z\", \"event\": \"SquadronPromotion\", \"SquadronName\": \"TestSquadron\", \"OldRank\": 2, \"NewRank\": 3 }","title":"SquadronPromotion"},{"location":"squadrons/#squadronstartup","text":"Written at game startup, to identify the player's squadron Parameters: SquadronName CurrentRank","title":"SquadronStartup"},{"location":"squadrons/#wonatrophyforsquadron","text":"{ \"timestamp\": \"2018-10-17T16:17:55Z\", \"event\": \"WonATrophyForSquadron\", \"SquadronName\": \"TestSquadron\" }","title":"WonATrophyForSquadron"},{"location":"startup/","text":"Startup \u00b6 Cargo \u00b6 When written: at startup, note this is now written slightly later in startup, after we have initialised missions, so we can detect if any cargo came from an abandoned delivery mission The first \"Cargo\" event in the file will contain the full inventory, others just indicate a separate file has been written The full data is now written to a separate file Cargo.json A simple event (with no parameters) is written to the main journal file when the cargo file is updated Parameters: Vessel: \"Ship\" or \"SRV\" Inventory: array of cargo, Name Count Stolen MissionID (if relevant) Example: { \"timestamp\": \"2018-06-26T08:21:17Z\", \"event\": \"Cargo\", \"Vessel\": \"Ship\", \"Inventory\": [ { \"Name\": \"gold\", \"Count\": 2, \"Stolen\": 0 }, { \"Name\": \"gold\", \"MissionID\": 65397935, \"Count\": 14, \"Stolen\": 0 }, { \"Name\": \"iondistributor\", \"Name_Localised\": \"Ion Distributor\", \"Count\": 2, \"Stolen\": 0 } ] } ClearSavedGame \u00b6 When written: If you should ever reset your game Parameters: Name: commander name FID: player id Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"ClearSavedGame\", \"Name\": \"HRC1\", \"FID\": \"F44396\" } Commander \u00b6 When written: at the start of the LoadGame process This is written before the inventory, loadout, etc Parameters: Name: commander name FID: player id Loadout \u00b6 When written: at startup, when loading from main menu, or when switching ships, or after changing the ship in Outfitting, or when docking SRV back in mothership Parameters: Ship: current ship type ShipID: ship id number (indicates which of your ships you are in) ShipName: user-defined ship name ShipIdent: user-defined ship ID string HullValue \u2013 may not always be present ModulesValue \u2013 may not always be present HullHealth UnladenMass \u2013 Mass of Hull and Modules, excludes fuel and cargo FuelCapacity: { Main: , Reserve: } CargoCapacity MaxJumpRange: (based on zero cargo, and just enough fuel for 1 jump) Rebuy Hot: (if wanted at startup \u2013 may not always be present) Modules: array of installed items, each with: Slot: slot name Item: module name - lowercase On: bool, indicates on or off Priority: power priority Health Value AmmoInClip: (if relevant) AmmoInHopper: (if relevant) Engineering: (if engineered) EngineerID Engineer: name BlueprintID BlueprintName: blueprint name Level Quality ExperimentalEffect: (name, if applied) Modifications: Json array of objects Label \u2013 (see \u00a715.11 below) Value \u2013 may not always be present OriginalValue LessIsGood: bool (For a passenger cabin, AmmoInClip holds the number of places in the cabin) Materials \u00b6 When written: at startup, when loading from main menu into game Parameters: Raw: array of raw materials (each with name and count) Manufactured: array of manufactured items Encoded: array of scanned data Example: { \"timestamp\": \"2017-02-10T14:25:51Z\", \"event\": \"Materials\", \"Raw\": [ { \"Name\": \"chromium\", \"Count\": 28 }, { \"Name\": \"zinc\", \"Count\": 18 }, { \"Name\": \"iron\", \"Count\": 23 }, { \"Name\": \"sulphur\", \"Count\": 19 } ], \"Manufactured\": [ { \"Name\": \"refinedfocuscrystals\", \"Count\": 10 }, { \"Name\": \"highdensitycomposites\", \"Count\": 3 }, { \"Name\": \"mechanicalcomponents\", \"Count\": 3 } ], \"Encoded\": [ { \"Name\": \"emissiondata\", \"Count\": 32 }, { \"Name\": \"shielddensityreports\", \"Count\": 23 } ] } Missions \u00b6 When written: at startup Parameters: Active: (array of objects) Failed: (array of objects) Complete: (array of objects) Each object contains: MissionID Name PassengerMission: bool Expires: time left in seconds { \"timestamp\": \"2017-10-02T10:37:58Z\", \"event\": \"Missions\", \"Active\": [ { \"MissionID\": 65380900, \"Name\": \"Mission_Courier_name\", \"PassengerMission\": false, \"Expires\": 82751 } ], \"Failed\": [], \"Complete\": [] } NewCommander \u00b6 When written: Creating a new commander Parameters: Name: (new) commander name FID: player id Package: selected starter package Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"NewCommander\", \"Name\": \"HRC1\", \"FID\": \"F44396\", \"Package\": \"ImperialBountyHunter\" } LoadGame \u00b6 When written: at startup, when loading from main menu into game Parameters: Commander: commander name FID: player id Horizons: bool Odyssey: bool Ship: current ship type ShipID: ship id number (indicates which of your ships you are in) StartLanded: true (only present if landed) StartDead:true (only present if starting dead: see \"Resurrect\") GameMode: Open, Solo or Group Group: name of group (if in a group) Credits: current credit balance Loan: current loan ShipName: user-defined ship name ShipIdent: user-defined ship ID string FuelLevel: current fuel FuelCapacity: size of main tank language gameversion build Example: { \"timestamp\": \"2017-02-10T14:25:51Z\", \"event\": \"LoadGame\", \"Commander\": \"HRC-2\", \"FID\": \"F44396\", \"Horizons\": true, \"Ship\": \"FerDeLance\", \"ShipID\": 19, \"ShipName\": \"jewel of parhoon\", \"ShipIdent\": \"hr-17f\", \"FuelLevel\": 3.964024, \"FuelCapacity\": 8, \"GameMode\": \"Open\", \"Credits\": 2890718739, \"Loan\": 0 } Passengers \u00b6 When written: at startup, when loading the saved game file Parameters: Manifest: array of passenger records, each containing: MissionID Type VIP (bool) Wanted (bool) Count Powerplay \u00b6 When written: at startup, if player has pledged to a power Parameters: Power: name Rank Merits Votes TimePledged (time in seconds) Example: { \"timestamp\": \"2018-01-31T10:53:04Z\", \"event\": \"Powerplay\", \"Power\": \"Edmund Mahon\", \"Rank\": 0, \"Merits\": 10, \"Votes\": 0, \"TimePledged\": 433024 } Progress \u00b6 When written: at startup Parameters: Combat: percent progress to next rank Trade: \" Explore: \" Empire: \" Federation: \" CQC: \" Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"Progress\", \"Combat\": 77, \"Trade\": 9, \"Explore\": 93, \"Empire\": 0, \"Federation\": 0, \"CQC\": 0 } Rank \u00b6 When written: at startup Parameters: Combat: rank on scale 0-8 Trade: rank on scale 0-8 Explore: rank on scale 0-8 Empire: military rank Federation: military rank CQC: rank on scale 0-8 Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"Rank\", \"Combat\": 2, \"Trade\": 2, \"Explore\": 5, \"Empire\": 1, \"Federation\": 3, \"CQC\": 0 } Reputation \u00b6 When written: at startup (after Rank and Progress) This gives the player's reputation (on a scale of -100..+100) with the superpowers Parameters: Empire Federation Independent Alliance Note thresholds: -100.. -90: hostile -90.. -35: unfriendly -35..+ 4: neutral +4..+35: cordial +35..+90: friendly +90..+100: allied Statistics \u00b6 When written: at startup This line contains the information displayed in the statistics panel on the right side of the cockpit Parameters: Bank_Account Current_Wealth Spent_On_Ships Spent_On_Outfitting Spent_On_Repairs Spent_On_Fuel Spent_On_Ammo_Consumables Insurance_Claims Spent_On_Insurance Combat Bounties_Claimed Bounty_Hunting_Profit Combat_Bonds Combat_Bond_Profits Assassinations Assassination_Profits Highest_Single_Reward Skimmers_Killed Crime Fines Total_Fines Bounties_Received Total_Bounties Highest_Bounty Smuggling Black_Markets_Traded_With Black_Markets_Profits Resources_Smuggled Average_Profit Highest_Single_Transaction Trading Markets_Traded_With Market_Profits Resources_Traded Average_Profit Highest_Single_Transaction Mining Mining_Profits Quantity_Mined Materials_Collected Exploration Systems_Visited Fuel_Scooped Fuel_Purchased Exploration_Profits Planets_Scanned_To_Level_2 Planets_Scanned_To_Level_3 Highest_Payout Total_Hyperspace_Distance Total_Hyperspace_Jumps Greatest_Distance_From_Start Time_Played Passengers Passengers_Missions_Bulk Passengers_Missions_VIP Passengers_Missions_Delivered Passengers_Missions_Ejected Search_And_Rescue SearchRescue_Traded SearchRescue_Profit SearchRescue_Count Crafting Spent_On_Crafting Count_Of_Used_Engineers Recipes_Generated Recipes_Generated_Rank_1 Recipes_Generated_Rank_2 Recipes_Generated_Rank_3 Recipes_Generated_Rank_4 Recipes_Generated_Rank_5 Recipes_Applied Recipes_Applied_Rank_1 Recipes_Applied_Rank_2 Recipes_Applied_Rank_3 Recipes_Applied_Rank_4 Recipes_Applied_Rank_5 Recipes_Applied_On_Previously_Modified_Modules Crew NpcCrew_TotalWages NpcCrew_Hired NpcCrew_Fired NpcCrew_Died Multicrew Multicrew_Time_Total Multicrew_Gunner_Time_Total Multicrew_Fighter_Time_Total Multicrew_Credits_Total Multicrew_Fines_Total Note times are in seconds Example: { \"timestamp\": \"2017-09-25T15:18:31Z\", \"event\": \"Statistics\", \"Bank_Account\": { \"Current_Wealth\": 148827050, \"Spent_On_Ships\": 14499177, \"Spent_On_Outfitting\": 30785093, \"Spent_On_Repairs\": 17716, \"Spent_On_Fuel\": 1647, \"Spent_On_Ammo_Consumables\": 0, \"Insurance_Claims\": 4, \"Spent_On_Insurance\": 1397620 }, \"Combat\": { \"Bounties_Claimed\": 0, \"Bounty_Hunting_Profit\": 0, \"Combat_Bonds\": 0, \"Combat_Bond_Profits\": 0, \"Assassinations\": 0, \"Assassination_Profits\": 0, \"Highest_Single_Reward\": 0, \"Skimmers_Killed\": 0 }, \"Crime\": { \"Fines\": 0, \"Total_Fines\": 0, \"Bounties_Received\": 0, \"Total_Bounties\": 0, \"Highest_Bounty\": 0 }, \"Smuggling\": { \"Black_Markets_Traded_With\": 0, \"Black_Markets_Profits\": 0, \"Resources_Smuggled\": 0, \"Average_Profit\": 0, \"Highest_Single_Transaction\": 0 }, \"Trading\": { \"Markets_Traded_With\": 3, \"Market_Profits\": 40700, \"Resources_Traded\": 23, \"Average_Profit\": 4070, \"Highest_Single_Transaction\": 17961 }, \"Mining\": { \"Mining_Profits\": 0, \"Quantity_Mined\": 0, \"Materials_Collected\": 100 }, \"Exploration\": { \"Systems_Visited\": 228, \"Fuel_Scooped\": 111, \"Fuel_Purchased\": 0, \"Exploration_Profits\": 304469, \"Planets_Scanned_To_Level_2\": 39, \"Planets_Scanned_To_Level_3\": 15, \"Highest_Payout\": 52503, \"Total_Hyperspace_Distance\": 844927, \"Total_Hyperspace_Jumps\": 295, \"Greatest_Distance_From_Start\": 65222.47204614, \"Time_Played\": 651060 }, \"Passengers\": { \"Passengers_Missions_Bulk\": 0, \"Passengers_Missions_VIP\": 0, \"Passengers_Missions_Delivered\": 0, \"Passengers_Missions_Ejected\": 0 }, \"Search_And_Rescue\": { \"SearchRescue_Traded\": 12, \"SearchRescue_Profit\": 19467, \"SearchRescue_Count\": 8 }, \"Crafting\": { \"Spent_On_Crafting\": 0, \"Count_Of_Used_Engineers\": 2, \"Recipes_Generated\": 28, \"Recipes_Generated_Rank_1\": 9, \"Recipes_Generated_Rank_2\": 6, \"Recipes_Generated_Rank_3\": 9, \"Recipes_Generated_Rank_4\": 4, \"Recipes_Generated_Rank_5\": 0, \"Recipes_Applied\": 21, \"Recipes_Applied_Rank_1\": 8, \"Recipes_Applied_Rank_2\": 5, \"Recipes_Applied_Rank_3\": 7, \"Recipes_Applied_Rank_4\": 1, \"Recipes_Applied_Rank_5\": 0, \"Recipes_Applied_On_Previously_Modified_Modules\": 0 }, \"Crew\": { \"NpcCrew_TotalWages\": 0, \"NpcCrew_Hired\": 0, \"NpcCrew_Fired\": 0, \"NpcCrew_Died\": 0 }, \"Multicrew\": { \"Multicrew_Time_Total\": 23327, \"Multicrew_Gunner_Time_Total\": 14241, \"Multicrew_Fighter_Time_Total\": 6070, \"Multicrew_Credits_Total\": 0, \"Multicrew_Fines_Total\": 0 } }","title":"Startup"},{"location":"startup/#startup","text":"","title":"Startup"},{"location":"startup/#cargo","text":"When written: at startup, note this is now written slightly later in startup, after we have initialised missions, so we can detect if any cargo came from an abandoned delivery mission The first \"Cargo\" event in the file will contain the full inventory, others just indicate a separate file has been written The full data is now written to a separate file Cargo.json A simple event (with no parameters) is written to the main journal file when the cargo file is updated Parameters: Vessel: \"Ship\" or \"SRV\" Inventory: array of cargo, Name Count Stolen MissionID (if relevant) Example: { \"timestamp\": \"2018-06-26T08:21:17Z\", \"event\": \"Cargo\", \"Vessel\": \"Ship\", \"Inventory\": [ { \"Name\": \"gold\", \"Count\": 2, \"Stolen\": 0 }, { \"Name\": \"gold\", \"MissionID\": 65397935, \"Count\": 14, \"Stolen\": 0 }, { \"Name\": \"iondistributor\", \"Name_Localised\": \"Ion Distributor\", \"Count\": 2, \"Stolen\": 0 } ] }","title":"Cargo"},{"location":"startup/#clearsavedgame","text":"When written: If you should ever reset your game Parameters: Name: commander name FID: player id Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"ClearSavedGame\", \"Name\": \"HRC1\", \"FID\": \"F44396\" }","title":"ClearSavedGame"},{"location":"startup/#commander","text":"When written: at the start of the LoadGame process This is written before the inventory, loadout, etc Parameters: Name: commander name FID: player id","title":"Commander"},{"location":"startup/#loadout","text":"When written: at startup, when loading from main menu, or when switching ships, or after changing the ship in Outfitting, or when docking SRV back in mothership Parameters: Ship: current ship type ShipID: ship id number (indicates which of your ships you are in) ShipName: user-defined ship name ShipIdent: user-defined ship ID string HullValue \u2013 may not always be present ModulesValue \u2013 may not always be present HullHealth UnladenMass \u2013 Mass of Hull and Modules, excludes fuel and cargo FuelCapacity: { Main: , Reserve: } CargoCapacity MaxJumpRange: (based on zero cargo, and just enough fuel for 1 jump) Rebuy Hot: (if wanted at startup \u2013 may not always be present) Modules: array of installed items, each with: Slot: slot name Item: module name - lowercase On: bool, indicates on or off Priority: power priority Health Value AmmoInClip: (if relevant) AmmoInHopper: (if relevant) Engineering: (if engineered) EngineerID Engineer: name BlueprintID BlueprintName: blueprint name Level Quality ExperimentalEffect: (name, if applied) Modifications: Json array of objects Label \u2013 (see \u00a715.11 below) Value \u2013 may not always be present OriginalValue LessIsGood: bool (For a passenger cabin, AmmoInClip holds the number of places in the cabin)","title":"Loadout"},{"location":"startup/#materials","text":"When written: at startup, when loading from main menu into game Parameters: Raw: array of raw materials (each with name and count) Manufactured: array of manufactured items Encoded: array of scanned data Example: { \"timestamp\": \"2017-02-10T14:25:51Z\", \"event\": \"Materials\", \"Raw\": [ { \"Name\": \"chromium\", \"Count\": 28 }, { \"Name\": \"zinc\", \"Count\": 18 }, { \"Name\": \"iron\", \"Count\": 23 }, { \"Name\": \"sulphur\", \"Count\": 19 } ], \"Manufactured\": [ { \"Name\": \"refinedfocuscrystals\", \"Count\": 10 }, { \"Name\": \"highdensitycomposites\", \"Count\": 3 }, { \"Name\": \"mechanicalcomponents\", \"Count\": 3 } ], \"Encoded\": [ { \"Name\": \"emissiondata\", \"Count\": 32 }, { \"Name\": \"shielddensityreports\", \"Count\": 23 } ] }","title":"Materials"},{"location":"startup/#missions","text":"When written: at startup Parameters: Active: (array of objects) Failed: (array of objects) Complete: (array of objects) Each object contains: MissionID Name PassengerMission: bool Expires: time left in seconds { \"timestamp\": \"2017-10-02T10:37:58Z\", \"event\": \"Missions\", \"Active\": [ { \"MissionID\": 65380900, \"Name\": \"Mission_Courier_name\", \"PassengerMission\": false, \"Expires\": 82751 } ], \"Failed\": [], \"Complete\": [] }","title":"Missions"},{"location":"startup/#newcommander","text":"When written: Creating a new commander Parameters: Name: (new) commander name FID: player id Package: selected starter package Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"NewCommander\", \"Name\": \"HRC1\", \"FID\": \"F44396\", \"Package\": \"ImperialBountyHunter\" }","title":"NewCommander"},{"location":"startup/#loadgame","text":"When written: at startup, when loading from main menu into game Parameters: Commander: commander name FID: player id Horizons: bool Odyssey: bool Ship: current ship type ShipID: ship id number (indicates which of your ships you are in) StartLanded: true (only present if landed) StartDead:true (only present if starting dead: see \"Resurrect\") GameMode: Open, Solo or Group Group: name of group (if in a group) Credits: current credit balance Loan: current loan ShipName: user-defined ship name ShipIdent: user-defined ship ID string FuelLevel: current fuel FuelCapacity: size of main tank language gameversion build Example: { \"timestamp\": \"2017-02-10T14:25:51Z\", \"event\": \"LoadGame\", \"Commander\": \"HRC-2\", \"FID\": \"F44396\", \"Horizons\": true, \"Ship\": \"FerDeLance\", \"ShipID\": 19, \"ShipName\": \"jewel of parhoon\", \"ShipIdent\": \"hr-17f\", \"FuelLevel\": 3.964024, \"FuelCapacity\": 8, \"GameMode\": \"Open\", \"Credits\": 2890718739, \"Loan\": 0 }","title":"LoadGame"},{"location":"startup/#passengers","text":"When written: at startup, when loading the saved game file Parameters: Manifest: array of passenger records, each containing: MissionID Type VIP (bool) Wanted (bool) Count","title":"Passengers"},{"location":"startup/#powerplay","text":"When written: at startup, if player has pledged to a power Parameters: Power: name Rank Merits Votes TimePledged (time in seconds) Example: { \"timestamp\": \"2018-01-31T10:53:04Z\", \"event\": \"Powerplay\", \"Power\": \"Edmund Mahon\", \"Rank\": 0, \"Merits\": 10, \"Votes\": 0, \"TimePledged\": 433024 }","title":"Powerplay"},{"location":"startup/#progress","text":"When written: at startup Parameters: Combat: percent progress to next rank Trade: \" Explore: \" Empire: \" Federation: \" CQC: \" Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"Progress\", \"Combat\": 77, \"Trade\": 9, \"Explore\": 93, \"Empire\": 0, \"Federation\": 0, \"CQC\": 0 }","title":"Progress"},{"location":"startup/#rank","text":"When written: at startup Parameters: Combat: rank on scale 0-8 Trade: rank on scale 0-8 Explore: rank on scale 0-8 Empire: military rank Federation: military rank CQC: rank on scale 0-8 Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"Rank\", \"Combat\": 2, \"Trade\": 2, \"Explore\": 5, \"Empire\": 1, \"Federation\": 3, \"CQC\": 0 }","title":"Rank"},{"location":"startup/#reputation","text":"When written: at startup (after Rank and Progress) This gives the player's reputation (on a scale of -100..+100) with the superpowers Parameters: Empire Federation Independent Alliance Note thresholds: -100.. -90: hostile -90.. -35: unfriendly -35..+ 4: neutral +4..+35: cordial +35..+90: friendly +90..+100: allied","title":"Reputation"},{"location":"startup/#statistics","text":"When written: at startup This line contains the information displayed in the statistics panel on the right side of the cockpit Parameters: Bank_Account Current_Wealth Spent_On_Ships Spent_On_Outfitting Spent_On_Repairs Spent_On_Fuel Spent_On_Ammo_Consumables Insurance_Claims Spent_On_Insurance Combat Bounties_Claimed Bounty_Hunting_Profit Combat_Bonds Combat_Bond_Profits Assassinations Assassination_Profits Highest_Single_Reward Skimmers_Killed Crime Fines Total_Fines Bounties_Received Total_Bounties Highest_Bounty Smuggling Black_Markets_Traded_With Black_Markets_Profits Resources_Smuggled Average_Profit Highest_Single_Transaction Trading Markets_Traded_With Market_Profits Resources_Traded Average_Profit Highest_Single_Transaction Mining Mining_Profits Quantity_Mined Materials_Collected Exploration Systems_Visited Fuel_Scooped Fuel_Purchased Exploration_Profits Planets_Scanned_To_Level_2 Planets_Scanned_To_Level_3 Highest_Payout Total_Hyperspace_Distance Total_Hyperspace_Jumps Greatest_Distance_From_Start Time_Played Passengers Passengers_Missions_Bulk Passengers_Missions_VIP Passengers_Missions_Delivered Passengers_Missions_Ejected Search_And_Rescue SearchRescue_Traded SearchRescue_Profit SearchRescue_Count Crafting Spent_On_Crafting Count_Of_Used_Engineers Recipes_Generated Recipes_Generated_Rank_1 Recipes_Generated_Rank_2 Recipes_Generated_Rank_3 Recipes_Generated_Rank_4 Recipes_Generated_Rank_5 Recipes_Applied Recipes_Applied_Rank_1 Recipes_Applied_Rank_2 Recipes_Applied_Rank_3 Recipes_Applied_Rank_4 Recipes_Applied_Rank_5 Recipes_Applied_On_Previously_Modified_Modules Crew NpcCrew_TotalWages NpcCrew_Hired NpcCrew_Fired NpcCrew_Died Multicrew Multicrew_Time_Total Multicrew_Gunner_Time_Total Multicrew_Fighter_Time_Total Multicrew_Credits_Total Multicrew_Fines_Total Note times are in seconds Example: { \"timestamp\": \"2017-09-25T15:18:31Z\", \"event\": \"Statistics\", \"Bank_Account\": { \"Current_Wealth\": 148827050, \"Spent_On_Ships\": 14499177, \"Spent_On_Outfitting\": 30785093, \"Spent_On_Repairs\": 17716, \"Spent_On_Fuel\": 1647, \"Spent_On_Ammo_Consumables\": 0, \"Insurance_Claims\": 4, \"Spent_On_Insurance\": 1397620 }, \"Combat\": { \"Bounties_Claimed\": 0, \"Bounty_Hunting_Profit\": 0, \"Combat_Bonds\": 0, \"Combat_Bond_Profits\": 0, \"Assassinations\": 0, \"Assassination_Profits\": 0, \"Highest_Single_Reward\": 0, \"Skimmers_Killed\": 0 }, \"Crime\": { \"Fines\": 0, \"Total_Fines\": 0, \"Bounties_Received\": 0, \"Total_Bounties\": 0, \"Highest_Bounty\": 0 }, \"Smuggling\": { \"Black_Markets_Traded_With\": 0, \"Black_Markets_Profits\": 0, \"Resources_Smuggled\": 0, \"Average_Profit\": 0, \"Highest_Single_Transaction\": 0 }, \"Trading\": { \"Markets_Traded_With\": 3, \"Market_Profits\": 40700, \"Resources_Traded\": 23, \"Average_Profit\": 4070, \"Highest_Single_Transaction\": 17961 }, \"Mining\": { \"Mining_Profits\": 0, \"Quantity_Mined\": 0, \"Materials_Collected\": 100 }, \"Exploration\": { \"Systems_Visited\": 228, \"Fuel_Scooped\": 111, \"Fuel_Purchased\": 0, \"Exploration_Profits\": 304469, \"Planets_Scanned_To_Level_2\": 39, \"Planets_Scanned_To_Level_3\": 15, \"Highest_Payout\": 52503, \"Total_Hyperspace_Distance\": 844927, \"Total_Hyperspace_Jumps\": 295, \"Greatest_Distance_From_Start\": 65222.47204614, \"Time_Played\": 651060 }, \"Passengers\": { \"Passengers_Missions_Bulk\": 0, \"Passengers_Missions_VIP\": 0, \"Passengers_Missions_Delivered\": 0, \"Passengers_Missions_Ejected\": 0 }, \"Search_And_Rescue\": { \"SearchRescue_Traded\": 12, \"SearchRescue_Profit\": 19467, \"SearchRescue_Count\": 8 }, \"Crafting\": { \"Spent_On_Crafting\": 0, \"Count_Of_Used_Engineers\": 2, \"Recipes_Generated\": 28, \"Recipes_Generated_Rank_1\": 9, \"Recipes_Generated_Rank_2\": 6, \"Recipes_Generated_Rank_3\": 9, \"Recipes_Generated_Rank_4\": 4, \"Recipes_Generated_Rank_5\": 0, \"Recipes_Applied\": 21, \"Recipes_Applied_Rank_1\": 8, \"Recipes_Applied_Rank_2\": 5, \"Recipes_Applied_Rank_3\": 7, \"Recipes_Applied_Rank_4\": 1, \"Recipes_Applied_Rank_5\": 0, \"Recipes_Applied_On_Previously_Modified_Modules\": 0 }, \"Crew\": { \"NpcCrew_TotalWages\": 0, \"NpcCrew_Hired\": 0, \"NpcCrew_Fired\": 0, \"NpcCrew_Died\": 0 }, \"Multicrew\": { \"Multicrew_Time_Total\": 23327, \"Multicrew_Gunner_Time_Total\": 14241, \"Multicrew_Fighter_Time_Total\": 6070, \"Multicrew_Credits_Total\": 0, \"Multicrew_Fines_Total\": 0 } }","title":"Statistics"},{"location":"station-services/","text":"Station Services \u00b6 BuyAmmo \u00b6 When Written: when purchasing ammunition Parameters: Cost Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"BuyAmmo\", \"Cost\": 80 } BuyDrones \u00b6 When Written: when purchasing drones Parameters: Type Count BuyPrice TotalCost Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"BuyDrones\", \"Type\": \"Drones\", \"Count\": 2, \"SellPrice\": 101, \"TotalCost\": 202 } CargoDepot \u00b6 When written: when collecting or delivering cargo for a wing mission, or if a wing member updates progress Parameters: MissionID:(int) UpdateType:(string) (one of: \"Collect\", \"Deliver\", \"WingUpdate\") CargoType Count StartMarketID(int) EndMarketID(int) ItemsCollected(int) ItemsDelivered(int) TotalItemsToDeliver(int) Progress:(float) The CargoType and Count are included when you collect or deliver gods, they are not included for a wing update. The Progress value actually represents pending progress for goods in transit: (ItemsCollected-ItemsDelievered)/TotalItemsToDeliver Example: { \"timestamp\": \"2018-03-07T15:47:03Z\", \"event\": \"CargoDepot\", \"MissionID\": 65394170, \"UpdateType\": \"Deliver\", \"CargoType\": \"BasicMedicines\", \"Count\": 8, \"StartMarketID\": 3228867072, \"EndMarketID\": 3534964736, \"ItemsCollected\": 16, \"ItemsDelivered\": 16, \"TotalItemsToDeliver\": 3020, \"Progress\": 0 } CommunityGoal \u00b6 When written: when the game retrieves info on community goals from the server, and the data has changed since last time This event contains the current status of all community goals the player is currently subscribed to Parameters: CurrentGoals: an array with an entry for each CG, containing: CGID: a unique ID number for this CG Title: the description of the CG SystemName MarketName Expiry: time and date IsComplete: Boolean CurrentTotal PlayerContribution NumContributors PlayerPercentileBand TopTier: Name: string Bonus: string If the community goal is constructed with a fixed-size top rank (ie max reward for top 10 players) TopRankSize: (integer) PlayerInTopRank: (Boolean) If the community goal has reached the first success tier: TierReached Bonus Example: { \"timestamp\": \"2017-08-14T13:20:28Z\", \"event\": \"CommunityGoal\", \"CurrentGoals\": [ { \"CGID\": 726, \"Title\": \"Alliance Research Initiative \u2013 Trade\", \"SystemName\": \"Kaushpoos\", \"MarketName\": \"Neville Horizons\", \"Expiry\": \"2017-08-17T14:58:14Z\", \"IsComplete\": false, \"CurrentTotal\": 10062, \"PlayerContribution\": 562, \"NumContributors\": 101, \"TopRankSize\": 10, \"PlayerInTopRank\": false, \"TierReached\": \"Tier 1\", \"PlayerPercentileBand\": 50, \"Bonus\": 200000 } ] } CommunityGoalDiscard \u00b6 When written: when opting out of a community goal Parameters: CGID Name System CommunityGoalJoin \u00b6 When Written: when signing up to a community goal Parameters: CGID Name System CommunityGoalReward \u00b6 When Written: when receiving a reward for a community goal Parameters: CGID Name System Reward CrewAssign \u00b6 When written: when changing the task assignment of a member of crew Parameters: Name CrewID Role Example: { \"timestamp\": \"2016-08-09T08:45:31Z\", \"event\": \"CrewAssign\", \"Name\": \"Dannie Koller\", \"Role\": \"Active\" } CrewFire \u00b6 When written: when dismissing a member of crew Parameters: Name CrewID Example: { \"timestamp\": \"2016-08-09T08:46:11Z\", \"event\": \"CrewFire\", \"Name\": \"Whitney Pruitt-Munoz\" } CrewHire \u00b6 When written: when engaging a new member of crew Parameters: Name CrewID Faction Cost Combat Rank Example: { \"timestamp\": \"2016-08-09T08:46:29Z\", \"event\": \"CrewHire\", \"Name\": \"Margaret Parrish\", \"Faction\": \"The Dark Wheel\", \"Cost\": 15000, \"CombatRank\": 1 } EngineerApply \u00b6 This event is obsolete, and is no longer written (as from v3.0) EngineerContribution \u00b6 When written: when offering items cash or bounties to an Engineer to gain access Parameters: Engineer: name of engineer EngineerID Type: type of contribution (Commodity, materials, Credits, Bond, Bounty) Commodity Material Faction (for bond or bounty) Quantity: amount offered this time TotalQuantity: total amount now donated Example: { \"timestamp\": \"2017-05-24T10:41:51Z\", \"event\": \"EngineerContribution\", \"Engineer\": \"Elvira Martuuk\", \"EngineerID\": 300160, \"Type\": \"Commodity\", \"Commodity\": \"soontillrelics\", \"Quantity\": 2, \"TotalQuantity\": 3 } EngineerCraft \u00b6 When Written: when requesting an engineer upgrade Parameters: Engineer: name of engineer EngineerID BlueprintName: name of blueprint BlueprintID Level: crafting level Quality: float ApplyExperimentalEffect: (when applying a new effect) Ingredients: JSON array of objects with names and quantities of materials required Modifiers: JSON array of modification data Label: string \u2013 (see \u00a715.11 below) Value: float OriginalValue: float LessIsGood: bool Some modifications have string values: Label: string ValueStr: string The new \"quality\" value represents the quality or progress of the blueprint. The quality should increase from 0 to 1 as the blueprint is refined through further crafting, and once it reaches a certain value, the player will have the option to upgrade the blueprint to the next level of recipe. When applying an experimental effect, the ApplyExperimentalEffect property will show the name of the effect applied, and the ingredient list will hold the ingredients for that effect. Example: { \"timestamp\": \"2018-03-04T07:08:27Z\", \"event\": \"EngineerCraft\", \"Slot\": \"Slot03_Size3\", \"Module\": \"int_dronecontrol_collection_size3_class5\", \"Ingredients\": [ { \"Name\": \"phosphorus\", \"Count\": 1 } ], \"Engineer\": \"Ram Tah\", \"EngineerID\": 300110, \"BlueprintID\": 128731526, \"BlueprintName\": \"Misc_LightWeight\", \"Level\": 1, \"Quality\": 0.955, \"Modifiers\": [ { \"Label\": \"Mass\", \"Value\": 4.436, \"OriginalValue\": 8, \"LessIsGood\": 1 }, { \"Label\": \"Integrity\", \"Value\": 81, \"OriginalValue\": 90, \"LessIsGood\": 0 } ] } These modification types have string values: WeaponMode, DamageType, CabinClass (although I'm not sure if there are any blueprints that actually modify a cabin class!) EngineerLegacyConvert \u00b6 When written: when converting a pre-2.4 engineered module This is generated when converting, or previewing a conversion of a legacy module to the new system. Due to the nature of the changes made for3.0, modules generated in the old system are not compatible with the new crafting system, so players will be unable to craft with them. However, players will be given the opportunity to convert their legacy modules to the new format with the caveat that converted modules will be a recipe level below what they were before the conversion. The EngineerLegacyConvert journal entry is generated when converting a recipe, or just previewing a conversion, so some of our creative third party developers out there may be able to make tools to show how a ship loadout compares before and after converting their modules. The entry itself is the same as the EngineerCraft entry, minus the ingredients data (since no materials are required to convert), but plus an \"IsPreview\" bool to indicate whether this entry has been generated from a conversion, or just a preview. EngineerProgress \u00b6 When Written: when a player increases their access to an engineer Also a summary of progress for all engineers at startup Parameters (summary at startup) Engineers: array Engineer: name EngineerID Rank: rank reached (when unlocked) Progress: progress stage (Invited/Acquainted/Unlocked/Barred) RankProgress: percentage towards next rank Parameters (update for one engineer) Engineer: name EngineerID Rank: rank reached (when unlocked) Progress: progress stage (Invited/Acquainted/Unlocked/Barred) RankProgress: percentage towards next rank Example (update) { \"timestamp\": \"2018-01-16T09:34:36Z\", \"event\": \"EngineerProgress\", \"Engineer\": \"Zacariah Nemo\", \"EngineerID\": 300050, \"Rank\": 4, \"RankProgress\": 0 } Example (startup): { \"timestamp\": \"2018-05-04T13:58:22Z\", \"event\": \"EngineerProgress\", \"Engineers\": [ { \"Engineer\": \"Zacariah Nemo\", \"EngineerID\": 300050, \"Progress\": \"Unlocked\", \"RankProgress\": 0, \"Rank\": 5 }, { \"Engineer\": \"Marco Qwent\", \"EngineerID\": 300200, \"Progress\": \"Unlocked\", \"RankProgress\": 37, \"Rank\": 4 }, { \"Engineer\": \"Hera Tani\", \"EngineerID\": 300090, \"Progress\": \"Unlocked\", \"RankProgress\": 0, \"Rank\": 3 }, { \"Engineer\": \"Tod 'The Blaster' McQuinn\", \"EngineerID\": 300260, \"Progress\": \"Unlocked\", \"RankProgress\": 97, \"Rank\": 3 }, { \"Engineer\": \"Selene Jean\", \"EngineerID\": 300210, \"Progress\": \"Known\" }, { \"Engineer\": \"Lei Cheung\", \"EngineerID\": 300120, \"Progress\": \"Known\" }, { \"Engineer\": \"Juri Ishmaak\", \"EngineerID\": 300250, \"Progress\": \"Known\" }, { \"Engineer\": \"Felicity Farseer\", \"EngineerID\": 300100, \"Progress\": \"Unlocked\", \"RankProgress\": 0, \"Rank\": 5 }, { \"Engineer\": \"Professor Palin\", \"EngineerID\": 300220, \"Progress\": \"Invited\" }, { \"Engineer\": \"Elvira Martuuk\", \"EngineerID\": 300160, \"Progress\": \"Unlocked\", \"RankProgress\": 0, \"Rank\": 5 }, { \"Engineer\": \"Lori Jameson\", \"EngineerID\": 300230, \"Progress\": \"Known\" }, { \"Engineer\": \"The Dweller\", \"EngineerID\": 300180, \"Progress\": \"Unlocked\", \"RankProgress\": 0, \"Rank\": 5 }, { \"Engineer\": \"Liz Ryder\", \"EngineerID\": 300080, \"Progress\": \"Unlocked\", \"RankProgress\": 93, \"Rank\": 3 }, { \"Engineer\": \"Ram Tah\", \"EngineerID\": 300110, \"Progress\": \"Unlocked\", \"RankProgress\": 31, \"Rank\": 3 } ] } FetchRemoteModule \u00b6 When written: when requesting a module is transferred from storage at another station Parameters: StorageSlot StoredItem ServerId TransferCost Ship ShipId TransferTime: (in seconds) Market \u00b6 When written: when accessing the commodity market in a station A separate file market.json is written to the same folder as the journal, containing full market price info Parameters: MarketID StationName StarSystem The separate file also contains: Items: array of objects id Name Category BuyPrice SellPrice MeanPrice StockBracket DemandBracket Stock Demand Consumer: bool Producer: bool Rare: bool Example: in the journal: { \"timestamp\": \"2017-10-05T10:11:38Z\", \"event\": \"Outfitting\", \"MarketID\": 128678535, \"StationName\": \"Black Hide\", \"StarSystem\": \"Wyrd\" } Separate file: { \"timestamp\":\"2017-10-05 T10 : 10 : 34 Z \", \" event \":\" Market \", \" MarketID \":128678535, \" StationName \":\" Black Hide \", \" StarSystem \":\" Wyrd \", \" Items \" : [ { \"id\" : 128049152 , \"Name\" : \"$platinum_name;\" , \"Name_Localised\" : \"Platinum\" , \"Category\" : \"$MARKET_category_metals;\" , \"Category_Localised\" : \"Metals\" , \"BuyPrice\" : 0 , \"SellPrice\" : 42220 , \"MeanPrice\" : 19756 , \"StockBracket\" : 0 , \"DemandBracket\" : 3 , \"Stock\" : 0 , \"Demand\" : 9182 , \"Consumer\" : true , \"Producer\" : false , \"Rare\" : false }, { \"id\" : 128049153 , \"Name\" : \"$palladium_name;\" , \"Name_Localised\" : \"Palladium\" , \"Category\" : \"$MARKET_category_metals;\" , \"Category_Localised\" : \"Metals\" , \"BuyPrice\" : 0 , \"SellPrice\" : 13999 , \"MeanPrice\" : 13244 , \"StockBracket\" : 0 , \"DemandBracket\" : 3 , \"Stock\" : 0 , \"Demand\" : 123183 , \"Consumer\" : true , \"Producer\" : false , \"Rare\" : false }, { \"id\" : 128049154 , \"Name\" : \"$gold_name;\" , \"Name_Localised\" : \"Gold\" , \"Category\" : \"$MARKET_category_metals;\" , \"Category_Localised\" : \"Metals\" , \"BuyPrice\" : 0 , \"SellPrice\" : 10831 , \"MeanPrice\" : 9373 , \"StockBracket\" : 0 , \"DemandBracket\" : 3 , \"Stock\" : 0 , \"Demand\" : 151492 , \"Consumer\" : true , \"Producer\" : false , \"Rare\" : false }, { \"id\" : 128049155 , \"Name\" : \"$silver_name;\" , \"Name_Localised\" : \"Silver\" , \"Category\" : \"$MARKET_category_metals;\" , \"Category_Localised\" : \"Metals\" , \"BuyPrice\" : 0 , \"SellPrice\" : 5512 , \"MeanPrice\" : 4759 , \"StockBracket\" : 0 , \"DemandBracket\" : 3 , \"Stock\" : 0 , \"Demand\" : 266258 , \"Consumer\" : true , \"Producer\" : false , \"Rare\" : false }, : ] } MassModuleStore \u00b6 When written: when putting multiple modules into storage Parameters: MarketID Ship ShipId Items: Array of records Slot Name Hot EngineerModifications (only present if modified) Level Quality MaterialTrade \u00b6 When written: when exchanging materials at the Material trader contact Parameters: MarketID TraderType Paid Material Category Quantity Received Material Category Quantity Example: (note categories simplified) { \"timestamp\": \"2018-02-21T15:23:49Z\", \"event\": \"MaterialTrade\", \"MarketID\": 3221397760, \"TraderType\": \"encoded\", \"Paid\": { \"Material\": \"scandatabanks\", \"Material_Localised\": \"Classified Scan Databanks\", \"Category\": \"Encoded\", \"Quantity\": 6 }, \"Received\": { \"Material\": \"encodedscandata\", \"Material_Localised\": \"Divergent Scan Data\", \"Quantity\": 1 } } MissionAbandoned \u00b6 When Written: when a mission has been abandoned Parameters: Name: name of mission MissionID Fine: (if relevant) Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"MissionAbandoned\", \"Name\": \"Mission_Collect_name\", \"MissionID\": 65343025 } MissionAccepted \u00b6 When Written: when starting a mission Parameters: Name: name of mission LocalisedName: the mission name as displayed to the user Faction: faction offering mission MissionID Influence: effect on influence (None/Low/Med/High) Reputation: effect on reputation (None/Low/Med/High) Reward: expected cash reward Wing: bool Optional Parameters (depending on mission type) Commodity: commodity type Count: number required / to deliver Donation: contracted donation (as string) (for altruism missions) Donated: actual donation (as int) Target: name of target TargetType: type of target TargetFaction: target's faction KillCount: number of targets Expiry: mission expiry time, in ISO 8601 DestinationSystem DestinationStation DestinationSettlement NewDestinationSystem (if it has been redirected) NewDestinationStation (if redirected) PassengerCount PassengerVIPs: bool PassengerWanted: bool PassengerType: eg Tourist, Soldier, Explorer,... Examples: { \"timestamp\": \"2018-02-28 T12 : 06 : 37 Z \", \" event \": \" MissionAccepted \", \" Faction \": \" Official i Bootis Liberty Party \", \" Name \": \" Mission_DeliveryWing_Agriculture \", \" LocalisedName \": \" Agricultural supply run : 2280 units of Tea \", \" Commodity \": \" $ Tea_Name ; \", \"Commodity_Localised\": \"Tea\", \"Count\": 2280, \"TargetFaction\": \"Ovid Vision &amp ; Co\", \"DestinationSystem\": \"Ovid\", \"DestinationStation\": \"Shriver Platform\", \"Expiry\": \"2018-03-01 T12 : 05 : 53 Z \", \" Wing \": true, \" Influence \": \" Med \", \" Reputation \": \" Med \", \" Reward \": 2686155, \" MissionID \" : 65393626 } MissionCompleted \u00b6 When Written: when a mission is completed Parameters: Name: mission type Faction: faction name MissionID Optional parameters (depending on mission type) Commodity Count Target TargetType TargetFaction DestinationSystem DestinationStation DestinationSettlement Reward: value of reward Donation: contracted donation (as string) (for altruism missions) Donated: actual donation (as int) PermitsAwarded:[] (names of any permits awarded, as a JSON array) CommodityReward:[] (names and counts of any commodity rewards) MaterialsReward:[] ( name, category and count) FactionEffects: array of records Faction Effects: array of Effect, Effect_Localised and Trend value pairs Influence: array of SystemAddress, Trend and Influence values Reputation ReputationTrend TrendValue can be UpGood, UpBad, DownGood, or DownBad Reputation and _Influence _are a set of + indicators (eg \"+++\") Example: { \"timestamp\": \"2018-12-19 T21 : 41 : 09 Z \", \" event \": \" MissionCompleted \", \" Faction \": \" Inara Nexus \", \" Name \": \" Mission_Courier_Elections_name \", \" MissionID \": 442511682, \" TargetFaction \": \" Tougeir Blue Clan \", \" DestinationSystem \": \" Tougeir \", \" DestinationStation \": \" Janes Dock \", \" Reward \": 10000, \" FactionEffects \": [ { \"Faction\" : \"Tougeir Blue Clan\" , \"Effects\" : [ { \"Effect\" : \"$MISSIONUTIL_Interaction_Summary_EP_up;\" , \"Effect_Localised\" : \"The economic status of $#MinorFaction; has improved in the $#System; system.\" , \"Trend\" : \"UpGood\" } ] , \" Influence \": [ { \"SystemAddress\" : 5067927397769 , \"Trend\" : \"UpGood\" , \"Influence\" : \"++++\" } ] , \" ReputationTrend \": \" UpGood \", \" Reputation \": \"\" }, { \" Faction \": \" Inara Nexus \", \" Effects \": [ { \"Effect\" : \"$MISSIONUTIL_Interaction_Summary_EP_up;\" , \"Effect_Localised\" : \"The economic status of $#MinorFaction; has improved in the $#System; system.\" , \"Trend\" : \"UpGood\" } ] , \" Influence \": [] , \" ReputationTrend \": \" UpGood \", \" Reputation \": \" + \" } ] } Example of MaterialsReward: ... \"MaterialsReward\":[ { \"Name\":\"DisruptedWakeEchoes\", \"Name_Localised\":\"Atypical Disrupted Wake Echoes\", \"Category\":\"$MICRORESOURCE_CATEGORY_Encoded;\", \"Category_Localised\":\"Encoded\", \"Count\":4 } ] ... MissionFailed \u00b6 When Written: when a mission has failed Parameters: Name: name of mission MissionID Fine: (if relevant) MissionRedirected \u00b6 When written: when a mission is updated with a new destination Parameters MissionID Name NewDestinationStation OldDestinationStation NewDestinationSystem OldDestinationSystem Example: { \"timestamp\": \"2017-08-01T09:04:07Z\", \"event\": \"MissionRedirected\", \"MissionID\": 65367315, \"NewDestinationStation\": \"Metcalf Orbital\", \"OldDestinationStation\": \"Cuffey Orbital\", \"NewDestinationSystem\": \"Cemiess\", \"OldDestinationSystem\": \"Vequess\" } ModuleBuy \u00b6 When Written: when buying a module in outfitting Parameters: MarketID Slot: the outfitting slot BuyItem: the module being purchased BuyPrice: price paid Ship: the players ship ShipID If existing module is stored: StoredItem: item being stored If replacing an existing module: SellItem: item being sold SellPrice: sale price Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"ModuleBuy\", \"Slot\": \"MediumHardpoint2\", \"SellItem\": \"hpt_pulselaser_fixed_medium\", \"SellPrice\": 0, \"BuyItem\": \"hpt_multicannon_gimbal_medium\", \"BuyPrice\": 50018, \"Ship\": \"cobramkiii\", \"ShipID\": 1 } ModuleRetrieve \u00b6 When written: when fetching a previously stored module Parameters: MarketID Slot Ship ShipID RetrievedItem Hot EngineerModifications: name of modification blueprint, if any Level Quality SwapOutItem (if slot was not empty) Cost ModuleSell \u00b6 When Written: when selling a module in outfitting Parameters: MarketID Slot SellItem SellPrice Ship ShipID Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"ModuleSell\", \"Slot\": \"Slot06_Size2\", \"SellItem\": \"int_cargorack_size1_class1\", \"SellPrice\": 877, \"Ship\": \"asp\", \"ShipID\": 1 } ModuleSellRemote \u00b6 When written: when selling a module in storage at another station Parameters: StorageSlot SellItem ServerId SellPrice Ship ShipId ModuleStore \u00b6 When written: when storing a module in Outfitting Parameters: MarketID Slot Ship ShipID StoredItem Hot EngineerModifications: name of modification blueprint, if any Level Quality ReplacementItem (if a core module) Cost (if any) Example: { \"timestamp\": \"2018-01-31 T10 : 55 : 15 Z \", \" event \": \" ModuleStore \", \" MarketID \": 128676487, \" Slot \": \" TinyHardpoint1 \", \" StoredItem \": \" $ hpt_shieldbooster_size0_class3_name ; \", \"StoredItem_Localised\": \"Shield Booster\", \"Ship\": \"empire_courier\", \"ShipID\": 11, \"Hot\": false, \"EngineerModifications\": \"ShieldBooster_Explosive\", \"Level\": 1, \"Quality\": 0.5271 } ModuleSwap \u00b6 When Written: when moving a module to a different slot on the ship Parameters: MarketID FromSlot ToSlot FromItem ToItem Ship ShipID Examples: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"ModuleSwap\", \"FromSlot\": \"MediumHardpoint1\", \"ToSlot\": \"MediumHardpoint2\", \"FromItem\": \"hpt_pulselaser_fixed_medium\", \"ToItem\": \"hpt_multicannon_gimbal_medium\", \"Ship\": \"cobramkiii\", \"ShipID\": 1 } { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"ModuleSwap\", \"FromSlot\": \"SmallHardpoint2\", \"ToSlot\": \"SmallHardpoint1\", \"FromItem\": \"hpt_pulselaserburst_fixed_small_scatter\", \"ToItem\": \"Null\", \"Ship\": \"cobramkiii\", \"ShipID\": 1 } Outfitting \u00b6 Written when accessing the outfitting menu The full parts pricelist is written to a separate file Outfitting.json Parameters: MarketID StationName StarSystem The separate file also contains Horizons: bool Items: array of objects id Name BuyPrice Example: (in journal) { \"timestamp\": \"2017-10-05T10:11:38Z\", \"event\": \"Outfitting\", \"MarketID\": 128678535, \"StationName\": \"Black Hide\", \"StarSystem\": \"Wyrd\" } (In separate file) { \"timestamp\":\"2017-10-05T10:11:38Z\", \"event\":\"Outfitting\", \"MarketID\":128678535, \"StationName\":\"Black Hide\", \"StarSystem\":\"Wyrd\", \"Horizons\":true, \"Items\":[ { \"id\":128049382, \"Name\":\"hpt_pulselaser_fixed_medium\", \"BuyPrice\":16731 }, { \"id\":128049383, \"Name\":\"hpt_pulselaser_fixed_large\", \"BuyPrice\":66924 }, { \"id\":128049385, \"Name\":\"hpt_pulselaser_gimbal_small\", \"BuyPrice\":6275 }, { \"id\":128049386, \"Name\":\"hpt_pulselaser_gimbal_medium\", \"BuyPrice\":33653 }, { \"id\":128049388, \"Name\":\"hpt_pulselaser_turret_small\", \"BuyPrice\":24717 }, { \"id\":128681995, \"Name\":\"hpt_pulselaser_gimbal_huge\", \"BuyPrice\":834269 }, ] } PayBounties \u00b6 When written: when paying off bounties Parameters: Amount: (total amount paid , including any broker fee) BrokerPercentage (present if paid via a Broker) AllFines: bool Faction ShipID Example: { \"timestamp\": \"2018-03-19 T10 : 25 : 10 Z \", \" event \": \" PayBounties \", \" Amount \": 400, \" Faction \": \" $ faction_Federation ; \", \"Faction_Localised\": \"Federation\", \"ShipID\": 9, \"BrokerPercentage\": 25 } PayFines \u00b6 When Written: when paying fines Parameters: Amount: (total amount paid , including any broker fee) BrokerPercentage (present if paid via a Broker) AllFines: bool Faction: (if paying off an individual faction's fines) ShipID Example: { \"timestamp\": \"2018-03-19T10:24:21Z\", \"event\": \"PayFines\", \"Amount\": 250, \"AllFines\": false, \"Faction\": \"Batz Transport Commodities\", \"ShipID\": 9 } PayLegacyFines \u00b6 When Written: when paying legacy fines (This is now obsolete, as of v3.0) Parameters: Amount (total amount paid, including any broker fee) BrokerPercentage (present if paid through a broker) RedeemVoucher \u00b6 When Written: when claiming payment for combat bounties and bonds Parameters: Type: (CombatBond/Bounty/Trade/Settlement/Scannable) Amount: (Net amount received, after any broker fee) Faction: name of faction (for types other than Bounty) BrokerPercentage (if redeemed through a broker) Factions: array of faction/amount pairs (for Type=Bounty) Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"RedeemVoucher\", \"Type\": \"bounty\", \"Factions\": [ { \"Faction\": \"Ed's 38\", \"Amount\": 1000 }, { \"Faction\": \"Zac's Lads\", \"Amount\": 2000 } ] } RefuelAll \u00b6 When Written: when refuelling (full tank) Parameters: Cost: cost of fuel Amount: tons of fuel purchased Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"RefuelAll\", \"Cost\": 317, \"Amount\": 6.322901 } RefuelPartial \u00b6 When Written: when refuelling (10%) Parameters: Cost: cost of fuel Amount: tons of fuel purchased Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"RefuelPartial\", \"Cost\": 83, \"Amount\": 1.649 } Repair \u00b6 When Written: when repairing the ship Parameters: Item: all, wear, hull, paint, or name of module Cost: cost of repair Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"Repair\", \"Item\": \"int_powerplant_size3_class5\", \"Cost\": 1100 } Note when repairing on a FleetCarrier, you can now get a list of the modules repaired: { \"timestamp\": \"2020-03-31 T13 : 39 : 42 Z \", \" event \": \" Repair \", \" Items \": [ \"$hpt_dumbfiremissilerack_fixed_large_name;\" , \"$hpt_beamlaser_gimbal_medium_name;\" , \"$hpt_railgun_fixed_medium_name;\" , \"$hpt_beamlaser_gimbal_medium_name;\" , \"$hpt_dumbfiremissilerack_fixed_large_name;\" ] , \" Cost \" : 34590 } RepairAll \u00b6 When written: when repairing everything Parameters: Cost RestockVehicle \u00b6 When Written: when purchasing an SRV or Fighter Parameters: Type: type of vehicle being purchased (SRV or fighter model) Loadout: variant Cost: purchase cost Count: number of vehicles purchased Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"RestockVehicle\", \"Type\": \"SRV\", \"Loadout\": \"starter\", \"Cost\": 1030, \"Count\": 1 } ScientificResearch \u00b6 When written: when contributing materials to a \"research\" community goal Parameters: MarketID Name: material name Category Count SearchAndRescue \u00b6 When written: when delivering items to a Search and Rescue contact Parameters: MarketID Name Count Reward SellDrones \u00b6 When Written: when selling unwanted drones back to the market Parameters: Type Count SellPrice TotalSale Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"SellDrones\", \"Type\": \"Drones\", \"Count\": 1, \"SellPrice\": 91, \"TotalSale\": 91 } SellShipOnRebuy \u00b6 When written: When selling a stored ship to raise funds when on insurance/rebuy screen Parameters: ShipType System SellShipId ShipPrice Example: { \"timestamp\": \"2017-07-20T08:56:39Z\", \"event\": \"SellShipOnRebuy\", \"ShipType\": \"Dolphin\", \"System\": \"Shinrarta Dezhra\", \"SellShipId\": 4, \"ShipPrice\": 4110183 } SetUserShipName \u00b6 When written: when assigning a name to the ship in Starport Services Parameters: Ship: Ship model (eg CobraMkIII) ShipID: player's ship ID number UserShipName: selected name UserShipId: selected ship id Example: { \"timestamp\": \"2017-01-24T10:42:38Z\", \"event\": \"SetUserShipName\", \"Ship\": \"cobramkiii\", \"ShipID\": 2, \"UserShipName\": \"Enterprise\", \"UserShipId\": \"NCC 1701\" } Shipyard \u00b6 When written: when accessing shipyard in a station Parameters: MarketID StationName StarSystem The full price list is written to a separate file, in the same folder as the journal, Shipyard.json Horizons: bool AllowCobraMkIV: bool Pricelist: array of objects ShipType ShipPrice Example: in the Journal: { \"timestamp\": \"2017-10-04T10:01:38Z\", \"event\": \"Shipyard\", \"MarketID\": 128122104, \"StationName\": \"Seven Holm\", \"StarSystem\": \"Tamor\" } In the separate shipyard.json file: { \"timestamp\":\"2017-10-04T10:01:38Z\", \"event\":\"Shipyard\", \"MarketID\": 128122104, \"StationName\":\"Seven Holm\", \"StarSystem\":\"Tamor\", \"Horizons\":true, \"AllowCobraMkIV\":true, \"PriceList\":[ { \"id\":128049249, \"ShipType\":\"sidewinder\", \"ShipPrice\":24336 }, { \"id\":128049255, \"ShipType\":\"eagle\", \"ShipPrice\":34071 }, { \"id\":128049261, \"ShipType\":\"hauler\", \"ShipPrice\":40094 }, { \"id\":128049267, \"ShipType\":\"adder\", \"ShipPrice\":66779 }, { \"id\":128672138, \"ShipType\":\"empire_eagle\", \"ShipType_Localised\":\"Imperial Eagle\", \"ShipPrice\":84283 }, ] } ShipyardBuy \u00b6 When Written: when buying a new ship in the shipyard Parameters: MarketID ShipType: ship being purchased ShipPrice: purchase cost StoreOldShip: (if storing old ship) ship type being stored StoreShipID SellOldShip: (if selling current ship) ship type being sold SellShipID SellPrice: (if selling current ship) ship sale price Note: the new ship's ShipID will be logged in a separate event after the purchase Example: { \"timestamp\": \"2016-07-21T14:36:38Z\", \"event\": \"ShipyardBuy\", \"ShipType\": \"hauler\", \"ShipPrice\": 46262, \"StoreOldShip\": \"SideWinder\", \"StoreShipID\": 2 } ShipyardNew \u00b6 When written: after a new ship has been purchased Parameters: ShipType NewShipID Example: { \"timestamp\": \"2016-07-21T14:36:38Z\", \"event\": \"ShipyardNew\", \"ShipType\": \"hauler\", \"NewShipID\": 4 } ShipyardSell \u00b6 When Written: when selling a ship stored in the shipyard Parameters: MarketID ShipType: type of ship being sold SellShipID ShipPrice: sale price System: (if ship is in another system) name of system Example: { \"timestamp\": \"2016-07-21T15:12:19Z\", \"event\": \"ShipyardSell\", \"ShipType\": \"Adder\", \"SellShipID\": 6, \"ShipPrice\": 79027, \"System\": \"Eranin\" } ShipyardTransfer \u00b6 When Written: when requesting a ship at another station be transported to this station Parameters: MarketID ShipType: type of ship ShipID System: where it is ShipMarketID Distance: how far away TransferPrice: cost of transfer TransferTime: time taken in seconds Example: { \"timestamp\": \"2016-07-21T15:19:49Z\", \"event\": \"ShipyardTransfer\", \"ShipType\": \"SideWinder\", \"ShipID\": 7, \"System\": \"Eranin\", \"Distance\": 85.639145, \"TransferPrice\": 580 } ShipyardSwap \u00b6 When Written: when switching to another ship already stored at this station Parameters: MarketID ShipType: type of ship being switched to ShipID StoreOldShip: (if storing old ship) type of ship being stored StoreShipID SellOldShip: (if selling old ship) type of ship being sold SellShipID Example { \"timestamp\": \"2016-07-21T14:36:06Z\", \"event\": \"ShipyardSwap\", \"ShipType\": \"sidewinder\", \"ShipID\": 10, \"StoreOldShip\": \"Asp\", \"StoreShipID\": 2 } StoredModules \u00b6 When written: when first visiting Outfitting, and when the set of stored modules has changed Parameters: MarketID: current market Items: (array of objects) Name StarSystem MarketID: where the module is stored StorageSlot TransferCost TransferTime Hot EngineerModifications: (recipe name) Level Quality InTransit:bool \"EngineerModifications\", \"Level\" and \"Quality\" only appear for an engineered module The InTransit value only appears (with value true) if the module is being transferred. In this case, the system, market, transfer cost and transfer time are not written. { \"timestamp\":\"2018-01-31 T10 : 55 : 16 Z \", \" event \":\" StoredModules \", \" MarketID \":128676487, \" StationName \":\" Farseer Inc \", \" StarSystem \":\" Deciat \", \" Items \" : [ { \"Name\" : \"$int_engine_size3_class5_name;\" , \"Name_Localised\" : \"Thrusters\" , \"StorageSlot\" : 57 , \"StarSystem\" : \"Deciat\" , \"MarketID\" : 128676487 , \"TransferCost\" : 0 , \"TransferTime\" : 0 , \"BuyPrice\" : 495215 , \"Hot\" : false , \"EngineerModifications\" : \"Engine_Dirty\" , \"Level\" : 1 , \"Quality\" : 0.000000 }, { \"Name\" : \"$int_hyperdrive_size6_class5_name;\" , \"Name_Localised\" : \"FSD\" , \"StorageSlot\" : 59 , \"StarSystem\" : \"Shinrarta Dezhra\" , \"MarketID\" : 128666762 , \"TransferCost\" : 79680 , \"TransferTime\" : 1317 , \"BuyPrice\" : 12620035 , \"Hot\" : false , \"EngineerModifications\" : \"FSD_LongRange\" , \"Level\" : 5 , \"Quality\" : 0.000000 } ] } StoredShips \u00b6 When written: when visiting shipyard Parameters: MarketID StationName StarSystem ShipsHere: (array of objects) ShipID ShipType Name (if named) Value Hot ShipsRemote: (array of objects) ShipID ShipType Name (if named) Value Hot If the ship is in transit: InTransit: true If the ship is not in transit: StarSystem ShipMarketID TransferPrice TransferType Example: { \"timestamp\": \"2017-10-04T10:07:21Z\", \"event\": \"StoredShips\", \"StationName\": \"Jameson Memorial\", \"StarSystem\": \"Shinrarta Dezhra\", \"ShipsHere\": [ { \"ShipID\": 64, \"ShipType\": \"sidewinder\", \"Value\": 567962 }, { \"ShipID\": 20, \"ShipType\": \"empire_eagle\", \"Value\": 6373956 } ], \"ShipsRemote\": [ { \"ShipID\": 0, \"ShipType\": \"CobraMkIII\", \"StarSystem\": \"Beta-1 Tucanae\", \"TransferPrice\": 3777, \"TransferTime\": 1590, \"Value\": 9464239 } ] } TechnologyBroker \u00b6 When written: when using the Technology Broker to unlock new purchasable technology Parameters: BrokerType MarketID ItemsUnlocked: the name(s) of the new item unlocked (available in Outfitting) Commodities: Name: name of item Count: number of items used Materials: Name Count Category Example: { \"timestamp\": \"2018-03-02T11:28:44Z\", \"event\": \"TechnologyBroker\", \"BrokerType\": \"Human\", \"MarketID\": 128151032, \"ItemsUnlocked\": [ { \"Name\": \"Hpt_PlasmaShockCannon_Fixed_Medium\", \"Name_Localised\": \"Shock Cannon\" } ], \"Commodities\": [ { \"Name\": \"iondistributor\", \"Name_Localised\": \"Ion Distributor\", \"Count\": 6 } ], \"Materials\": [ { \"Name\": \"vanadium\", \"Count\": 30, \"Category\": \"Raw\" }, { \"Name\": \"tungsten\", \"Count\": 30, \"Category\": \"Raw\" }, { \"Name\": \"rhenium\", \"Count\": 36, \"Category\": \"Raw\" }, { \"Name\": \"technetium\", \"Count\": 30, \"Category\": \"Raw\" } ] } ClearImpound \u00b6 When written: When clearing the impound off of one of your ships. Parameters: ShipType ShipID ShipMarketID: The market the ship is stored at MarketID: Your current market Example: { \"timestamp\":\"2022-11-18T16:19:48Z\", \"event\":\"ClearImpound\", \"ShipType\":\"asp\", \"ShipType_Localised\":\"Asp Explorer\", \"ShipID\":10, \"ShipMarketID\":128833431, \"MarketID\":128833431 }","title":"Station Services"},{"location":"station-services/#station_services","text":"","title":"Station Services"},{"location":"station-services/#buyammo","text":"When Written: when purchasing ammunition Parameters: Cost Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"BuyAmmo\", \"Cost\": 80 }","title":"BuyAmmo"},{"location":"station-services/#buydrones","text":"When Written: when purchasing drones Parameters: Type Count BuyPrice TotalCost Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"BuyDrones\", \"Type\": \"Drones\", \"Count\": 2, \"SellPrice\": 101, \"TotalCost\": 202 }","title":"BuyDrones"},{"location":"station-services/#cargodepot","text":"When written: when collecting or delivering cargo for a wing mission, or if a wing member updates progress Parameters: MissionID:(int) UpdateType:(string) (one of: \"Collect\", \"Deliver\", \"WingUpdate\") CargoType Count StartMarketID(int) EndMarketID(int) ItemsCollected(int) ItemsDelivered(int) TotalItemsToDeliver(int) Progress:(float) The CargoType and Count are included when you collect or deliver gods, they are not included for a wing update. The Progress value actually represents pending progress for goods in transit: (ItemsCollected-ItemsDelievered)/TotalItemsToDeliver Example: { \"timestamp\": \"2018-03-07T15:47:03Z\", \"event\": \"CargoDepot\", \"MissionID\": 65394170, \"UpdateType\": \"Deliver\", \"CargoType\": \"BasicMedicines\", \"Count\": 8, \"StartMarketID\": 3228867072, \"EndMarketID\": 3534964736, \"ItemsCollected\": 16, \"ItemsDelivered\": 16, \"TotalItemsToDeliver\": 3020, \"Progress\": 0 }","title":"CargoDepot"},{"location":"station-services/#communitygoal","text":"When written: when the game retrieves info on community goals from the server, and the data has changed since last time This event contains the current status of all community goals the player is currently subscribed to Parameters: CurrentGoals: an array with an entry for each CG, containing: CGID: a unique ID number for this CG Title: the description of the CG SystemName MarketName Expiry: time and date IsComplete: Boolean CurrentTotal PlayerContribution NumContributors PlayerPercentileBand TopTier: Name: string Bonus: string If the community goal is constructed with a fixed-size top rank (ie max reward for top 10 players) TopRankSize: (integer) PlayerInTopRank: (Boolean) If the community goal has reached the first success tier: TierReached Bonus Example: { \"timestamp\": \"2017-08-14T13:20:28Z\", \"event\": \"CommunityGoal\", \"CurrentGoals\": [ { \"CGID\": 726, \"Title\": \"Alliance Research Initiative \u2013 Trade\", \"SystemName\": \"Kaushpoos\", \"MarketName\": \"Neville Horizons\", \"Expiry\": \"2017-08-17T14:58:14Z\", \"IsComplete\": false, \"CurrentTotal\": 10062, \"PlayerContribution\": 562, \"NumContributors\": 101, \"TopRankSize\": 10, \"PlayerInTopRank\": false, \"TierReached\": \"Tier 1\", \"PlayerPercentileBand\": 50, \"Bonus\": 200000 } ] }","title":"CommunityGoal"},{"location":"station-services/#communitygoaldiscard","text":"When written: when opting out of a community goal Parameters: CGID Name System","title":"CommunityGoalDiscard"},{"location":"station-services/#communitygoaljoin","text":"When Written: when signing up to a community goal Parameters: CGID Name System","title":"CommunityGoalJoin"},{"location":"station-services/#communitygoalreward","text":"When Written: when receiving a reward for a community goal Parameters: CGID Name System Reward","title":"CommunityGoalReward"},{"location":"station-services/#crewassign","text":"When written: when changing the task assignment of a member of crew Parameters: Name CrewID Role Example: { \"timestamp\": \"2016-08-09T08:45:31Z\", \"event\": \"CrewAssign\", \"Name\": \"Dannie Koller\", \"Role\": \"Active\" }","title":"CrewAssign"},{"location":"station-services/#crewfire","text":"When written: when dismissing a member of crew Parameters: Name CrewID Example: { \"timestamp\": \"2016-08-09T08:46:11Z\", \"event\": \"CrewFire\", \"Name\": \"Whitney Pruitt-Munoz\" }","title":"CrewFire"},{"location":"station-services/#crewhire","text":"When written: when engaging a new member of crew Parameters: Name CrewID Faction Cost Combat Rank Example: { \"timestamp\": \"2016-08-09T08:46:29Z\", \"event\": \"CrewHire\", \"Name\": \"Margaret Parrish\", \"Faction\": \"The Dark Wheel\", \"Cost\": 15000, \"CombatRank\": 1 }","title":"CrewHire"},{"location":"station-services/#engineerapply","text":"This event is obsolete, and is no longer written (as from v3.0)","title":"EngineerApply"},{"location":"station-services/#engineercontribution","text":"When written: when offering items cash or bounties to an Engineer to gain access Parameters: Engineer: name of engineer EngineerID Type: type of contribution (Commodity, materials, Credits, Bond, Bounty) Commodity Material Faction (for bond or bounty) Quantity: amount offered this time TotalQuantity: total amount now donated Example: { \"timestamp\": \"2017-05-24T10:41:51Z\", \"event\": \"EngineerContribution\", \"Engineer\": \"Elvira Martuuk\", \"EngineerID\": 300160, \"Type\": \"Commodity\", \"Commodity\": \"soontillrelics\", \"Quantity\": 2, \"TotalQuantity\": 3 }","title":"EngineerContribution"},{"location":"station-services/#engineercraft","text":"When Written: when requesting an engineer upgrade Parameters: Engineer: name of engineer EngineerID BlueprintName: name of blueprint BlueprintID Level: crafting level Quality: float ApplyExperimentalEffect: (when applying a new effect) Ingredients: JSON array of objects with names and quantities of materials required Modifiers: JSON array of modification data Label: string \u2013 (see \u00a715.11 below) Value: float OriginalValue: float LessIsGood: bool Some modifications have string values: Label: string ValueStr: string The new \"quality\" value represents the quality or progress of the blueprint. The quality should increase from 0 to 1 as the blueprint is refined through further crafting, and once it reaches a certain value, the player will have the option to upgrade the blueprint to the next level of recipe. When applying an experimental effect, the ApplyExperimentalEffect property will show the name of the effect applied, and the ingredient list will hold the ingredients for that effect. Example: { \"timestamp\": \"2018-03-04T07:08:27Z\", \"event\": \"EngineerCraft\", \"Slot\": \"Slot03_Size3\", \"Module\": \"int_dronecontrol_collection_size3_class5\", \"Ingredients\": [ { \"Name\": \"phosphorus\", \"Count\": 1 } ], \"Engineer\": \"Ram Tah\", \"EngineerID\": 300110, \"BlueprintID\": 128731526, \"BlueprintName\": \"Misc_LightWeight\", \"Level\": 1, \"Quality\": 0.955, \"Modifiers\": [ { \"Label\": \"Mass\", \"Value\": 4.436, \"OriginalValue\": 8, \"LessIsGood\": 1 }, { \"Label\": \"Integrity\", \"Value\": 81, \"OriginalValue\": 90, \"LessIsGood\": 0 } ] } These modification types have string values: WeaponMode, DamageType, CabinClass (although I'm not sure if there are any blueprints that actually modify a cabin class!)","title":"EngineerCraft"},{"location":"station-services/#engineerlegacyconvert","text":"When written: when converting a pre-2.4 engineered module This is generated when converting, or previewing a conversion of a legacy module to the new system. Due to the nature of the changes made for3.0, modules generated in the old system are not compatible with the new crafting system, so players will be unable to craft with them. However, players will be given the opportunity to convert their legacy modules to the new format with the caveat that converted modules will be a recipe level below what they were before the conversion. The EngineerLegacyConvert journal entry is generated when converting a recipe, or just previewing a conversion, so some of our creative third party developers out there may be able to make tools to show how a ship loadout compares before and after converting their modules. The entry itself is the same as the EngineerCraft entry, minus the ingredients data (since no materials are required to convert), but plus an \"IsPreview\" bool to indicate whether this entry has been generated from a conversion, or just a preview.","title":"EngineerLegacyConvert"},{"location":"station-services/#engineerprogress","text":"When Written: when a player increases their access to an engineer Also a summary of progress for all engineers at startup Parameters (summary at startup) Engineers: array Engineer: name EngineerID Rank: rank reached (when unlocked) Progress: progress stage (Invited/Acquainted/Unlocked/Barred) RankProgress: percentage towards next rank Parameters (update for one engineer) Engineer: name EngineerID Rank: rank reached (when unlocked) Progress: progress stage (Invited/Acquainted/Unlocked/Barred) RankProgress: percentage towards next rank Example (update) { \"timestamp\": \"2018-01-16T09:34:36Z\", \"event\": \"EngineerProgress\", \"Engineer\": \"Zacariah Nemo\", \"EngineerID\": 300050, \"Rank\": 4, \"RankProgress\": 0 } Example (startup): { \"timestamp\": \"2018-05-04T13:58:22Z\", \"event\": \"EngineerProgress\", \"Engineers\": [ { \"Engineer\": \"Zacariah Nemo\", \"EngineerID\": 300050, \"Progress\": \"Unlocked\", \"RankProgress\": 0, \"Rank\": 5 }, { \"Engineer\": \"Marco Qwent\", \"EngineerID\": 300200, \"Progress\": \"Unlocked\", \"RankProgress\": 37, \"Rank\": 4 }, { \"Engineer\": \"Hera Tani\", \"EngineerID\": 300090, \"Progress\": \"Unlocked\", \"RankProgress\": 0, \"Rank\": 3 }, { \"Engineer\": \"Tod 'The Blaster' McQuinn\", \"EngineerID\": 300260, \"Progress\": \"Unlocked\", \"RankProgress\": 97, \"Rank\": 3 }, { \"Engineer\": \"Selene Jean\", \"EngineerID\": 300210, \"Progress\": \"Known\" }, { \"Engineer\": \"Lei Cheung\", \"EngineerID\": 300120, \"Progress\": \"Known\" }, { \"Engineer\": \"Juri Ishmaak\", \"EngineerID\": 300250, \"Progress\": \"Known\" }, { \"Engineer\": \"Felicity Farseer\", \"EngineerID\": 300100, \"Progress\": \"Unlocked\", \"RankProgress\": 0, \"Rank\": 5 }, { \"Engineer\": \"Professor Palin\", \"EngineerID\": 300220, \"Progress\": \"Invited\" }, { \"Engineer\": \"Elvira Martuuk\", \"EngineerID\": 300160, \"Progress\": \"Unlocked\", \"RankProgress\": 0, \"Rank\": 5 }, { \"Engineer\": \"Lori Jameson\", \"EngineerID\": 300230, \"Progress\": \"Known\" }, { \"Engineer\": \"The Dweller\", \"EngineerID\": 300180, \"Progress\": \"Unlocked\", \"RankProgress\": 0, \"Rank\": 5 }, { \"Engineer\": \"Liz Ryder\", \"EngineerID\": 300080, \"Progress\": \"Unlocked\", \"RankProgress\": 93, \"Rank\": 3 }, { \"Engineer\": \"Ram Tah\", \"EngineerID\": 300110, \"Progress\": \"Unlocked\", \"RankProgress\": 31, \"Rank\": 3 } ] }","title":"EngineerProgress"},{"location":"station-services/#fetchremotemodule","text":"When written: when requesting a module is transferred from storage at another station Parameters: StorageSlot StoredItem ServerId TransferCost Ship ShipId TransferTime: (in seconds)","title":"FetchRemoteModule"},{"location":"station-services/#market","text":"When written: when accessing the commodity market in a station A separate file market.json is written to the same folder as the journal, containing full market price info Parameters: MarketID StationName StarSystem The separate file also contains: Items: array of objects id Name Category BuyPrice SellPrice MeanPrice StockBracket DemandBracket Stock Demand Consumer: bool Producer: bool Rare: bool Example: in the journal: { \"timestamp\": \"2017-10-05T10:11:38Z\", \"event\": \"Outfitting\", \"MarketID\": 128678535, \"StationName\": \"Black Hide\", \"StarSystem\": \"Wyrd\" } Separate file: { \"timestamp\":\"2017-10-05 T10 : 10 : 34 Z \", \" event \":\" Market \", \" MarketID \":128678535, \" StationName \":\" Black Hide \", \" StarSystem \":\" Wyrd \", \" Items \" : [ { \"id\" : 128049152 , \"Name\" : \"$platinum_name;\" , \"Name_Localised\" : \"Platinum\" , \"Category\" : \"$MARKET_category_metals;\" , \"Category_Localised\" : \"Metals\" , \"BuyPrice\" : 0 , \"SellPrice\" : 42220 , \"MeanPrice\" : 19756 , \"StockBracket\" : 0 , \"DemandBracket\" : 3 , \"Stock\" : 0 , \"Demand\" : 9182 , \"Consumer\" : true , \"Producer\" : false , \"Rare\" : false }, { \"id\" : 128049153 , \"Name\" : \"$palladium_name;\" , \"Name_Localised\" : \"Palladium\" , \"Category\" : \"$MARKET_category_metals;\" , \"Category_Localised\" : \"Metals\" , \"BuyPrice\" : 0 , \"SellPrice\" : 13999 , \"MeanPrice\" : 13244 , \"StockBracket\" : 0 , \"DemandBracket\" : 3 , \"Stock\" : 0 , \"Demand\" : 123183 , \"Consumer\" : true , \"Producer\" : false , \"Rare\" : false }, { \"id\" : 128049154 , \"Name\" : \"$gold_name;\" , \"Name_Localised\" : \"Gold\" , \"Category\" : \"$MARKET_category_metals;\" , \"Category_Localised\" : \"Metals\" , \"BuyPrice\" : 0 , \"SellPrice\" : 10831 , \"MeanPrice\" : 9373 , \"StockBracket\" : 0 , \"DemandBracket\" : 3 , \"Stock\" : 0 , \"Demand\" : 151492 , \"Consumer\" : true , \"Producer\" : false , \"Rare\" : false }, { \"id\" : 128049155 , \"Name\" : \"$silver_name;\" , \"Name_Localised\" : \"Silver\" , \"Category\" : \"$MARKET_category_metals;\" , \"Category_Localised\" : \"Metals\" , \"BuyPrice\" : 0 , \"SellPrice\" : 5512 , \"MeanPrice\" : 4759 , \"StockBracket\" : 0 , \"DemandBracket\" : 3 , \"Stock\" : 0 , \"Demand\" : 266258 , \"Consumer\" : true , \"Producer\" : false , \"Rare\" : false }, : ] }","title":"Market"},{"location":"station-services/#massmodulestore","text":"When written: when putting multiple modules into storage Parameters: MarketID Ship ShipId Items: Array of records Slot Name Hot EngineerModifications (only present if modified) Level Quality","title":"MassModuleStore"},{"location":"station-services/#materialtrade","text":"When written: when exchanging materials at the Material trader contact Parameters: MarketID TraderType Paid Material Category Quantity Received Material Category Quantity Example: (note categories simplified) { \"timestamp\": \"2018-02-21T15:23:49Z\", \"event\": \"MaterialTrade\", \"MarketID\": 3221397760, \"TraderType\": \"encoded\", \"Paid\": { \"Material\": \"scandatabanks\", \"Material_Localised\": \"Classified Scan Databanks\", \"Category\": \"Encoded\", \"Quantity\": 6 }, \"Received\": { \"Material\": \"encodedscandata\", \"Material_Localised\": \"Divergent Scan Data\", \"Quantity\": 1 } }","title":"MaterialTrade"},{"location":"station-services/#missionabandoned","text":"When Written: when a mission has been abandoned Parameters: Name: name of mission MissionID Fine: (if relevant) Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"MissionAbandoned\", \"Name\": \"Mission_Collect_name\", \"MissionID\": 65343025 }","title":"MissionAbandoned"},{"location":"station-services/#missionaccepted","text":"When Written: when starting a mission Parameters: Name: name of mission LocalisedName: the mission name as displayed to the user Faction: faction offering mission MissionID Influence: effect on influence (None/Low/Med/High) Reputation: effect on reputation (None/Low/Med/High) Reward: expected cash reward Wing: bool Optional Parameters (depending on mission type) Commodity: commodity type Count: number required / to deliver Donation: contracted donation (as string) (for altruism missions) Donated: actual donation (as int) Target: name of target TargetType: type of target TargetFaction: target's faction KillCount: number of targets Expiry: mission expiry time, in ISO 8601 DestinationSystem DestinationStation DestinationSettlement NewDestinationSystem (if it has been redirected) NewDestinationStation (if redirected) PassengerCount PassengerVIPs: bool PassengerWanted: bool PassengerType: eg Tourist, Soldier, Explorer,... Examples: { \"timestamp\": \"2018-02-28 T12 : 06 : 37 Z \", \" event \": \" MissionAccepted \", \" Faction \": \" Official i Bootis Liberty Party \", \" Name \": \" Mission_DeliveryWing_Agriculture \", \" LocalisedName \": \" Agricultural supply run : 2280 units of Tea \", \" Commodity \": \" $ Tea_Name ; \", \"Commodity_Localised\": \"Tea\", \"Count\": 2280, \"TargetFaction\": \"Ovid Vision &amp ; Co\", \"DestinationSystem\": \"Ovid\", \"DestinationStation\": \"Shriver Platform\", \"Expiry\": \"2018-03-01 T12 : 05 : 53 Z \", \" Wing \": true, \" Influence \": \" Med \", \" Reputation \": \" Med \", \" Reward \": 2686155, \" MissionID \" : 65393626 }","title":"MissionAccepted"},{"location":"station-services/#missioncompleted","text":"When Written: when a mission is completed Parameters: Name: mission type Faction: faction name MissionID Optional parameters (depending on mission type) Commodity Count Target TargetType TargetFaction DestinationSystem DestinationStation DestinationSettlement Reward: value of reward Donation: contracted donation (as string) (for altruism missions) Donated: actual donation (as int) PermitsAwarded:[] (names of any permits awarded, as a JSON array) CommodityReward:[] (names and counts of any commodity rewards) MaterialsReward:[] ( name, category and count) FactionEffects: array of records Faction Effects: array of Effect, Effect_Localised and Trend value pairs Influence: array of SystemAddress, Trend and Influence values Reputation ReputationTrend TrendValue can be UpGood, UpBad, DownGood, or DownBad Reputation and _Influence _are a set of + indicators (eg \"+++\") Example: { \"timestamp\": \"2018-12-19 T21 : 41 : 09 Z \", \" event \": \" MissionCompleted \", \" Faction \": \" Inara Nexus \", \" Name \": \" Mission_Courier_Elections_name \", \" MissionID \": 442511682, \" TargetFaction \": \" Tougeir Blue Clan \", \" DestinationSystem \": \" Tougeir \", \" DestinationStation \": \" Janes Dock \", \" Reward \": 10000, \" FactionEffects \": [ { \"Faction\" : \"Tougeir Blue Clan\" , \"Effects\" : [ { \"Effect\" : \"$MISSIONUTIL_Interaction_Summary_EP_up;\" , \"Effect_Localised\" : \"The economic status of $#MinorFaction; has improved in the $#System; system.\" , \"Trend\" : \"UpGood\" } ] , \" Influence \": [ { \"SystemAddress\" : 5067927397769 , \"Trend\" : \"UpGood\" , \"Influence\" : \"++++\" } ] , \" ReputationTrend \": \" UpGood \", \" Reputation \": \"\" }, { \" Faction \": \" Inara Nexus \", \" Effects \": [ { \"Effect\" : \"$MISSIONUTIL_Interaction_Summary_EP_up;\" , \"Effect_Localised\" : \"The economic status of $#MinorFaction; has improved in the $#System; system.\" , \"Trend\" : \"UpGood\" } ] , \" Influence \": [] , \" ReputationTrend \": \" UpGood \", \" Reputation \": \" + \" } ] } Example of MaterialsReward: ... \"MaterialsReward\":[ { \"Name\":\"DisruptedWakeEchoes\", \"Name_Localised\":\"Atypical Disrupted Wake Echoes\", \"Category\":\"$MICRORESOURCE_CATEGORY_Encoded;\", \"Category_Localised\":\"Encoded\", \"Count\":4 } ] ...","title":"MissionCompleted"},{"location":"station-services/#missionfailed","text":"When Written: when a mission has failed Parameters: Name: name of mission MissionID Fine: (if relevant)","title":"MissionFailed"},{"location":"station-services/#missionredirected","text":"When written: when a mission is updated with a new destination Parameters MissionID Name NewDestinationStation OldDestinationStation NewDestinationSystem OldDestinationSystem Example: { \"timestamp\": \"2017-08-01T09:04:07Z\", \"event\": \"MissionRedirected\", \"MissionID\": 65367315, \"NewDestinationStation\": \"Metcalf Orbital\", \"OldDestinationStation\": \"Cuffey Orbital\", \"NewDestinationSystem\": \"Cemiess\", \"OldDestinationSystem\": \"Vequess\" }","title":"MissionRedirected"},{"location":"station-services/#modulebuy","text":"When Written: when buying a module in outfitting Parameters: MarketID Slot: the outfitting slot BuyItem: the module being purchased BuyPrice: price paid Ship: the players ship ShipID If existing module is stored: StoredItem: item being stored If replacing an existing module: SellItem: item being sold SellPrice: sale price Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"ModuleBuy\", \"Slot\": \"MediumHardpoint2\", \"SellItem\": \"hpt_pulselaser_fixed_medium\", \"SellPrice\": 0, \"BuyItem\": \"hpt_multicannon_gimbal_medium\", \"BuyPrice\": 50018, \"Ship\": \"cobramkiii\", \"ShipID\": 1 }","title":"ModuleBuy"},{"location":"station-services/#moduleretrieve","text":"When written: when fetching a previously stored module Parameters: MarketID Slot Ship ShipID RetrievedItem Hot EngineerModifications: name of modification blueprint, if any Level Quality SwapOutItem (if slot was not empty) Cost","title":"ModuleRetrieve"},{"location":"station-services/#modulesell","text":"When Written: when selling a module in outfitting Parameters: MarketID Slot SellItem SellPrice Ship ShipID Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"ModuleSell\", \"Slot\": \"Slot06_Size2\", \"SellItem\": \"int_cargorack_size1_class1\", \"SellPrice\": 877, \"Ship\": \"asp\", \"ShipID\": 1 }","title":"ModuleSell"},{"location":"station-services/#modulesellremote","text":"When written: when selling a module in storage at another station Parameters: StorageSlot SellItem ServerId SellPrice Ship ShipId","title":"ModuleSellRemote"},{"location":"station-services/#modulestore","text":"When written: when storing a module in Outfitting Parameters: MarketID Slot Ship ShipID StoredItem Hot EngineerModifications: name of modification blueprint, if any Level Quality ReplacementItem (if a core module) Cost (if any) Example: { \"timestamp\": \"2018-01-31 T10 : 55 : 15 Z \", \" event \": \" ModuleStore \", \" MarketID \": 128676487, \" Slot \": \" TinyHardpoint1 \", \" StoredItem \": \" $ hpt_shieldbooster_size0_class3_name ; \", \"StoredItem_Localised\": \"Shield Booster\", \"Ship\": \"empire_courier\", \"ShipID\": 11, \"Hot\": false, \"EngineerModifications\": \"ShieldBooster_Explosive\", \"Level\": 1, \"Quality\": 0.5271 }","title":"ModuleStore"},{"location":"station-services/#moduleswap","text":"When Written: when moving a module to a different slot on the ship Parameters: MarketID FromSlot ToSlot FromItem ToItem Ship ShipID Examples: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"ModuleSwap\", \"FromSlot\": \"MediumHardpoint1\", \"ToSlot\": \"MediumHardpoint2\", \"FromItem\": \"hpt_pulselaser_fixed_medium\", \"ToItem\": \"hpt_multicannon_gimbal_medium\", \"Ship\": \"cobramkiii\", \"ShipID\": 1 } { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"ModuleSwap\", \"FromSlot\": \"SmallHardpoint2\", \"ToSlot\": \"SmallHardpoint1\", \"FromItem\": \"hpt_pulselaserburst_fixed_small_scatter\", \"ToItem\": \"Null\", \"Ship\": \"cobramkiii\", \"ShipID\": 1 }","title":"ModuleSwap"},{"location":"station-services/#outfitting","text":"Written when accessing the outfitting menu The full parts pricelist is written to a separate file Outfitting.json Parameters: MarketID StationName StarSystem The separate file also contains Horizons: bool Items: array of objects id Name BuyPrice Example: (in journal) { \"timestamp\": \"2017-10-05T10:11:38Z\", \"event\": \"Outfitting\", \"MarketID\": 128678535, \"StationName\": \"Black Hide\", \"StarSystem\": \"Wyrd\" } (In separate file) { \"timestamp\":\"2017-10-05T10:11:38Z\", \"event\":\"Outfitting\", \"MarketID\":128678535, \"StationName\":\"Black Hide\", \"StarSystem\":\"Wyrd\", \"Horizons\":true, \"Items\":[ { \"id\":128049382, \"Name\":\"hpt_pulselaser_fixed_medium\", \"BuyPrice\":16731 }, { \"id\":128049383, \"Name\":\"hpt_pulselaser_fixed_large\", \"BuyPrice\":66924 }, { \"id\":128049385, \"Name\":\"hpt_pulselaser_gimbal_small\", \"BuyPrice\":6275 }, { \"id\":128049386, \"Name\":\"hpt_pulselaser_gimbal_medium\", \"BuyPrice\":33653 }, { \"id\":128049388, \"Name\":\"hpt_pulselaser_turret_small\", \"BuyPrice\":24717 }, { \"id\":128681995, \"Name\":\"hpt_pulselaser_gimbal_huge\", \"BuyPrice\":834269 }, ] }","title":"Outfitting"},{"location":"station-services/#paybounties","text":"When written: when paying off bounties Parameters: Amount: (total amount paid , including any broker fee) BrokerPercentage (present if paid via a Broker) AllFines: bool Faction ShipID Example: { \"timestamp\": \"2018-03-19 T10 : 25 : 10 Z \", \" event \": \" PayBounties \", \" Amount \": 400, \" Faction \": \" $ faction_Federation ; \", \"Faction_Localised\": \"Federation\", \"ShipID\": 9, \"BrokerPercentage\": 25 }","title":"PayBounties"},{"location":"station-services/#payfines","text":"When Written: when paying fines Parameters: Amount: (total amount paid , including any broker fee) BrokerPercentage (present if paid via a Broker) AllFines: bool Faction: (if paying off an individual faction's fines) ShipID Example: { \"timestamp\": \"2018-03-19T10:24:21Z\", \"event\": \"PayFines\", \"Amount\": 250, \"AllFines\": false, \"Faction\": \"Batz Transport Commodities\", \"ShipID\": 9 }","title":"PayFines"},{"location":"station-services/#paylegacyfines","text":"When Written: when paying legacy fines (This is now obsolete, as of v3.0) Parameters: Amount (total amount paid, including any broker fee) BrokerPercentage (present if paid through a broker)","title":"PayLegacyFines"},{"location":"station-services/#redeemvoucher","text":"When Written: when claiming payment for combat bounties and bonds Parameters: Type: (CombatBond/Bounty/Trade/Settlement/Scannable) Amount: (Net amount received, after any broker fee) Faction: name of faction (for types other than Bounty) BrokerPercentage (if redeemed through a broker) Factions: array of faction/amount pairs (for Type=Bounty) Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"RedeemVoucher\", \"Type\": \"bounty\", \"Factions\": [ { \"Faction\": \"Ed's 38\", \"Amount\": 1000 }, { \"Faction\": \"Zac's Lads\", \"Amount\": 2000 } ] }","title":"RedeemVoucher"},{"location":"station-services/#refuelall","text":"When Written: when refuelling (full tank) Parameters: Cost: cost of fuel Amount: tons of fuel purchased Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"RefuelAll\", \"Cost\": 317, \"Amount\": 6.322901 }","title":"RefuelAll"},{"location":"station-services/#refuelpartial","text":"When Written: when refuelling (10%) Parameters: Cost: cost of fuel Amount: tons of fuel purchased Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"RefuelPartial\", \"Cost\": 83, \"Amount\": 1.649 }","title":"RefuelPartial"},{"location":"station-services/#repair","text":"When Written: when repairing the ship Parameters: Item: all, wear, hull, paint, or name of module Cost: cost of repair Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"Repair\", \"Item\": \"int_powerplant_size3_class5\", \"Cost\": 1100 } Note when repairing on a FleetCarrier, you can now get a list of the modules repaired: { \"timestamp\": \"2020-03-31 T13 : 39 : 42 Z \", \" event \": \" Repair \", \" Items \": [ \"$hpt_dumbfiremissilerack_fixed_large_name;\" , \"$hpt_beamlaser_gimbal_medium_name;\" , \"$hpt_railgun_fixed_medium_name;\" , \"$hpt_beamlaser_gimbal_medium_name;\" , \"$hpt_dumbfiremissilerack_fixed_large_name;\" ] , \" Cost \" : 34590 }","title":"Repair"},{"location":"station-services/#repairall","text":"When written: when repairing everything Parameters: Cost","title":"RepairAll"},{"location":"station-services/#restockvehicle","text":"When Written: when purchasing an SRV or Fighter Parameters: Type: type of vehicle being purchased (SRV or fighter model) Loadout: variant Cost: purchase cost Count: number of vehicles purchased Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"RestockVehicle\", \"Type\": \"SRV\", \"Loadout\": \"starter\", \"Cost\": 1030, \"Count\": 1 }","title":"RestockVehicle"},{"location":"station-services/#scientificresearch","text":"When written: when contributing materials to a \"research\" community goal Parameters: MarketID Name: material name Category Count","title":"ScientificResearch"},{"location":"station-services/#searchandrescue","text":"When written: when delivering items to a Search and Rescue contact Parameters: MarketID Name Count Reward","title":"SearchAndRescue"},{"location":"station-services/#selldrones","text":"When Written: when selling unwanted drones back to the market Parameters: Type Count SellPrice TotalSale Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"SellDrones\", \"Type\": \"Drones\", \"Count\": 1, \"SellPrice\": 91, \"TotalSale\": 91 }","title":"SellDrones"},{"location":"station-services/#sellshiponrebuy","text":"When written: When selling a stored ship to raise funds when on insurance/rebuy screen Parameters: ShipType System SellShipId ShipPrice Example: { \"timestamp\": \"2017-07-20T08:56:39Z\", \"event\": \"SellShipOnRebuy\", \"ShipType\": \"Dolphin\", \"System\": \"Shinrarta Dezhra\", \"SellShipId\": 4, \"ShipPrice\": 4110183 }","title":"SellShipOnRebuy"},{"location":"station-services/#setusershipname","text":"When written: when assigning a name to the ship in Starport Services Parameters: Ship: Ship model (eg CobraMkIII) ShipID: player's ship ID number UserShipName: selected name UserShipId: selected ship id Example: { \"timestamp\": \"2017-01-24T10:42:38Z\", \"event\": \"SetUserShipName\", \"Ship\": \"cobramkiii\", \"ShipID\": 2, \"UserShipName\": \"Enterprise\", \"UserShipId\": \"NCC 1701\" }","title":"SetUserShipName"},{"location":"station-services/#shipyard","text":"When written: when accessing shipyard in a station Parameters: MarketID StationName StarSystem The full price list is written to a separate file, in the same folder as the journal, Shipyard.json Horizons: bool AllowCobraMkIV: bool Pricelist: array of objects ShipType ShipPrice Example: in the Journal: { \"timestamp\": \"2017-10-04T10:01:38Z\", \"event\": \"Shipyard\", \"MarketID\": 128122104, \"StationName\": \"Seven Holm\", \"StarSystem\": \"Tamor\" } In the separate shipyard.json file: { \"timestamp\":\"2017-10-04T10:01:38Z\", \"event\":\"Shipyard\", \"MarketID\": 128122104, \"StationName\":\"Seven Holm\", \"StarSystem\":\"Tamor\", \"Horizons\":true, \"AllowCobraMkIV\":true, \"PriceList\":[ { \"id\":128049249, \"ShipType\":\"sidewinder\", \"ShipPrice\":24336 }, { \"id\":128049255, \"ShipType\":\"eagle\", \"ShipPrice\":34071 }, { \"id\":128049261, \"ShipType\":\"hauler\", \"ShipPrice\":40094 }, { \"id\":128049267, \"ShipType\":\"adder\", \"ShipPrice\":66779 }, { \"id\":128672138, \"ShipType\":\"empire_eagle\", \"ShipType_Localised\":\"Imperial Eagle\", \"ShipPrice\":84283 }, ] }","title":"Shipyard"},{"location":"station-services/#shipyardbuy","text":"When Written: when buying a new ship in the shipyard Parameters: MarketID ShipType: ship being purchased ShipPrice: purchase cost StoreOldShip: (if storing old ship) ship type being stored StoreShipID SellOldShip: (if selling current ship) ship type being sold SellShipID SellPrice: (if selling current ship) ship sale price Note: the new ship's ShipID will be logged in a separate event after the purchase Example: { \"timestamp\": \"2016-07-21T14:36:38Z\", \"event\": \"ShipyardBuy\", \"ShipType\": \"hauler\", \"ShipPrice\": 46262, \"StoreOldShip\": \"SideWinder\", \"StoreShipID\": 2 }","title":"ShipyardBuy"},{"location":"station-services/#shipyardnew","text":"When written: after a new ship has been purchased Parameters: ShipType NewShipID Example: { \"timestamp\": \"2016-07-21T14:36:38Z\", \"event\": \"ShipyardNew\", \"ShipType\": \"hauler\", \"NewShipID\": 4 }","title":"ShipyardNew"},{"location":"station-services/#shipyardsell","text":"When Written: when selling a ship stored in the shipyard Parameters: MarketID ShipType: type of ship being sold SellShipID ShipPrice: sale price System: (if ship is in another system) name of system Example: { \"timestamp\": \"2016-07-21T15:12:19Z\", \"event\": \"ShipyardSell\", \"ShipType\": \"Adder\", \"SellShipID\": 6, \"ShipPrice\": 79027, \"System\": \"Eranin\" }","title":"ShipyardSell"},{"location":"station-services/#shipyardtransfer","text":"When Written: when requesting a ship at another station be transported to this station Parameters: MarketID ShipType: type of ship ShipID System: where it is ShipMarketID Distance: how far away TransferPrice: cost of transfer TransferTime: time taken in seconds Example: { \"timestamp\": \"2016-07-21T15:19:49Z\", \"event\": \"ShipyardTransfer\", \"ShipType\": \"SideWinder\", \"ShipID\": 7, \"System\": \"Eranin\", \"Distance\": 85.639145, \"TransferPrice\": 580 }","title":"ShipyardTransfer"},{"location":"station-services/#shipyardswap","text":"When Written: when switching to another ship already stored at this station Parameters: MarketID ShipType: type of ship being switched to ShipID StoreOldShip: (if storing old ship) type of ship being stored StoreShipID SellOldShip: (if selling old ship) type of ship being sold SellShipID Example { \"timestamp\": \"2016-07-21T14:36:06Z\", \"event\": \"ShipyardSwap\", \"ShipType\": \"sidewinder\", \"ShipID\": 10, \"StoreOldShip\": \"Asp\", \"StoreShipID\": 2 }","title":"ShipyardSwap"},{"location":"station-services/#storedmodules","text":"When written: when first visiting Outfitting, and when the set of stored modules has changed Parameters: MarketID: current market Items: (array of objects) Name StarSystem MarketID: where the module is stored StorageSlot TransferCost TransferTime Hot EngineerModifications: (recipe name) Level Quality InTransit:bool \"EngineerModifications\", \"Level\" and \"Quality\" only appear for an engineered module The InTransit value only appears (with value true) if the module is being transferred. In this case, the system, market, transfer cost and transfer time are not written. { \"timestamp\":\"2018-01-31 T10 : 55 : 16 Z \", \" event \":\" StoredModules \", \" MarketID \":128676487, \" StationName \":\" Farseer Inc \", \" StarSystem \":\" Deciat \", \" Items \" : [ { \"Name\" : \"$int_engine_size3_class5_name;\" , \"Name_Localised\" : \"Thrusters\" , \"StorageSlot\" : 57 , \"StarSystem\" : \"Deciat\" , \"MarketID\" : 128676487 , \"TransferCost\" : 0 , \"TransferTime\" : 0 , \"BuyPrice\" : 495215 , \"Hot\" : false , \"EngineerModifications\" : \"Engine_Dirty\" , \"Level\" : 1 , \"Quality\" : 0.000000 }, { \"Name\" : \"$int_hyperdrive_size6_class5_name;\" , \"Name_Localised\" : \"FSD\" , \"StorageSlot\" : 59 , \"StarSystem\" : \"Shinrarta Dezhra\" , \"MarketID\" : 128666762 , \"TransferCost\" : 79680 , \"TransferTime\" : 1317 , \"BuyPrice\" : 12620035 , \"Hot\" : false , \"EngineerModifications\" : \"FSD_LongRange\" , \"Level\" : 5 , \"Quality\" : 0.000000 } ] }","title":"StoredModules"},{"location":"station-services/#storedships","text":"When written: when visiting shipyard Parameters: MarketID StationName StarSystem ShipsHere: (array of objects) ShipID ShipType Name (if named) Value Hot ShipsRemote: (array of objects) ShipID ShipType Name (if named) Value Hot If the ship is in transit: InTransit: true If the ship is not in transit: StarSystem ShipMarketID TransferPrice TransferType Example: { \"timestamp\": \"2017-10-04T10:07:21Z\", \"event\": \"StoredShips\", \"StationName\": \"Jameson Memorial\", \"StarSystem\": \"Shinrarta Dezhra\", \"ShipsHere\": [ { \"ShipID\": 64, \"ShipType\": \"sidewinder\", \"Value\": 567962 }, { \"ShipID\": 20, \"ShipType\": \"empire_eagle\", \"Value\": 6373956 } ], \"ShipsRemote\": [ { \"ShipID\": 0, \"ShipType\": \"CobraMkIII\", \"StarSystem\": \"Beta-1 Tucanae\", \"TransferPrice\": 3777, \"TransferTime\": 1590, \"Value\": 9464239 } ] }","title":"StoredShips"},{"location":"station-services/#technologybroker","text":"When written: when using the Technology Broker to unlock new purchasable technology Parameters: BrokerType MarketID ItemsUnlocked: the name(s) of the new item unlocked (available in Outfitting) Commodities: Name: name of item Count: number of items used Materials: Name Count Category Example: { \"timestamp\": \"2018-03-02T11:28:44Z\", \"event\": \"TechnologyBroker\", \"BrokerType\": \"Human\", \"MarketID\": 128151032, \"ItemsUnlocked\": [ { \"Name\": \"Hpt_PlasmaShockCannon_Fixed_Medium\", \"Name_Localised\": \"Shock Cannon\" } ], \"Commodities\": [ { \"Name\": \"iondistributor\", \"Name_Localised\": \"Ion Distributor\", \"Count\": 6 } ], \"Materials\": [ { \"Name\": \"vanadium\", \"Count\": 30, \"Category\": \"Raw\" }, { \"Name\": \"tungsten\", \"Count\": 30, \"Category\": \"Raw\" }, { \"Name\": \"rhenium\", \"Count\": 36, \"Category\": \"Raw\" }, { \"Name\": \"technetium\", \"Count\": 30, \"Category\": \"Raw\" } ] }","title":"TechnologyBroker"},{"location":"station-services/#clearimpound","text":"When written: When clearing the impound off of one of your ships. Parameters: ShipType ShipID ShipMarketID: The market the ship is stored at MarketID: Your current market Example: { \"timestamp\":\"2022-11-18T16:19:48Z\", \"event\":\"ClearImpound\", \"ShipType\":\"asp\", \"ShipType_Localised\":\"Asp Explorer\", \"ShipID\":10, \"ShipMarketID\":128833431, \"MarketID\":128833431 }","title":"ClearImpound"},{"location":"status-file/","text":"Status File \u00b6 In addition to the journal file, which is written incrementally, there is now (in v3.0) a new file Status.json which is updated every few seconds, with some information about the current state of the game. This has a similar format to a line in the journal, but the whole file is replaced every time. It has a timestamp like the journal, and \"event\":\"Status\" Parameters: Flags: multiple flags encoded as bits in an integer (see below) Flags2: more flags, mainly for when on foot Pips: an array of 3 integers representing energy distribution (in half-pips) Firegroup: the currently selected firegroup number GuiFocus: the selected GUI screen Fuel: { FuelMain, FuelReservoir} \u2013 both mass in tons Cargo: mass in tons LegalState Latitude (if on or near a planet) Altitude Longitude Heading BodyName PlanetRadius Balance Destination: System Body Name LegalState: one of: \"Clean\" \"IllegalCargo\" \"Speeding\" \"Wanted\" \"Hostile\" \"PassengerWanted\" \"Warrant\" Additional values when on foot: Oxygen: (0.0 .. 1.0) Health: (0.0 .. 1.0) Temperature (kelvin) SelectedWeapon: name Gravity: (relative to 1G) Flags: Bit Value Hex Meaning 0 1 0000 0001 Docked, (on a landing pad) 1 2 0000 0002 Landed, (on planet surface) 2 4 0000 0004 Landing Gear Down 3 8 0000 0008 Shields Up 4 16 0000 0010 Supercruise 5 32 0000 0020 FlightAssist Off 6 64 0000 0040 Hardpoints Deployed 7 128 0000 0080 In Wing 8 256 0000 0100 LightsOn 9 512 0000 0200 Cargo Scoop Deployed 10 1024 0000 0400 Silent Running, 11 2048 0000 0800 Scooping Fuel 12 4096 0000 1000 Srv Handbrake 13 8192 0000 2000 Srv using Turret view 14 16384 0000 4000 Srv Turret retracted (close to ship) 15 32768 0000 8000 Srv DriveAssist 16 65536 0001 0000 Fsd MassLocked 17 131072 0002 0000 Fsd Charging 18 262144 0004 0000 Fsd Cooldown 19 524288 0008 0000 Low Fuel ( < 25% ) 20 1048576 0010 0000 Over Heating ( > 100% ) 21 2097152 0020 0000 Has Lat Long 22 4194304 0040 0000 IsInDanger 23 8388608 0080 0000 Being Interdicted 24 16777216 0100 0000 In MainShip 25 33554432 0200 0000 In Fighter 26 67108864 0400 0000 In SRV 27 134217728 0800 0000 Hud in Analysis mode 28 268435456 1000 0000 Night Vision 29 536870912 2000 0000 Altitude from Average radius 30\u202d 1073741824\u202c 4000 0000 fsdJump 31 2147483648 8000 0000 srvHighBeam Flags2 bits: Bit Value Hex Meaning 0 1 0001 OnFoot 1 2 0002 InTaxi (or dropship/shuttle) 2 4 0004 InMulticrew (ie in someone else's ship) 3 8 0008 OnFootInStation 4 16 0010 OnFootOnPlanet 5 32 0020 AimDownSight 6 64 0040 LowOxygen 7 128 0080 LowHealth 8 256 0100 Cold 9 512 0200 Hot 10 1024 0400 VeryCold 11 2048 0800 VeryHot 12 4096 1000 Glide Mode 13 8192 2000 OnFootInHangar 14 16384 4000 OnFootSocialSpace 15 32768 8000 OnFootExterior 16 65536 0001 0000 BreathableAtmosphere 17 131072 0002 0000 Telepresence Multicrew 18 262144 0004 0000 Physical Multicrew 19 524288 0008 0000 Fsd hyperdrive charging Examples: { \"timestamp\": \"2017-12-07T10:31:37Z\", \"event\": \"Status\", \"Flags\": 16842765, \"Pips\": [ 2, 8, 2 ], \"FireGroup\": 0, \"Fuel\": { \"FuelMain\": 15.146626, \"FuelReservoir\": 0.382796 }, \"GuiFocus\": 5 } { \"timestamp\": \"2017-12-07T12:03:14Z\", \"event\": \"Status\", \"Flags\": 18874376, \"Pips\": [ 4, 8, 0 ], \"FireGroup\": 0, \"Fuel\": { \"FuelMain\": 15.146626, \"FuelReservoir\": 0.382796 }, \"GuiFocus\": 0, \"Latitude\": -28.584963, \"Longitude\": 6.826313, \"Heading\": 109, \"Altitude\": 404 } In the first example above 16842765 (0x0101000d) has flags 24, 16, 3, 2, 0: In main ship, Mass locked, Shields up, Landing gear down, Docked GuiFocus values: Value Description 0 NoFocus 1 InternalPanel (right hand side) 2 ExternalPanel (left hand side) 3 CommsPanel (top) 4 RolePanel (bottom) 5 StationServices 6 GalaxyMap 7 SystemMap 8 Orrery 9 FSS mode 10 SAA mode 11 Codex The latitude or longitude need to change by 0.02 degrees to trigger an update when flying, or by 0.0005 degrees when in the SRV If the bit29 is set, the altitude value is based on the planet's average radius (used at higher altitudes) If the bit29 is not set, the Altitude value is based on a raycast to the actual surface below the ship/srv","title":"Status File"},{"location":"status-file/#status_file","text":"In addition to the journal file, which is written incrementally, there is now (in v3.0) a new file Status.json which is updated every few seconds, with some information about the current state of the game. This has a similar format to a line in the journal, but the whole file is replaced every time. It has a timestamp like the journal, and \"event\":\"Status\" Parameters: Flags: multiple flags encoded as bits in an integer (see below) Flags2: more flags, mainly for when on foot Pips: an array of 3 integers representing energy distribution (in half-pips) Firegroup: the currently selected firegroup number GuiFocus: the selected GUI screen Fuel: { FuelMain, FuelReservoir} \u2013 both mass in tons Cargo: mass in tons LegalState Latitude (if on or near a planet) Altitude Longitude Heading BodyName PlanetRadius Balance Destination: System Body Name LegalState: one of: \"Clean\" \"IllegalCargo\" \"Speeding\" \"Wanted\" \"Hostile\" \"PassengerWanted\" \"Warrant\" Additional values when on foot: Oxygen: (0.0 .. 1.0) Health: (0.0 .. 1.0) Temperature (kelvin) SelectedWeapon: name Gravity: (relative to 1G) Flags: Bit Value Hex Meaning 0 1 0000 0001 Docked, (on a landing pad) 1 2 0000 0002 Landed, (on planet surface) 2 4 0000 0004 Landing Gear Down 3 8 0000 0008 Shields Up 4 16 0000 0010 Supercruise 5 32 0000 0020 FlightAssist Off 6 64 0000 0040 Hardpoints Deployed 7 128 0000 0080 In Wing 8 256 0000 0100 LightsOn 9 512 0000 0200 Cargo Scoop Deployed 10 1024 0000 0400 Silent Running, 11 2048 0000 0800 Scooping Fuel 12 4096 0000 1000 Srv Handbrake 13 8192 0000 2000 Srv using Turret view 14 16384 0000 4000 Srv Turret retracted (close to ship) 15 32768 0000 8000 Srv DriveAssist 16 65536 0001 0000 Fsd MassLocked 17 131072 0002 0000 Fsd Charging 18 262144 0004 0000 Fsd Cooldown 19 524288 0008 0000 Low Fuel ( < 25% ) 20 1048576 0010 0000 Over Heating ( > 100% ) 21 2097152 0020 0000 Has Lat Long 22 4194304 0040 0000 IsInDanger 23 8388608 0080 0000 Being Interdicted 24 16777216 0100 0000 In MainShip 25 33554432 0200 0000 In Fighter 26 67108864 0400 0000 In SRV 27 134217728 0800 0000 Hud in Analysis mode 28 268435456 1000 0000 Night Vision 29 536870912 2000 0000 Altitude from Average radius 30\u202d 1073741824\u202c 4000 0000 fsdJump 31 2147483648 8000 0000 srvHighBeam Flags2 bits: Bit Value Hex Meaning 0 1 0001 OnFoot 1 2 0002 InTaxi (or dropship/shuttle) 2 4 0004 InMulticrew (ie in someone else's ship) 3 8 0008 OnFootInStation 4 16 0010 OnFootOnPlanet 5 32 0020 AimDownSight 6 64 0040 LowOxygen 7 128 0080 LowHealth 8 256 0100 Cold 9 512 0200 Hot 10 1024 0400 VeryCold 11 2048 0800 VeryHot 12 4096 1000 Glide Mode 13 8192 2000 OnFootInHangar 14 16384 4000 OnFootSocialSpace 15 32768 8000 OnFootExterior 16 65536 0001 0000 BreathableAtmosphere 17 131072 0002 0000 Telepresence Multicrew 18 262144 0004 0000 Physical Multicrew 19 524288 0008 0000 Fsd hyperdrive charging Examples: { \"timestamp\": \"2017-12-07T10:31:37Z\", \"event\": \"Status\", \"Flags\": 16842765, \"Pips\": [ 2, 8, 2 ], \"FireGroup\": 0, \"Fuel\": { \"FuelMain\": 15.146626, \"FuelReservoir\": 0.382796 }, \"GuiFocus\": 5 } { \"timestamp\": \"2017-12-07T12:03:14Z\", \"event\": \"Status\", \"Flags\": 18874376, \"Pips\": [ 4, 8, 0 ], \"FireGroup\": 0, \"Fuel\": { \"FuelMain\": 15.146626, \"FuelReservoir\": 0.382796 }, \"GuiFocus\": 0, \"Latitude\": -28.584963, \"Longitude\": 6.826313, \"Heading\": 109, \"Altitude\": 404 } In the first example above 16842765 (0x0101000d) has flags 24, 16, 3, 2, 0: In main ship, Mass locked, Shields up, Landing gear down, Docked GuiFocus values: Value Description 0 NoFocus 1 InternalPanel (right hand side) 2 ExternalPanel (left hand side) 3 CommsPanel (top) 4 RolePanel (bottom) 5 StationServices 6 GalaxyMap 7 SystemMap 8 Orrery 9 FSS mode 10 SAA mode 11 Codex The latitude or longitude need to change by 0.02 degrees to trigger an update when flying, or by 0.0005 degrees when in the SRV If the bit29 is set, the altitude value is based on the planet's average radius (used at higher altitudes) If the bit29 is not set, the Altitude value is based on a raycast to the actual surface below the ship/srv","title":"Status File"},{"location":"trade/","text":"Trade \u00b6 AsteroidCracked \u00b6 When written: when the player has broken up a 'Motherlode' asteroid for mining Parameters: Body: name of nearest body BuyTradeData \u00b6 When Written: when buying trade data in the galaxy map Parameters: System: star system requested Cost: cost of data Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"BuyTradeData\", \"System\": \"i Bootis\", \"Cost\": 100 } CollectCargo \u00b6 When Written: when scooping cargo from space or planet surface Parameters: Type: cargo type Stolen: whether stolen goods MissionID; (if relevant) Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"CollectCargo\", \"Type\": \"agriculturalmedicines\", \"Stolen\": false } EjectCargo \u00b6 When Written: Parameters: Type: cargo type Count: number of units MissionID: (if relevant) Abandoned: whether 'abandoned' If the cargo is related to powerplay delivery from outlying systems back to the centre : PowerplayOrigin: starsystem name Examples: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"EjectCargo\", \"Type\": \"tobacco\", \"Count\": 1, \"Abandoned\": true } { \"timestamp\": \"2016-09-21T14:18:23Z\", \"event\": \"EjectCargo\", \"Type\": \"alliancelegaslativerecords\", \"Count\": 2, \"Abandoned\": true, \"PowerplayOrigin\": \"Tau Bootis\" } MarketBuy \u00b6 When Written: when purchasing goods in the market Parameters: MarketID Type: cargo type Count: number of units BuyPrice: cost per unit TotalCost: total cost Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"MarketBuy\", \"Type\": \"foodcartridges\", \"Count\": 10, \"BuyPrice\": 39, \"TotalCost\": 390 } MarketSell \u00b6 When Written: when selling goods in the market Parameters: MarketID Type: cargo type Count: number of units SellPrice: price per unit TotalSale: total sale value AvgPricePaid: average price paid IllegalGoods: (not always present) whether goods are illegal here StolenGoods: (not always present) whether goods were stolen BlackMarket: (not always present) whether selling in a black market Examples: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"MarketSell\", \"Type\": \"agriculturalmedicines\", \"Count\": 3, \"SellPrice\": 1360, \"TotalSale\": 4080, \"AvgPricePaid\": 304 } { \"event\": \"MarketSell\", \"Type\": \"mineraloil\", \"Count\": 9, \"SellPrice\": 72, \"TotalSale\": 648, \"AvgPricePaid\": 0, \"StolenGoods\": true, \"BlackMarket\": true } MiningRefined \u00b6 When Written: when mining fragments are converted unto a unit of cargo by refinery Parameters: Type: cargo type Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"MiningRefined\", \"Type\": \"Gold\" }","title":"Trade"},{"location":"trade/#trade","text":"","title":"Trade"},{"location":"trade/#asteroidcracked","text":"When written: when the player has broken up a 'Motherlode' asteroid for mining Parameters: Body: name of nearest body","title":"AsteroidCracked"},{"location":"trade/#buytradedata","text":"When Written: when buying trade data in the galaxy map Parameters: System: star system requested Cost: cost of data Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"BuyTradeData\", \"System\": \"i Bootis\", \"Cost\": 100 }","title":"BuyTradeData"},{"location":"trade/#collectcargo","text":"When Written: when scooping cargo from space or planet surface Parameters: Type: cargo type Stolen: whether stolen goods MissionID; (if relevant) Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"CollectCargo\", \"Type\": \"agriculturalmedicines\", \"Stolen\": false }","title":"CollectCargo"},{"location":"trade/#ejectcargo","text":"When Written: Parameters: Type: cargo type Count: number of units MissionID: (if relevant) Abandoned: whether 'abandoned' If the cargo is related to powerplay delivery from outlying systems back to the centre : PowerplayOrigin: starsystem name Examples: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"EjectCargo\", \"Type\": \"tobacco\", \"Count\": 1, \"Abandoned\": true } { \"timestamp\": \"2016-09-21T14:18:23Z\", \"event\": \"EjectCargo\", \"Type\": \"alliancelegaslativerecords\", \"Count\": 2, \"Abandoned\": true, \"PowerplayOrigin\": \"Tau Bootis\" }","title":"EjectCargo"},{"location":"trade/#marketbuy","text":"When Written: when purchasing goods in the market Parameters: MarketID Type: cargo type Count: number of units BuyPrice: cost per unit TotalCost: total cost Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"MarketBuy\", \"Type\": \"foodcartridges\", \"Count\": 10, \"BuyPrice\": 39, \"TotalCost\": 390 }","title":"MarketBuy"},{"location":"trade/#marketsell","text":"When Written: when selling goods in the market Parameters: MarketID Type: cargo type Count: number of units SellPrice: price per unit TotalSale: total sale value AvgPricePaid: average price paid IllegalGoods: (not always present) whether goods are illegal here StolenGoods: (not always present) whether goods were stolen BlackMarket: (not always present) whether selling in a black market Examples: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"MarketSell\", \"Type\": \"agriculturalmedicines\", \"Count\": 3, \"SellPrice\": 1360, \"TotalSale\": 4080, \"AvgPricePaid\": 304 } { \"event\": \"MarketSell\", \"Type\": \"mineraloil\", \"Count\": 9, \"SellPrice\": 72, \"TotalSale\": 648, \"AvgPricePaid\": 0, \"StolenGoods\": true, \"BlackMarket\": true }","title":"MarketSell"},{"location":"trade/#miningrefined","text":"When Written: when mining fragments are converted unto a unit of cargo by refinery Parameters: Type: cargo type Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"MiningRefined\", \"Type\": \"Gold\" }","title":"MiningRefined"},{"location":"travel/","text":"Travel \u00b6 ApproachBody \u00b6 When written: when in Supercruise, and distance from planet drops to within the 'Orbital Cruise' zone Parameters: StarSystem SystemAddress Body BodyID { \"timestamp\": \"2017-09-27T15:21:05Z\", \"event\": \"ApproachBody\", \"StarSystem\": \"Eranin\", \"Body\": \"Eranin 2\" } Docked \u00b6 When written: when landing at landing pad in a space station, outpost, or surface settlement Parameters: StationName: name of station MarketID SystemAddress StationType: type of station StarSystem: name of system CockpitBreach:true (only if landing with breached cockpit) StationFaction: station's controlling faction Name FactionState StationAllegiance StationEconomy : (station's primary economy) StationEconomies: (array of name and proportion values) StationGovernment DistFromStarLS StationServices: (Array of strings) Wanted: (only if docking when wanted locally) ActiveFine: true (if any fine is active) LandingPads: Small Medium Large StationState The 'anonymous docking' protocol comes into effect if you're either Wanted (ie have a local bounty) or have an ActiveFine Example: { \"timestamp\": \"2018-03-07 T12 : 22 : 25 Z \", \" event \": \" Docked \", \" StationName \": \" Jenner Orbital \", \" StationType \": \" Outpost \", \" StarSystem \": \" Luhman 16 \", \" SystemAddress \": 22960358574928, \" MarketID \": 3228883456, \" StationFaction \": { \" Name \": \" Union of Luhman 16 Values Party \", \" FactionState \": \" CivilWar \" }, \" StationGovernment \": \" $ government_Democracy ; \", \"StationGovernment_Localised\": \"Democracy\", \"StationAllegiance\": \"Federation\", \"StationServices\": [ \"Dock\" , \"Autodock\" , \"BlackMarket\" , \"Commodities\" , \"Contacts\" , \"Exploration\" , \"Missions\" , \"Outfitting\" , \"CrewLounge\" , \"Rearm\" , \"Refuel\" , \"Workshop\" , \"MissionsGenerated\" , \"FlightController\" , \"StationOperations\" , \"Powerplay\" , \"SearchAndRescue\" ] , \"StationEconomy\": \"$economy_Refinery ; \", \"StationEconomy_Localised\": \"Refinery\", \"StationEconomies\": [ { \"Name\" : \"$economy_Refinery;\" , \"Name_Localised\" : \"Refinery\" , \"Proportion\" : 0.76 }, { \"Name\" : \"$economy_Extraction;\" , \"Name_Localised\" : \"Extraction\" , \"Proportion\" : 0.24 } ] , \"DistFromStarLS\": 10.061876 } StationServices can include: Dock, Autodock, BlackMarket, Commodities, Contacts, Exploration, Initiatives, Missions, Outfitting,CrewLounge, Rearm, Refuel, Repair, Shipyard, Tuning, Workshop, MissionsGenerated, Facilitator, Research, FlightController, StationOperations, OnDockMission, Powerplay, SearchAndRescue, New in v3.7: shop, carriermanagement, carrierfuel, carriervendor, livery, modulepacks, voucherredemption StationState can be any of the following: UnderRepairs, Damaged, Abandoned, UnderAttack DockingCancelled \u00b6 When written: when the player cancels a docking request Parameters: StationName: name of station StationType MarketID DockingDenied \u00b6 When written: when the station denies a docking request Parameters: StationName: name of station StationType MarketID Reason: reason for denial Reasons include: NoSpace, TooLarge, Hostile, Offences, Distance, ActiveFighter, NoReason DockingGranted \u00b6 When written: when a docking request is granted Parameters: StationName: name of station StationType MarketID LandingPad: pad number DockingRequested \u00b6 When written: when the player requests docking at a station Parameters: StationName: name of station StationType MarketID LandingPads: Small Medium Large DockingTimeout \u00b6 When written: when a docking request has timed out Parameters: StationName: name of station StationType MarketID FSDJump \u00b6 When written: when jumping from one star system to another Parameters: StarSystem: name of destination starsystem SystemAddress StarPos: star position, as a Json array [x, y, z], in light years Body: star's body name JumpDist: distance jumped FuelUsed FuelLevel BoostUsed: whether FSD boost was used SystemFaction: system controlling faction Name FactionState SystemAllegiance SystemEconomy SystemSecondEconomy SystemGovernment SystemSecurity Population Wanted Factions: an array of info for the local minor factions Name FactionState Government Influence Happiness MyReputation PendingStates: array (if any) with State name and Trend value RecovingStates: array (if any)with State name and Trend value ActiveStates: array with State names (Note active states do not have a Trend value) SquadronFaction:true (if player is in squadron aligned to this faction) HappiestSystem:true (if player squadron faction, and this is happiest system) HomeSystem:true(if player squadron faction, and this is home system) Conflicts: an array of info about local conflicts (if any) WarType Status Faction1: { Name, Stake, WonDays } Faction2: { Name, Stake, WonDays } If the player is pledged to a Power in Powerplay, and the star system is involved in powerplay, Powers: a json array with the names of any powers contesting the system, or the name of the controlling power PowerplayState: the system state \u2013 one of (\"InPrepareRadius\", \"Prepared\", \"Exploited\", \"Contested\", \"Controlled\", \"Turmoil\", \"HomeSystem\") If starting in a system affected by the thargoid war: ThargoidWar CurrentState NextStateSuccess NextStateFailure SuccessStateReached WarProgress:0-1 values RemainingPorts EstimatedRemainingTime Example: Happiness values are: (Elated, Happy, Discontented, Unhappy, Despondent) Example: { \"timestamp\": \"2018-10-29 T10 : 05 : 21 Z \", \" event \": \" FSDJump \", \" StarSystem \": \" Eranin \", \" SystemAddress \": 2832631632594, \" StarPos \": [ - 22.84375 , 36.53125 , - 1.1875 ] , \" SystemAllegiance \": \" Independent \", \" SystemEconomy \": \" $ economy_Agri ; \", \"SystemEconomy_Localised\": \"Agriculture\", \"SystemSecondEconomy\": \"$economy_Refinery ; \", \"SystemSecondEconomy_Localised\": \"Refinery\", \"SystemGovernment\": \"$government_Anarchy ; \", \"SystemGovernment_Localised\": \"Anarchy\", \"SystemSecurity\": \"$GAlAXY_MAP_INFO_state_anarchy ; \", \"SystemSecurity_Localised\": \"Anarchy\", \"Population\": 450000, \"JumpDist\": 13.334, \"FuelUsed\": 0, \"FuelLevel\": 25.630281, \"Factions\": [ { \"Name\" : \"Eranin Expeditionary Institute\" , \"FactionState\" : \"None\" , \"Government\" : \"Cooperative\" , \"Influence\" : 0.17 , \"Allegiance\" : \"Independent\" , \"Happiness\" : \"$Faction_HappinessBand2;\" , \"Happiness_Localised\" : \"Happy\" , \"MyReputation\" : 0 }, { \"Name\" : \"Eranin Peoples Party\" , \"FactionState\" : \"CivilWar\" , \"Government\" : \"Communism\" , \"Influence\" : 0.226 , \"Allegiance\" : \"Independent\" , \"Happiness\" : \"$Faction_HappinessBand2;\" , \"Happiness_Localised\" : \"Happy\" , \"MyReputation\" : 29.9743 , \"ActiveStates\" : [ { \"State\" : \"CivilWar\" } ] } , { \"Name\": \"Pilots Federation Local Branch\", \"FactionState\": \"None\", \"Government\": \"Democracy\", \"Influence\": 0, \"Allegiance\": \"PilotsFederation\", \"Happiness\": \"$Faction_HappinessBand2 ; \", \"Happiness_Localised\": \"Happy\", \"MyReputation\": 82.918297 } , { \"Name\": \"Eranin Industry\", \"FactionState\": \"Outbreak\", \"Government\": \"Corporate\", \"Influence\": 0.209, \"Allegiance\": \"Independent\", \"Happiness\": \"$Faction_HappinessBand3 ; \", \"Happiness_Localised\": \"Discontented\", \"MyReputation\": 0, \"ActiveStates\": [ { \"State\" : \"Famine\" }, { \"State\" : \"Lockdown\" }, { \"State\" : \"Outbreak\" } ] } , { \"Name\": \"Eranin Federal Bridge\", \"FactionState\": \"CivilWar\", \"Government\": \"Dictatorship\", \"Influence\": 0.226, \"Allegiance\": \"Independent\", \"Happiness\": \"$Faction_HappinessBand2 ; \", \"Happiness_Localised\": \"Happy\", \"MyReputation\": 0, \"ActiveStates\": [ { \"State\" : \"CivilWar\" } ] } , { \"Name\": \"Mob of Eranin\", \"FactionState\": \"CivilLiberty\", \"Government\": \"Anarchy\", \"Influence\": 0.134, \"Allegiance\": \"Independent\", \"Happiness\": \"$Faction_HappinessBand1 ; \", \"Happiness_Localised\": \"Elated\", \"MyReputation\": 0, \"ActiveStates\": [ { \"State\" : \"Boom\" }, { \"State\" : \"CivilLiberty\" } ] } , { \"Name\": \"Terran Colonial Forces\", \"FactionState\": \"CivilUnrest\", \"Government\": \"Confederacy\", \"Influence\": 0.035, \"Allegiance\": \"Alliance\", \"Happiness\": \"$Faction_HappinessBand2 ; \", \"Happiness_Localised\": \"Happy\", \"MyReputation\": 0, \"ActiveStates\": [ { \"State\" : \"Boom\" }, { \"State\" : \"CivilUnrest\" } ] } ], \"SystemFaction\" : { \"Name\": \"Mob of Eranin\", \"FactionState\": \"CivilLiberty\" } } Example Conflict data: \" Conflicts \" : [ { \" WarType \" : \" war \" , \" Status \" : \" active \" , \" Faction1 \" : { \" Name \" : \" Movement for LHS 3163 League \" , \" Stake \" : \"\" , \" WonDays \" : 0 }, \" Faction2 \" : { \" Name \" : \" Official i Bootis Liberty Party \" , \" Stake \" : \" Red Bronco Farms \" , \" WonDays \" : 1 } } ] FSDTarget \u00b6 When written: when selecting a star system to jump to Note, when following a multi-jump route, this will typically appear for the next star, during a jump, ie after \"StartJump\" but before the \"FSDJump\" Parameters: Starsystem Name RemainingJumpsInRoute StarClass LeaveBody \u00b6 When written: when flying away from a planet, and distance increases above the 'Orbital Cruise' altitude Parameters: StarSystem SystemAddress Body BodyID Liftoff \u00b6 When written: when taking off from planet surface Parameters: Latitude (only if player flying in ship) Longitude (only if player flying in ship) StarSystem SystemAddress Body BodyID OnStation: bool OnPlanet: bool NearestDestination PlayerControlled: (bool) false if ship dismissed when player is in SRV, true if player is taking off Example: { \"timestamp\": \"2016-07-22T10:53:19Z\", \"event\": \"Liftoff\", \"Latitude\": 63.468872, \"Longitude\": 157.59938, \"PlayerControlled\": true } Location \u00b6 When written: at startup, or when being resurrected at a station Parameters: StarSystem: name of destination starsystem SystemAddress StarPos: star position, as a Json array [x, y, z], in light years Body: star or planet's body name BodyID BodyType DistFromStarLS: (unless close to main star) Docked: (bool) Latitude (If landed) Longitude (if landed) StationName: station name, (if docked) StationType: (if docked) MarketID: (if docked) SystemFaction: star system controlling faction Name FactionState SystemAllegiance SystemEconomy SystemSecondEconomy SystemGovernment SystemSecurity Wanted Factions: an array with info on local minor factions (similar to FSDJump) Conflicts: an array with info on local conflicts (similar to FSDJump) If the player is pledged to a Power in Powerplay, and the star system is involved in powerplay, Powers: a json array with the names of any powers contesting the system, or the name of the controlling power PowerplayState: the system state \u2013 one of (\"InPrepareRadius\", \"Prepared\", \"Exploited\", \"Contested\", \"Controlled\", \"Turmoil\", \"HomeSystem\") The faction data includes happiness info, and can include multiple active states If starting docked in a station, also include: StationFaction Name FactionState StationGovernment StationAllegiance StationServices StationEconomies (Array of (Name,Proportion) pairs ) If starting in a system affected by the thargoid war: ThargoidWar CurrentState NextStateSuccess NextStateFailure SuccessStateReached WarProgress:0-1 values RemainingPorts EstimatedRemainingTime New in Odyssey: Taxi: bool Multicrew: bool InSRV: bool OnFoot: bool StartJump \u00b6 When written: at the start of a Hyperspace or Supercruise jump (start of countdown) Parameters: JumpType: \"Hyperspace\" or \"Supercruise\" Taxi: True if the player is in a taxi StarSystem: name of destination system (for a hyperspace jump) SystemAddress StarClass: star type (only for a hyperspace jump) SupercruiseEntry \u00b6 When written: entering supercruise from normal space Parameters: Starsystem Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"SupercruiseEntry\", \"StarSystem\": \"Yuetu\" } SupercruiseExit \u00b6 When written: leaving supercruise for normal space Parameters: Starsystem Body BodyID BodyType Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"SupercruiseExit\", \"StarSystem\": \"Yuetu\", \"Body\": \"Yuetu B\" } Touchdown \u00b6 When written: landing on a planet surface Parameters: Latitude (only if player is landing) Longitude (only if player is landing) StarSystem SystemAddress Body BodyID OnStation: bool OnPlanet: bool NearestDestination PlayerControlled: (bool) false if ship was recalled from SRV, true if player is landing The NearestDestination is included if within 50km of a location listed in the nav panel Example: { \"timestamp\" : \"2019-05-13T13:20:18Z\" , \"event\" : \"Touchdown\" , \"PlayerControlled\" : true , \"Latitude\" : 10.503607 , \"Longitude\" : 102.78981 , \"NearestDestination\" : \"$SAA_Unknown_Signal:#type=$SAA_SignalType_Geological;:#index=9;\" , \"NearestDestination_Localised\" : \"Surface signal: Geological (9)\" } Undocked \u00b6 When written: liftoff from a landing pad in a station, outpost or settlement Parameters: StationName: name of station MarketID Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"Undocked\", \"StationName\": \"Long Sight Base\" } NavRoute \u00b6 When plotting a multi-star route, the file \"NavRoute.json\" is written in the same directory as the journal, with a list of stars along that route Parameters: Route StarSystem: (name) SystemAddress: (number) Starpos: [ x, y, z ] StarClass Example: { \"timestamp\": \"2020-04-27T08:02:52Z\", \"event\": \"Route\", \"Route\": [ { \"StarSystem\": \"i Bootis\", \"SystemAddress\": 1281787693419, \"StarPos\": [-22.37500,34.84375,4.00000], \"StarClass\": \"G\" }, { \"StarSystem\": \"Acihaut\", \"SystemAddress\": 11665802405289, \"StarPos\": [-18.50000,25.28125,-4.00000], \"StarClass\": \"M\" }, { \"StarSystem\": \"LHS 455\", \"SystemAddress\": 3686969379179, \"StarPos\": [-16.90625,10.21875,-3.43750], \"StarClass\": \"DQ\" }, { \"StarSystem\": \"SPF-LF 1\", \"SystemAddress\": 22661187052961, \"StarPos\": [2.90625,6.31250,-9.56250], \"StarClass\": \"M\" }, { \"StarSystem\": \"Luyten's Star\", \"SystemAddress\":7 268024264097, \"StarPos\": [6.56250,2.34375,-10.25000], \"StarClass\": \"M\" }] } ] } NavRouteClear \u00b6 When written: When the current plotted nav route is cleared No parameters Example: { \"timestamp\": \"2022-06-17T16:04:02Z\", \"event\": \"NavRouteClear\" }","title":"Travel"},{"location":"travel/#travel","text":"","title":"Travel"},{"location":"travel/#approachbody","text":"When written: when in Supercruise, and distance from planet drops to within the 'Orbital Cruise' zone Parameters: StarSystem SystemAddress Body BodyID { \"timestamp\": \"2017-09-27T15:21:05Z\", \"event\": \"ApproachBody\", \"StarSystem\": \"Eranin\", \"Body\": \"Eranin 2\" }","title":"ApproachBody"},{"location":"travel/#docked","text":"When written: when landing at landing pad in a space station, outpost, or surface settlement Parameters: StationName: name of station MarketID SystemAddress StationType: type of station StarSystem: name of system CockpitBreach:true (only if landing with breached cockpit) StationFaction: station's controlling faction Name FactionState StationAllegiance StationEconomy : (station's primary economy) StationEconomies: (array of name and proportion values) StationGovernment DistFromStarLS StationServices: (Array of strings) Wanted: (only if docking when wanted locally) ActiveFine: true (if any fine is active) LandingPads: Small Medium Large StationState The 'anonymous docking' protocol comes into effect if you're either Wanted (ie have a local bounty) or have an ActiveFine Example: { \"timestamp\": \"2018-03-07 T12 : 22 : 25 Z \", \" event \": \" Docked \", \" StationName \": \" Jenner Orbital \", \" StationType \": \" Outpost \", \" StarSystem \": \" Luhman 16 \", \" SystemAddress \": 22960358574928, \" MarketID \": 3228883456, \" StationFaction \": { \" Name \": \" Union of Luhman 16 Values Party \", \" FactionState \": \" CivilWar \" }, \" StationGovernment \": \" $ government_Democracy ; \", \"StationGovernment_Localised\": \"Democracy\", \"StationAllegiance\": \"Federation\", \"StationServices\": [ \"Dock\" , \"Autodock\" , \"BlackMarket\" , \"Commodities\" , \"Contacts\" , \"Exploration\" , \"Missions\" , \"Outfitting\" , \"CrewLounge\" , \"Rearm\" , \"Refuel\" , \"Workshop\" , \"MissionsGenerated\" , \"FlightController\" , \"StationOperations\" , \"Powerplay\" , \"SearchAndRescue\" ] , \"StationEconomy\": \"$economy_Refinery ; \", \"StationEconomy_Localised\": \"Refinery\", \"StationEconomies\": [ { \"Name\" : \"$economy_Refinery;\" , \"Name_Localised\" : \"Refinery\" , \"Proportion\" : 0.76 }, { \"Name\" : \"$economy_Extraction;\" , \"Name_Localised\" : \"Extraction\" , \"Proportion\" : 0.24 } ] , \"DistFromStarLS\": 10.061876 } StationServices can include: Dock, Autodock, BlackMarket, Commodities, Contacts, Exploration, Initiatives, Missions, Outfitting,CrewLounge, Rearm, Refuel, Repair, Shipyard, Tuning, Workshop, MissionsGenerated, Facilitator, Research, FlightController, StationOperations, OnDockMission, Powerplay, SearchAndRescue, New in v3.7: shop, carriermanagement, carrierfuel, carriervendor, livery, modulepacks, voucherredemption StationState can be any of the following: UnderRepairs, Damaged, Abandoned, UnderAttack","title":"Docked"},{"location":"travel/#dockingcancelled","text":"When written: when the player cancels a docking request Parameters: StationName: name of station StationType MarketID","title":"DockingCancelled"},{"location":"travel/#dockingdenied","text":"When written: when the station denies a docking request Parameters: StationName: name of station StationType MarketID Reason: reason for denial Reasons include: NoSpace, TooLarge, Hostile, Offences, Distance, ActiveFighter, NoReason","title":"DockingDenied"},{"location":"travel/#dockinggranted","text":"When written: when a docking request is granted Parameters: StationName: name of station StationType MarketID LandingPad: pad number","title":"DockingGranted"},{"location":"travel/#dockingrequested","text":"When written: when the player requests docking at a station Parameters: StationName: name of station StationType MarketID LandingPads: Small Medium Large","title":"DockingRequested"},{"location":"travel/#dockingtimeout","text":"When written: when a docking request has timed out Parameters: StationName: name of station StationType MarketID","title":"DockingTimeout"},{"location":"travel/#fsdjump","text":"When written: when jumping from one star system to another Parameters: StarSystem: name of destination starsystem SystemAddress StarPos: star position, as a Json array [x, y, z], in light years Body: star's body name JumpDist: distance jumped FuelUsed FuelLevel BoostUsed: whether FSD boost was used SystemFaction: system controlling faction Name FactionState SystemAllegiance SystemEconomy SystemSecondEconomy SystemGovernment SystemSecurity Population Wanted Factions: an array of info for the local minor factions Name FactionState Government Influence Happiness MyReputation PendingStates: array (if any) with State name and Trend value RecovingStates: array (if any)with State name and Trend value ActiveStates: array with State names (Note active states do not have a Trend value) SquadronFaction:true (if player is in squadron aligned to this faction) HappiestSystem:true (if player squadron faction, and this is happiest system) HomeSystem:true(if player squadron faction, and this is home system) Conflicts: an array of info about local conflicts (if any) WarType Status Faction1: { Name, Stake, WonDays } Faction2: { Name, Stake, WonDays } If the player is pledged to a Power in Powerplay, and the star system is involved in powerplay, Powers: a json array with the names of any powers contesting the system, or the name of the controlling power PowerplayState: the system state \u2013 one of (\"InPrepareRadius\", \"Prepared\", \"Exploited\", \"Contested\", \"Controlled\", \"Turmoil\", \"HomeSystem\") If starting in a system affected by the thargoid war: ThargoidWar CurrentState NextStateSuccess NextStateFailure SuccessStateReached WarProgress:0-1 values RemainingPorts EstimatedRemainingTime Example: Happiness values are: (Elated, Happy, Discontented, Unhappy, Despondent) Example: { \"timestamp\": \"2018-10-29 T10 : 05 : 21 Z \", \" event \": \" FSDJump \", \" StarSystem \": \" Eranin \", \" SystemAddress \": 2832631632594, \" StarPos \": [ - 22.84375 , 36.53125 , - 1.1875 ] , \" SystemAllegiance \": \" Independent \", \" SystemEconomy \": \" $ economy_Agri ; \", \"SystemEconomy_Localised\": \"Agriculture\", \"SystemSecondEconomy\": \"$economy_Refinery ; \", \"SystemSecondEconomy_Localised\": \"Refinery\", \"SystemGovernment\": \"$government_Anarchy ; \", \"SystemGovernment_Localised\": \"Anarchy\", \"SystemSecurity\": \"$GAlAXY_MAP_INFO_state_anarchy ; \", \"SystemSecurity_Localised\": \"Anarchy\", \"Population\": 450000, \"JumpDist\": 13.334, \"FuelUsed\": 0, \"FuelLevel\": 25.630281, \"Factions\": [ { \"Name\" : \"Eranin Expeditionary Institute\" , \"FactionState\" : \"None\" , \"Government\" : \"Cooperative\" , \"Influence\" : 0.17 , \"Allegiance\" : \"Independent\" , \"Happiness\" : \"$Faction_HappinessBand2;\" , \"Happiness_Localised\" : \"Happy\" , \"MyReputation\" : 0 }, { \"Name\" : \"Eranin Peoples Party\" , \"FactionState\" : \"CivilWar\" , \"Government\" : \"Communism\" , \"Influence\" : 0.226 , \"Allegiance\" : \"Independent\" , \"Happiness\" : \"$Faction_HappinessBand2;\" , \"Happiness_Localised\" : \"Happy\" , \"MyReputation\" : 29.9743 , \"ActiveStates\" : [ { \"State\" : \"CivilWar\" } ] } , { \"Name\": \"Pilots Federation Local Branch\", \"FactionState\": \"None\", \"Government\": \"Democracy\", \"Influence\": 0, \"Allegiance\": \"PilotsFederation\", \"Happiness\": \"$Faction_HappinessBand2 ; \", \"Happiness_Localised\": \"Happy\", \"MyReputation\": 82.918297 } , { \"Name\": \"Eranin Industry\", \"FactionState\": \"Outbreak\", \"Government\": \"Corporate\", \"Influence\": 0.209, \"Allegiance\": \"Independent\", \"Happiness\": \"$Faction_HappinessBand3 ; \", \"Happiness_Localised\": \"Discontented\", \"MyReputation\": 0, \"ActiveStates\": [ { \"State\" : \"Famine\" }, { \"State\" : \"Lockdown\" }, { \"State\" : \"Outbreak\" } ] } , { \"Name\": \"Eranin Federal Bridge\", \"FactionState\": \"CivilWar\", \"Government\": \"Dictatorship\", \"Influence\": 0.226, \"Allegiance\": \"Independent\", \"Happiness\": \"$Faction_HappinessBand2 ; \", \"Happiness_Localised\": \"Happy\", \"MyReputation\": 0, \"ActiveStates\": [ { \"State\" : \"CivilWar\" } ] } , { \"Name\": \"Mob of Eranin\", \"FactionState\": \"CivilLiberty\", \"Government\": \"Anarchy\", \"Influence\": 0.134, \"Allegiance\": \"Independent\", \"Happiness\": \"$Faction_HappinessBand1 ; \", \"Happiness_Localised\": \"Elated\", \"MyReputation\": 0, \"ActiveStates\": [ { \"State\" : \"Boom\" }, { \"State\" : \"CivilLiberty\" } ] } , { \"Name\": \"Terran Colonial Forces\", \"FactionState\": \"CivilUnrest\", \"Government\": \"Confederacy\", \"Influence\": 0.035, \"Allegiance\": \"Alliance\", \"Happiness\": \"$Faction_HappinessBand2 ; \", \"Happiness_Localised\": \"Happy\", \"MyReputation\": 0, \"ActiveStates\": [ { \"State\" : \"Boom\" }, { \"State\" : \"CivilUnrest\" } ] } ], \"SystemFaction\" : { \"Name\": \"Mob of Eranin\", \"FactionState\": \"CivilLiberty\" } } Example Conflict data: \" Conflicts \" : [ { \" WarType \" : \" war \" , \" Status \" : \" active \" , \" Faction1 \" : { \" Name \" : \" Movement for LHS 3163 League \" , \" Stake \" : \"\" , \" WonDays \" : 0 }, \" Faction2 \" : { \" Name \" : \" Official i Bootis Liberty Party \" , \" Stake \" : \" Red Bronco Farms \" , \" WonDays \" : 1 } } ]","title":"FSDJump"},{"location":"travel/#fsdtarget","text":"When written: when selecting a star system to jump to Note, when following a multi-jump route, this will typically appear for the next star, during a jump, ie after \"StartJump\" but before the \"FSDJump\" Parameters: Starsystem Name RemainingJumpsInRoute StarClass","title":"FSDTarget"},{"location":"travel/#leavebody","text":"When written: when flying away from a planet, and distance increases above the 'Orbital Cruise' altitude Parameters: StarSystem SystemAddress Body BodyID","title":"LeaveBody"},{"location":"travel/#liftoff","text":"When written: when taking off from planet surface Parameters: Latitude (only if player flying in ship) Longitude (only if player flying in ship) StarSystem SystemAddress Body BodyID OnStation: bool OnPlanet: bool NearestDestination PlayerControlled: (bool) false if ship dismissed when player is in SRV, true if player is taking off Example: { \"timestamp\": \"2016-07-22T10:53:19Z\", \"event\": \"Liftoff\", \"Latitude\": 63.468872, \"Longitude\": 157.59938, \"PlayerControlled\": true }","title":"Liftoff"},{"location":"travel/#location","text":"When written: at startup, or when being resurrected at a station Parameters: StarSystem: name of destination starsystem SystemAddress StarPos: star position, as a Json array [x, y, z], in light years Body: star or planet's body name BodyID BodyType DistFromStarLS: (unless close to main star) Docked: (bool) Latitude (If landed) Longitude (if landed) StationName: station name, (if docked) StationType: (if docked) MarketID: (if docked) SystemFaction: star system controlling faction Name FactionState SystemAllegiance SystemEconomy SystemSecondEconomy SystemGovernment SystemSecurity Wanted Factions: an array with info on local minor factions (similar to FSDJump) Conflicts: an array with info on local conflicts (similar to FSDJump) If the player is pledged to a Power in Powerplay, and the star system is involved in powerplay, Powers: a json array with the names of any powers contesting the system, or the name of the controlling power PowerplayState: the system state \u2013 one of (\"InPrepareRadius\", \"Prepared\", \"Exploited\", \"Contested\", \"Controlled\", \"Turmoil\", \"HomeSystem\") The faction data includes happiness info, and can include multiple active states If starting docked in a station, also include: StationFaction Name FactionState StationGovernment StationAllegiance StationServices StationEconomies (Array of (Name,Proportion) pairs ) If starting in a system affected by the thargoid war: ThargoidWar CurrentState NextStateSuccess NextStateFailure SuccessStateReached WarProgress:0-1 values RemainingPorts EstimatedRemainingTime New in Odyssey: Taxi: bool Multicrew: bool InSRV: bool OnFoot: bool","title":"Location"},{"location":"travel/#startjump","text":"When written: at the start of a Hyperspace or Supercruise jump (start of countdown) Parameters: JumpType: \"Hyperspace\" or \"Supercruise\" Taxi: True if the player is in a taxi StarSystem: name of destination system (for a hyperspace jump) SystemAddress StarClass: star type (only for a hyperspace jump)","title":"StartJump"},{"location":"travel/#supercruiseentry","text":"When written: entering supercruise from normal space Parameters: Starsystem Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"SupercruiseEntry\", \"StarSystem\": \"Yuetu\" }","title":"SupercruiseEntry"},{"location":"travel/#supercruiseexit","text":"When written: leaving supercruise for normal space Parameters: Starsystem Body BodyID BodyType Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"SupercruiseExit\", \"StarSystem\": \"Yuetu\", \"Body\": \"Yuetu B\" }","title":"SupercruiseExit"},{"location":"travel/#touchdown","text":"When written: landing on a planet surface Parameters: Latitude (only if player is landing) Longitude (only if player is landing) StarSystem SystemAddress Body BodyID OnStation: bool OnPlanet: bool NearestDestination PlayerControlled: (bool) false if ship was recalled from SRV, true if player is landing The NearestDestination is included if within 50km of a location listed in the nav panel Example: { \"timestamp\" : \"2019-05-13T13:20:18Z\" , \"event\" : \"Touchdown\" , \"PlayerControlled\" : true , \"Latitude\" : 10.503607 , \"Longitude\" : 102.78981 , \"NearestDestination\" : \"$SAA_Unknown_Signal:#type=$SAA_SignalType_Geological;:#index=9;\" , \"NearestDestination_Localised\" : \"Surface signal: Geological (9)\" }","title":"Touchdown"},{"location":"travel/#undocked","text":"When written: liftoff from a landing pad in a station, outpost or settlement Parameters: StationName: name of station MarketID Example: { \"timestamp\": \"2016-06-10T14:32:03Z\", \"event\": \"Undocked\", \"StationName\": \"Long Sight Base\" }","title":"Undocked"},{"location":"travel/#navroute","text":"When plotting a multi-star route, the file \"NavRoute.json\" is written in the same directory as the journal, with a list of stars along that route Parameters: Route StarSystem: (name) SystemAddress: (number) Starpos: [ x, y, z ] StarClass Example: { \"timestamp\": \"2020-04-27T08:02:52Z\", \"event\": \"Route\", \"Route\": [ { \"StarSystem\": \"i Bootis\", \"SystemAddress\": 1281787693419, \"StarPos\": [-22.37500,34.84375,4.00000], \"StarClass\": \"G\" }, { \"StarSystem\": \"Acihaut\", \"SystemAddress\": 11665802405289, \"StarPos\": [-18.50000,25.28125,-4.00000], \"StarClass\": \"M\" }, { \"StarSystem\": \"LHS 455\", \"SystemAddress\": 3686969379179, \"StarPos\": [-16.90625,10.21875,-3.43750], \"StarClass\": \"DQ\" }, { \"StarSystem\": \"SPF-LF 1\", \"SystemAddress\": 22661187052961, \"StarPos\": [2.90625,6.31250,-9.56250], \"StarClass\": \"M\" }, { \"StarSystem\": \"Luyten's Star\", \"SystemAddress\":7 268024264097, \"StarPos\": [6.56250,2.34375,-10.25000], \"StarClass\": \"M\" }] } ] }","title":"NavRoute"},{"location":"travel/#navrouteclear","text":"When written: When the current plotted nav route is cleared No parameters Example: { \"timestamp\": \"2022-06-17T16:04:02Z\", \"event\": \"NavRouteClear\" }","title":"NavRouteClear"}]}